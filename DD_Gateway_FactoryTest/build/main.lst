ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata.LED_Test.str1.4,"aMS",%progbits,1
  20              		.align	2
  21              	.LC0:
  22 0000 443600   		.ascii	"D6\000"
  23 0003 00       		.align	2
  24              	.LC1:
  25 0004 443700   		.ascii	"D7\000"
  26 0007 00       		.align	2
  27              	.LC2:
  28 0008 696E7661 		.ascii	"invalid led name\000"
  28      6C696420 
  28      6C656420 
  28      6E616D65 
  28      00
  29 0019 000000   		.align	2
  30              	.LC3:
  31 001c 6F6E00   		.ascii	"on\000"
  32 001f 00       		.align	2
  33              	.LC4:
  34 0020 6F666600 		.ascii	"off\000"
  35              		.align	2
  36              	.LC5:
  37 0024 746F6767 		.ascii	"toggle\000"
  37      6C6500
  38 002b 00       		.align	2
  39              	.LC6:
  40 002c 626C696E 		.ascii	"blink\000"
  40      6B00
  41 0032 0000     		.align	2
  42              	.LC7:
  43 0034 696E7661 		.ascii	"invalid cmd type\000"
  43      6C696420 
  43      636D6420 
  43      74797065 
  43      00
  44              		.section	.text.LED_Test,"ax",%progbits
  45              		.align	1
  46              		.global	LED_Test
  47              		.syntax unified
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 2


  48              		.thumb
  49              		.thumb_func
  51              	LED_Test:
  52              	.LVL0:
  53              	.LFB295:
  54              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "led.h"
  22:Core/Src/main.c **** #include "adc.h"
  23:Core/Src/main.c **** #include "spi.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** #include "timer.h"
  27:Core/Src/main.c **** #include "math.h"
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  31:Core/Src/main.c **** #include "shell_port.h"
  32:Core/Src/main.c **** #include "stdint.h"
  33:Core/Src/main.c **** #include <stdio.h>
  34:Core/Src/main.c **** #include <string.h>
  35:Core/Src/main.c **** #include <stdarg.h>
  36:Core/Src/main.c **** #include "rs485.h"
  37:Core/Src/main.c **** #include "W25QXX.h"
  38:Core/Src/main.c **** #include "ATGM332D.h"
  39:Core/Src/main.c **** #include "EC2x.h"
  40:Core/Src/main.c **** #include "y_lora.h"
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END Includes */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PTD */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  50:Core/Src/main.c **** /* USER CODE BEGIN PD */
  51:Core/Src/main.c **** /* USER CODE END PD */
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 3


  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  54:Core/Src/main.c **** /* USER CODE BEGIN PM */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PM */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE BEGIN PV */
  61:Core/Src/main.c **** int bds_dev = -1;
  62:Core/Src/main.c **** /* USER CODE END PV */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  65:Core/Src/main.c **** void SystemClock_Config(void);
  66:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /**
  76:Core/Src/main.c ****   * @brief  The application entry point.
  77:Core/Src/main.c ****   * @retval int
  78:Core/Src/main.c ****   */
  79:Core/Src/main.c **** int main(void)
  80:Core/Src/main.c **** {
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Core/Src/main.c ****   HAL_Init();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  91:Core/Src/main.c ****   timer_init();//定时事件列表初始化，需要在时基更新函数运行之前进行
  92:Core/Src/main.c ****   /* USER CODE END Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Configure the system clock */
  95:Core/Src/main.c ****   SystemClock_Config();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Initialize all configured peripherals */
 102:Core/Src/main.c ****   MX_GPIO_Init();
 103:Core/Src/main.c ****   LED_Init(&dev_led[0]);
 104:Core/Src/main.c ****   LED_Init(&dev_led[1]);
 105:Core/Src/main.c ****   MX_ADC1_Init();
 106:Core/Src/main.c ****   MX_SPI2_Init();
 107:Core/Src/main.c ****   MX_SPI3_Init();
 108:Core/Src/main.c ****   MX_USART1_UART_Init();
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 4


 109:Core/Src/main.c ****   MX_USART2_UART_Init();
 110:Core/Src/main.c ****   MX_USART3_UART_Init();
 111:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 112:Core/Src/main.c ****   /* TODO:fix shell initialize */
 113:Core/Src/main.c ****   User_Shell_Init();
 114:Core/Src/main.c ****   BSP_W25Qx_Init();
 115:Core/Src/main.c ****   bds_dev = atgm_open("uart2/bds_0");
 116:Core/Src/main.c ****   ec2x_open("uart1/ec200s");
 117:Core/Src/main.c ****   timer_insert(1000,-1,LED_Toggle,&dev_led[0]);
 118:Core/Src/main.c ****   timer_insert(1000,10,LED_Toggle,&dev_led[1]);
 119:Core/Src/main.c ****   if(Lora_Init())
 120:Core/Src/main.c ****   ;
 121:Core/Src/main.c ****     //y_lora_set_rx_time(lora_dev, 0);
 122:Core/Src/main.c ****   else
 123:Core/Src/main.c ****     ;
 124:Core/Src/main.c ****   /* USER CODE END 2 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Infinite loop */
 127:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 128:Core/Src/main.c ****  
 129:Core/Src/main.c ****   while (1)
 130:Core/Src/main.c ****   {
 131:Core/Src/main.c ****    
 132:Core/Src/main.c ****     /* USER CODE END WHILE */
 133:Core/Src/main.c ****     /* ADC 电压监测接口测试*/
 134:Core/Src/main.c ****     /* LED 测试 */ 
 135:Core/Src/main.c ****     /* 亮度监测接口测试 */
 136:Core/Src/main.c ****     
 137:Core/Src/main.c ****     /* RS485接口测试 */
 138:Core/Src/main.c ****      /* Flash 接口测试 */
 139:Core/Src/main.c ****      /* LORA 1发送 LORA2 接收测试*/
 140:Core/Src/main.c ****      /* LORA2发送 LORA1 接收测试*/
 141:Core/Src/main.c ****      /* Cat-1 测试 */
 142:Core/Src/main.c ****      /* ETH 测试 */
 143:Core/Src/main.c ****      /* ATGM223D接口测试 */
 144:Core/Src/main.c ****     // ec2x_fms_proccess();
 145:Core/Src/main.c ****      HAL_Delay(100);
 146:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 147:Core/Src/main.c ****   }
 148:Core/Src/main.c ****   /* USER CODE END 3 */
 149:Core/Src/main.c **** }
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** /**
 152:Core/Src/main.c ****   * @brief System Clock Configuration
 153:Core/Src/main.c ****   * @retval None
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c **** void SystemClock_Config(void)
 156:Core/Src/main.c **** {
 157:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 158:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     Error_Handler();
 165:Core/Src/main.c ****   }
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 5


 166:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 167:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 170:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 20;
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 178:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****     Error_Handler();
 181:Core/Src/main.c ****   }
 182:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 185:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 186:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 187:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 188:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 189:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c **** }
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****  * @brief 
 200:Core/Src/main.c ****  * 
 201:Core/Src/main.c ****  * @param a 
 202:Core/Src/main.c ****  * @param b 
 203:Core/Src/main.c ****  * @param str 
 204:Core/Src/main.c ****  * @param val 
 205:Core/Src/main.c ****  */
 206:Core/Src/main.c **** void LDR_Value_Get(int a, char b, char *str,float val)
 207:Core/Src/main.c **** {   
 208:Core/Src/main.c ****     uint32_t ldr_adc_value = 0;
 209:Core/Src/main.c ****     ldr_adc_value = ADC_Average_Get(10,50);
 210:Core/Src/main.c ****     shellPrint(&shell,"LDR:%d, input int:%d, input char:%c, input str:%s, input float:%.4f \r\n",ld
 211:Core/Src/main.c **** }
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** /**
 214:Core/Src/main.c ****  * @brief 
 215:Core/Src/main.c ****  * 
 216:Core/Src/main.c ****  */
 217:Core/Src/main.c **** SHELL_EXPORT_CMD_AGENCY(
 218:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 219:Core/Src/main.c **** LDR_Get, LDR_Value_Get, get ldr value,p1,(char)p2,(char *)p3,SHELL_PARAM_FLOAT(p4));
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** /**
 222:Core/Src/main.c ****  * @brief 
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 6


 223:Core/Src/main.c ****  * 
 224:Core/Src/main.c ****  * @param name 
 225:Core/Src/main.c ****  * @param type 
 226:Core/Src/main.c ****  * @param ... 
 227:Core/Src/main.c ****  */
 228:Core/Src/main.c **** void LED_Test(char *name, char *type, ...){
  55              		.loc 1 228 43 view -0
  56              		.cfi_startproc
  57              		@ args = 4, pretend = 12, frame = 8
  58              		@ frame_needed = 0, uses_anonymous_args = 1
  59              		.loc 1 228 43 is_stmt 0 view .LVU1
  60 0000 0EB4     		push	{r1, r2, r3}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 12
  63              		.cfi_offset 1, -12
  64              		.cfi_offset 2, -8
  65              		.cfi_offset 3, -4
  66 0002 30B5     		push	{r4, r5, lr}
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 24
  69              		.cfi_offset 4, -24
  70              		.cfi_offset 5, -20
  71              		.cfi_offset 14, -16
  72 0004 82B0     		sub	sp, sp, #8
  73              	.LCFI2:
  74              		.cfi_def_cfa_offset 32
  75 0006 0446     		mov	r4, r0
  76 0008 059D     		ldr	r5, [sp, #20]
 229:Core/Src/main.c ****   LED_HandleTypeDef *test_led;
  77              		.loc 1 229 3 is_stmt 1 view .LVU2
 230:Core/Src/main.c ****   uint32_t gap = 0;
  78              		.loc 1 230 3 view .LVU3
  79              	.LVL1:
 231:Core/Src/main.c ****   uint8_t cycle = 0;
  80              		.loc 1 231 3 view .LVU4
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   if(strcmp(name,"D6") == 0)
  81              		.loc 1 233 3 view .LVU5
  82              		.loc 1 233 6 is_stmt 0 view .LVU6
  83 000a 2349     		ldr	r1, .L15
  84 000c FFF7FEFF 		bl	strcmp
  85              	.LVL2:
  86              		.loc 1 233 5 view .LVU7
  87 0010 58B1     		cbz	r0, .L8
 234:Core/Src/main.c ****     test_led = &dev_led[0];
 235:Core/Src/main.c ****   else if((strcmp(name,"D7") == 0))
  88              		.loc 1 235 8 is_stmt 1 view .LVU8
  89              		.loc 1 235 12 is_stmt 0 view .LVU9
  90 0012 2249     		ldr	r1, .L15+4
  91 0014 2046     		mov	r0, r4
  92 0016 FFF7FEFF 		bl	strcmp
  93              	.LVL3:
  94              		.loc 1 235 10 view .LVU10
  95 001a 08B9     		cbnz	r0, .L11
 236:Core/Src/main.c ****     test_led = &dev_led[1];
  96              		.loc 1 236 14 view .LVU11
  97 001c 204C     		ldr	r4, .L15+8
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 7


  98              	.LVL4:
  99              		.loc 1 236 14 view .LVU12
 100 001e 05E0     		b	.L2
 101              	.LVL5:
 102              	.L11:
 237:Core/Src/main.c ****   else{
 238:Core/Src/main.c ****     shellPrint(&shell,"invalid led name");
 103              		.loc 1 238 5 is_stmt 1 view .LVU13
 104 0020 2049     		ldr	r1, .L15+12
 105 0022 2148     		ldr	r0, .L15+16
 106 0024 FFF7FEFF 		bl	shellPrint
 107              	.LVL6:
 239:Core/Src/main.c ****     return;
 108              		.loc 1 239 5 view .LVU14
 109 0028 24E0     		b	.L1
 110              	.L8:
 234:Core/Src/main.c ****   else if((strcmp(name,"D7") == 0))
 111              		.loc 1 234 14 is_stmt 0 view .LVU15
 112 002a 204C     		ldr	r4, .L15+20
 113              	.LVL7:
 114              	.L2:
 240:Core/Src/main.c ****   }
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   if(strcmp(type,"on") == 0)
 115              		.loc 1 242 3 is_stmt 1 view .LVU16
 116              		.loc 1 242 6 is_stmt 0 view .LVU17
 117 002c 2049     		ldr	r1, .L15+24
 118 002e 2846     		mov	r0, r5
 119 0030 FFF7FEFF 		bl	strcmp
 120              	.LVL8:
 121              		.loc 1 242 5 view .LVU18
 122 0034 D8B1     		cbz	r0, .L12
 243:Core/Src/main.c ****     LED_On(test_led);
 244:Core/Src/main.c ****   else if(strcmp(type,"off") == 0)
 123              		.loc 1 244 8 is_stmt 1 view .LVU19
 124              		.loc 1 244 11 is_stmt 0 view .LVU20
 125 0036 1F49     		ldr	r1, .L15+28
 126 0038 2846     		mov	r0, r5
 127 003a FFF7FEFF 		bl	strcmp
 128              	.LVL9:
 129              		.loc 1 244 10 view .LVU21
 130 003e F0B1     		cbz	r0, .L13
 245:Core/Src/main.c ****     LED_Off(test_led);
 246:Core/Src/main.c ****   else if(strcmp(type,"toggle") == 0)
 131              		.loc 1 246 8 is_stmt 1 view .LVU22
 132              		.loc 1 246 11 is_stmt 0 view .LVU23
 133 0040 1D49     		ldr	r1, .L15+32
 134 0042 2846     		mov	r0, r5
 135 0044 FFF7FEFF 		bl	strcmp
 136              	.LVL10:
 137              		.loc 1 246 10 view .LVU24
 138 0048 E8B1     		cbz	r0, .L14
 247:Core/Src/main.c ****     LED_Toggle(test_led);
 248:Core/Src/main.c ****   else if(strcmp(type,"blink") == 0)
 139              		.loc 1 248 8 is_stmt 1 view .LVU25
 140              		.loc 1 248 11 is_stmt 0 view .LVU26
 141 004a 1C49     		ldr	r1, .L15+36
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 8


 142 004c 2846     		mov	r0, r5
 143 004e FFF7FEFF 		bl	strcmp
 144              	.LVL11:
 145              		.loc 1 248 10 view .LVU27
 146 0052 E0B9     		cbnz	r0, .L7
 147              	.LBB4:
 249:Core/Src/main.c ****   {
 250:Core/Src/main.c ****     va_list p_args;
 148              		.loc 1 250 5 is_stmt 1 view .LVU28
 251:Core/Src/main.c ****     va_start(p_args,type);
 149              		.loc 1 251 5 view .LVU29
 150 0054 06AA     		add	r2, sp, #24
 151 0056 0192     		str	r2, [sp, #4]
 252:Core/Src/main.c ****     gap = va_arg(p_args,int);
 152              		.loc 1 252 5 view .LVU30
 153              		.loc 1 252 11 is_stmt 0 view .LVU31
 154 0058 07AB     		add	r3, sp, #28
 155 005a 0193     		str	r3, [sp, #4]
 156              	.LVL12:
 253:Core/Src/main.c ****     cycle = va_arg(p_args,int);
 157              		.loc 1 253 5 is_stmt 1 view .LVU32
 158              		.loc 1 253 13 is_stmt 0 view .LVU33
 159 005c 08AB     		add	r3, sp, #32
 160 005e 0193     		str	r3, [sp, #4]
 161              	.LVL13:
 254:Core/Src/main.c ****     va_end(p_args);
 162              		.loc 1 254 5 is_stmt 1 view .LVU34
 255:Core/Src/main.c ****     LED_Blink(test_led, gap, cycle);
 163              		.loc 1 255 5 view .LVU35
 164 0060 9DF81C20 		ldrb	r2, [sp, #28]	@ zero_extendqisi2
 165 0064 0699     		ldr	r1, [sp, #24]
 166 0066 2046     		mov	r0, r4
 167 0068 FFF7FEFF 		bl	LED_Blink
 168              	.LVL14:
 169              		.loc 1 255 5 is_stmt 0 view .LVU36
 170              	.LBE4:
 171 006c 02E0     		b	.L1
 172              	.LVL15:
 173              	.L12:
 243:Core/Src/main.c ****   else if(strcmp(type,"off") == 0)
 174              		.loc 1 243 5 is_stmt 1 view .LVU37
 175 006e 2046     		mov	r0, r4
 176 0070 FFF7FEFF 		bl	LED_On
 177              	.LVL16:
 178              	.L1:
 256:Core/Src/main.c ****   }
 257:Core/Src/main.c ****   else{
 258:Core/Src/main.c ****     shellPrint(&shell,"invalid cmd type");
 259:Core/Src/main.c ****     return;
 260:Core/Src/main.c ****   }
 261:Core/Src/main.c **** }
 179              		.loc 1 261 1 is_stmt 0 view .LVU38
 180 0074 02B0     		add	sp, sp, #8
 181              	.LCFI3:
 182              		.cfi_remember_state
 183              		.cfi_def_cfa_offset 24
 184              		@ sp needed
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 9


 185 0076 BDE83040 		pop	{r4, r5, lr}
 186              	.LCFI4:
 187              		.cfi_restore 14
 188              		.cfi_restore 5
 189              		.cfi_restore 4
 190              		.cfi_def_cfa_offset 12
 191 007a 03B0     		add	sp, sp, #12
 192              	.LCFI5:
 193              		.cfi_restore 3
 194              		.cfi_restore 2
 195              		.cfi_restore 1
 196              		.cfi_def_cfa_offset 0
 197 007c 7047     		bx	lr
 198              	.LVL17:
 199              	.L13:
 200              	.LCFI6:
 201              		.cfi_restore_state
 245:Core/Src/main.c ****   else if(strcmp(type,"toggle") == 0)
 202              		.loc 1 245 5 is_stmt 1 view .LVU39
 203 007e 2046     		mov	r0, r4
 204 0080 FFF7FEFF 		bl	LED_Off
 205              	.LVL18:
 206 0084 F6E7     		b	.L1
 207              	.L14:
 247:Core/Src/main.c ****   else if(strcmp(type,"blink") == 0)
 208              		.loc 1 247 5 view .LVU40
 209 0086 2046     		mov	r0, r4
 210 0088 FFF7FEFF 		bl	LED_Toggle
 211              	.LVL19:
 212 008c F2E7     		b	.L1
 213              	.L7:
 258:Core/Src/main.c ****     return;
 214              		.loc 1 258 5 view .LVU41
 215 008e 0C49     		ldr	r1, .L15+40
 216 0090 0548     		ldr	r0, .L15+16
 217 0092 FFF7FEFF 		bl	shellPrint
 218              	.LVL20:
 259:Core/Src/main.c ****   }
 219              		.loc 1 259 5 view .LVU42
 220 0096 EDE7     		b	.L1
 221              	.L16:
 222              		.align	2
 223              	.L15:
 224 0098 00000000 		.word	.LC0
 225 009c 04000000 		.word	.LC1
 226 00a0 08000000 		.word	dev_led+8
 227 00a4 08000000 		.word	.LC2
 228 00a8 00000000 		.word	shell
 229 00ac 00000000 		.word	dev_led
 230 00b0 1C000000 		.word	.LC3
 231 00b4 20000000 		.word	.LC4
 232 00b8 24000000 		.word	.LC5
 233 00bc 2C000000 		.word	.LC6
 234 00c0 34000000 		.word	.LC7
 235              		.cfi_endproc
 236              	.LFE295:
 238              		.section	.text.RS485_Test,"ax",%progbits
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 10


 239              		.align	1
 240              		.global	RS485_Test
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 245              	RS485_Test:
 246              	.LVL21:
 247              	.LFB298:
 262:Core/Src/main.c **** /**
 263:Core/Src/main.c ****  * @brief 
 264:Core/Src/main.c ****  * 
 265:Core/Src/main.c ****  */
 266:Core/Src/main.c **** SHELL_EXPORT_CMD(
 267:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 268:Core/Src/main.c **** led, LED_Test, test led func);
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** /**
 271:Core/Src/main.c ****  * @brief 
 272:Core/Src/main.c ****  * 
 273:Core/Src/main.c ****  */
 274:Core/Src/main.c **** void Battery_Test(void)
 275:Core/Src/main.c **** {   
 276:Core/Src/main.c ****     float voltage = 0;
 277:Core/Src/main.c ****     voltage = (float)ADC_Average_Get(5,50)/4096 * 3.3 * 2;
 278:Core/Src/main.c ****     
 279:Core/Src/main.c ****     shellPrint(&shell,"voltage:%.2fv\r\n",voltage);
 280:Core/Src/main.c **** }
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** /**
 283:Core/Src/main.c ****  * @brief 
 284:Core/Src/main.c ****  * 
 285:Core/Src/main.c ****  */
 286:Core/Src/main.c **** SHELL_EXPORT_CMD_AGENCY(
 287:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 288:Core/Src/main.c **** battery, Battery_Test, get battery voltage value);
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /**
 291:Core/Src/main.c ****  * @brief 
 292:Core/Src/main.c ****  * 
 293:Core/Src/main.c ****  * @param str 
 294:Core/Src/main.c ****  */
 295:Core/Src/main.c **** void RS485_Test(char *str)
 296:Core/Src/main.c **** {
 248              		.loc 1 296 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		.loc 1 296 1 is_stmt 0 view .LVU44
 253 0000 10B5     		push	{r4, lr}
 254              	.LCFI7:
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 4, -8
 257              		.cfi_offset 14, -4
 258 0002 0446     		mov	r4, r0
 297:Core/Src/main.c ****   RS485_SendData(&dev_rs485[0], (uint8_t *)str, strlen(str));
 259              		.loc 1 297 3 is_stmt 1 view .LVU45
 260              		.loc 1 297 49 is_stmt 0 view .LVU46
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 11


 261 0004 FFF7FEFF 		bl	strlen
 262              	.LVL22:
 263              		.loc 1 297 3 view .LVU47
 264 0008 82B2     		uxth	r2, r0
 265 000a 2146     		mov	r1, r4
 266 000c 0148     		ldr	r0, .L19
 267 000e FFF7FEFF 		bl	RS485_SendData
 268              	.LVL23:
 298:Core/Src/main.c **** }
 269              		.loc 1 298 1 view .LVU48
 270 0012 10BD     		pop	{r4, pc}
 271              	.LVL24:
 272              	.L20:
 273              		.loc 1 298 1 view .LVU49
 274              		.align	2
 275              	.L19:
 276 0014 00000000 		.word	dev_rs485
 277              		.cfi_endproc
 278              	.LFE298:
 280              		.global	__aeabi_i2d
 281              		.global	__aeabi_dmul
 282              		.global	__aeabi_d2uiz
 283              		.section	.rodata.Flash_Test.str1.4,"aMS",%progbits,1
 284              		.align	2
 285              	.LC9:
 286 0000 4D616E75 		.ascii	"Manu_ID:0x%02x,Dev_ID:0x%02x\015\012Manu_Identi:0x%"
 286      5F49443A 
 286      30782530 
 286      32782C44 
 286      65765F49 
 287 002d 3032782C 		.ascii	"02x,Memory_Type:0x%02x\015\012  Capacity:0x%02x = %"
 287      4D656D6F 
 287      72795F54 
 287      7970653A 
 287      30782530 
 288 005a 644B2D42 		.ascii	"dK-Bit = %.2fM-Bit\015\012\000"
 288      6974203D 
 288      20252E32 
 288      664D2D42 
 288      69740D0A 
 289              		.global	__aeabi_f2d
 290              		.section	.text.Flash_Test,"ax",%progbits
 291              		.align	1
 292              		.global	Flash_Test
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 297              	Flash_Test:
 298              	.LFB299:
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** SHELL_EXPORT_CMD(
 301:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 302:Core/Src/main.c **** rs485_send, RS485_Test, rs485 send test);
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** /**
 305:Core/Src/main.c ****  * @brief 
 306:Core/Src/main.c ****  * 
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 12


 307:Core/Src/main.c ****  * @param str 
 308:Core/Src/main.c ****  */
 309:Core/Src/main.c **** void Flash_Test(void)
 310:Core/Src/main.c **** {
 299              		.loc 1 310 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 8
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 304              	.LCFI8:
 305              		.cfi_def_cfa_offset 28
 306              		.cfi_offset 4, -28
 307              		.cfi_offset 5, -24
 308              		.cfi_offset 6, -20
 309              		.cfi_offset 7, -16
 310              		.cfi_offset 8, -12
 311              		.cfi_offset 9, -8
 312              		.cfi_offset 14, -4
 313 0004 89B0     		sub	sp, sp, #36
 314              	.LCFI9:
 315              		.cfi_def_cfa_offset 64
 311:Core/Src/main.c ****   uint8_t flash_id[2] = {0x00,};
 316              		.loc 1 311 3 view .LVU51
 317              		.loc 1 311 11 is_stmt 0 view .LVU52
 318 0006 0023     		movs	r3, #0
 319 0008 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 312:Core/Src/main.c ****   uint8_t JEDEC_id[3] = {0x00,};
 320              		.loc 1 312 3 is_stmt 1 view .LVU53
 321              		.loc 1 312 11 is_stmt 0 view .LVU54
 322 000c 264A     		ldr	r2, .L23+8
 323 000e 1288     		ldrh	r2, [r2]
 324 0010 ADF81820 		strh	r2, [sp, #24]	@ movhi
 325 0014 8DF81A30 		strb	r3, [sp, #26]
 313:Core/Src/main.c ****   uint32_t cap_kb = 0;
 326              		.loc 1 313 3 is_stmt 1 view .LVU55
 327              	.LVL25:
 314:Core/Src/main.c ****   float cap_mb = 0.0f;
 328              		.loc 1 314 3 view .LVU56
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   BSP_W25Qx_Read_ID(flash_id);
 329              		.loc 1 316 3 view .LVU57
 330 0018 07A8     		add	r0, sp, #28
 331 001a FFF7FEFF 		bl	BSP_W25Qx_Read_ID
 332              	.LVL26:
 317:Core/Src/main.c ****   BSP_W25Qx_Read_JEDEC_ID(JEDEC_id);
 333              		.loc 1 317 3 view .LVU58
 334 001e 06A8     		add	r0, sp, #24
 335 0020 FFF7FEFF 		bl	BSP_W25Qx_Read_JEDEC_ID
 336              	.LVL27:
 318:Core/Src/main.c ****   cap_kb = pow(2 , (JEDEC_id[2] - 10)) *8 ;
 337              		.loc 1 318 3 view .LVU59
 338              		.loc 1 318 29 is_stmt 0 view .LVU60
 339 0024 9DF81A00 		ldrb	r0, [sp, #26]	@ zero_extendqisi2
 340              		.loc 1 318 12 view .LVU61
 341 0028 0A38     		subs	r0, r0, #10
 342 002a FFF7FEFF 		bl	__aeabi_i2d
 343              	.LVL28:
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 13


 344 002e 41EC110B 		vmov	d1, r0, r1
 345 0032 9FED1B0B 		vldr.64	d0, .L23
 346 0036 FFF7FEFF 		bl	pow
 347              	.LVL29:
 348 003a 51EC100B 		vmov	r0, r1, d0
 349              		.loc 1 318 40 view .LVU62
 350 003e 0022     		movs	r2, #0
 351 0040 1A4B     		ldr	r3, .L23+12
 352 0042 FFF7FEFF 		bl	__aeabi_dmul
 353              	.LVL30:
 354              		.loc 1 318 10 view .LVU63
 355 0046 FFF7FEFF 		bl	__aeabi_d2uiz
 356              	.LVL31:
 357 004a 0446     		mov	r4, r0
 358              	.LVL32:
 319:Core/Src/main.c ****   cap_mb = (float)cap_kb / 1024.0;
 359              		.loc 1 319 3 is_stmt 1 view .LVU64
 360              		.loc 1 319 12 is_stmt 0 view .LVU65
 361 004c 07EE900A 		vmov	s15, r0	@ int
 362 0050 B8EE677A 		vcvt.f32.u32	s14, s15
 363              	.LVL33:
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   shellPrint(&shell,"Manu_ID:0x%02x,Dev_ID:0x%02x\r\nManu_Identi:0x%02x,Memory_Type:0x%02x\r\n\
 364              		.loc 1 321 3 is_stmt 1 view .LVU66
 322:Core/Src/main.c ****   Capacity:0x%02x = %dK-Bit = %.2fM-Bit\r\n",flash_id[0],flash_id[1],JEDEC_id[0],JEDEC_id[1],JEDEC_
 365              		.loc 1 322 54 is_stmt 0 view .LVU67
 366 0054 9DF81C50 		ldrb	r5, [sp, #28]	@ zero_extendqisi2
 367              		.loc 1 322 66 view .LVU68
 368 0058 9DF81D60 		ldrb	r6, [sp, #29]	@ zero_extendqisi2
 369              		.loc 1 322 78 view .LVU69
 370 005c 9DF81870 		ldrb	r7, [sp, #24]	@ zero_extendqisi2
 371              		.loc 1 322 90 view .LVU70
 372 0060 9DF81980 		ldrb	r8, [sp, #25]	@ zero_extendqisi2
 373              		.loc 1 322 102 view .LVU71
 374 0064 9DF81A90 		ldrb	r9, [sp, #26]	@ zero_extendqisi2
 321:Core/Src/main.c ****   Capacity:0x%02x = %dK-Bit = %.2fM-Bit\r\n",flash_id[0],flash_id[1],JEDEC_id[0],JEDEC_id[1],JEDEC_
 375              		.loc 1 321 3 view .LVU72
 376 0068 DFED117A 		vldr.32	s15, .L23+16
 377 006c 67EE277A 		vmul.f32	s15, s14, s15
 378              	.LVL34:
 321:Core/Src/main.c ****   Capacity:0x%02x = %dK-Bit = %.2fM-Bit\r\n",flash_id[0],flash_id[1],JEDEC_id[0],JEDEC_id[1],JEDEC_
 379              		.loc 1 321 3 view .LVU73
 380 0070 17EE900A 		vmov	r0, s15
 381              	.LVL35:
 321:Core/Src/main.c ****   Capacity:0x%02x = %dK-Bit = %.2fM-Bit\r\n",flash_id[0],flash_id[1],JEDEC_id[0],JEDEC_id[1],JEDEC_
 382              		.loc 1 321 3 view .LVU74
 383 0074 FFF7FEFF 		bl	__aeabi_f2d
 384              	.LVL36:
 321:Core/Src/main.c ****   Capacity:0x%02x = %dK-Bit = %.2fM-Bit\r\n",flash_id[0],flash_id[1],JEDEC_id[0],JEDEC_id[1],JEDEC_
 385              		.loc 1 321 3 view .LVU75
 386 0078 CDE90401 		strd	r0, [sp, #16]
 387 007c 0394     		str	r4, [sp, #12]
 388 007e CDF80890 		str	r9, [sp, #8]
 389 0082 CDF80480 		str	r8, [sp, #4]
 390 0086 0097     		str	r7, [sp]
 391 0088 3346     		mov	r3, r6
 392 008a 2A46     		mov	r2, r5
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 14


 393 008c 0949     		ldr	r1, .L23+20
 394 008e 0A48     		ldr	r0, .L23+24
 395 0090 FFF7FEFF 		bl	shellPrint
 396              	.LVL37:
 323:Core/Src/main.c **** }
 397              		.loc 1 323 1 view .LVU76
 398 0094 09B0     		add	sp, sp, #36
 399              	.LCFI10:
 400              		.cfi_def_cfa_offset 28
 401              		@ sp needed
 402 0096 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 403              	.LVL38:
 404              	.L24:
 405              		.loc 1 323 1 view .LVU77
 406 009a 00BFAFF3 		.align	3
 406      0080
 407              	.L23:
 408 00a0 00000000 		.word	0
 409 00a4 00000040 		.word	1073741824
 410 00a8 00000000 		.word	.LANCHOR0
 411 00ac 00002040 		.word	1075838976
 412 00b0 0000803A 		.word	981467136
 413 00b4 00000000 		.word	.LC9
 414 00b8 00000000 		.word	shell
 415              		.cfi_endproc
 416              	.LFE299:
 418              		.section	.rodata.BDS_Test.str1.4,"aMS",%progbits,1
 419              		.align	2
 420              	.LC10:
 421 0000 72656164 		.ascii	"read\000"
 421      00
 422              		.section	.text.BDS_Test,"ax",%progbits
 423              		.align	1
 424              		.global	BDS_Test
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 429              	BDS_Test:
 430              	.LVL39:
 431              	.LFB300:
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** SHELL_EXPORT_CMD(
 326:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 327:Core/Src/main.c **** flash_test, Flash_Test, rs485 send test);
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** void BDS_Test(char *cmd,...)
 330:Core/Src/main.c **** {
 432              		.loc 1 330 1 is_stmt 1 view -0
 433              		.cfi_startproc
 434              		@ args = 4, pretend = 16, frame = 304
 435              		@ frame_needed = 0, uses_anonymous_args = 1
 436              		.loc 1 330 1 is_stmt 0 view .LVU79
 437 0000 0FB4     		push	{r0, r1, r2, r3}
 438              	.LCFI11:
 439              		.cfi_def_cfa_offset 16
 440              		.cfi_offset 0, -16
 441              		.cfi_offset 1, -12
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 15


 442              		.cfi_offset 2, -8
 443              		.cfi_offset 3, -4
 444 0002 00B5     		push	{lr}
 445              	.LCFI12:
 446              		.cfi_def_cfa_offset 20
 447              		.cfi_offset 14, -20
 448 0004 CDB0     		sub	sp, sp, #308
 449              	.LCFI13:
 450              		.cfi_def_cfa_offset 328
 331:Core/Src/main.c ****   LED_HandleTypeDef *test_led;
 451              		.loc 1 331 3 is_stmt 1 view .LVU80
 332:Core/Src/main.c ****   int param_1 = -1;
 452              		.loc 1 332 3 view .LVU81
 453              	.LVL40:
 333:Core/Src/main.c ****   uint16_t len;
 454              		.loc 1 333 3 view .LVU82
 334:Core/Src/main.c ****   uint8_t buff[300];
 455              		.loc 1 334 3 view .LVU83
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   if(strcmp(cmd,"read") == 0)
 456              		.loc 1 336 3 view .LVU84
 457              		.loc 1 336 6 is_stmt 0 view .LVU85
 458 0006 1149     		ldr	r1, .L31
 459 0008 4E98     		ldr	r0, [sp, #312]
 460 000a FFF7FEFF 		bl	strcmp
 461              	.LVL41:
 462              		.loc 1 336 5 view .LVU86
 463 000e 20B1     		cbz	r0, .L29
 464              	.LVL42:
 465              	.L25:
 337:Core/Src/main.c ****   {
 338:Core/Src/main.c ****     va_list p_args;
 339:Core/Src/main.c ****     va_start(p_args,cmd);
 340:Core/Src/main.c ****     param_1 = va_arg(p_args,int);
 341:Core/Src/main.c ****     va_end(p_args);
 342:Core/Src/main.c ****     len  = atgm_read(bds_dev,buff,param_1);
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****     if(len > 0)
 345:Core/Src/main.c ****       shellPrint(&shell,buff,len);
 346:Core/Src/main.c ****     memset(buff,0,300);
 347:Core/Src/main.c ****   }
 348:Core/Src/main.c **** }
 466              		.loc 1 348 1 view .LVU87
 467 0010 4DB0     		add	sp, sp, #308
 468              	.LCFI14:
 469              		.cfi_remember_state
 470              		.cfi_def_cfa_offset 20
 471              		@ sp needed
 472 0012 5DF804EB 		ldr	lr, [sp], #4
 473              	.LCFI15:
 474              		.cfi_restore 14
 475              		.cfi_def_cfa_offset 16
 476 0016 04B0     		add	sp, sp, #16
 477              	.LCFI16:
 478              		.cfi_restore 3
 479              		.cfi_restore 2
 480              		.cfi_restore 1
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 16


 481              		.cfi_restore 0
 482              		.cfi_def_cfa_offset 0
 483 0018 7047     		bx	lr
 484              	.LVL43:
 485              	.L29:
 486              	.LCFI17:
 487              		.cfi_restore_state
 488              	.LBB5:
 338:Core/Src/main.c ****     va_start(p_args,cmd);
 489              		.loc 1 338 5 is_stmt 1 view .LVU88
 339:Core/Src/main.c ****     param_1 = va_arg(p_args,int);
 490              		.loc 1 339 5 view .LVU89
 491 001a 4FAB     		add	r3, sp, #316
 492 001c 0093     		str	r3, [sp]
 340:Core/Src/main.c ****     va_end(p_args);
 493              		.loc 1 340 5 view .LVU90
 340:Core/Src/main.c ****     va_end(p_args);
 494              		.loc 1 340 13 is_stmt 0 view .LVU91
 495 001e 50AB     		add	r3, sp, #320
 496 0020 0093     		str	r3, [sp]
 497              	.LVL44:
 341:Core/Src/main.c ****     len  = atgm_read(bds_dev,buff,param_1);
 498              		.loc 1 341 5 is_stmt 1 view .LVU92
 342:Core/Src/main.c **** 
 499              		.loc 1 342 5 view .LVU93
 342:Core/Src/main.c **** 
 500              		.loc 1 342 12 is_stmt 0 view .LVU94
 501 0022 4F9A     		ldr	r2, [sp, #316]
 502 0024 01A9     		add	r1, sp, #4
 503 0026 0A4B     		ldr	r3, .L31+4
 504 0028 1868     		ldr	r0, [r3]
 505 002a FFF7FEFF 		bl	atgm_read
 506              	.LVL45:
 342:Core/Src/main.c **** 
 507              		.loc 1 342 10 view .LVU95
 508 002e 83B2     		uxth	r3, r0
 509              	.LVL46:
 344:Core/Src/main.c ****       shellPrint(&shell,buff,len);
 510              		.loc 1 344 5 is_stmt 1 view .LVU96
 344:Core/Src/main.c ****       shellPrint(&shell,buff,len);
 511              		.loc 1 344 7 is_stmt 0 view .LVU97
 512 0030 33B9     		cbnz	r3, .L30
 513              	.LVL47:
 514              	.L27:
 346:Core/Src/main.c ****   }
 515              		.loc 1 346 5 is_stmt 1 view .LVU98
 516 0032 4FF49672 		mov	r2, #300
 517 0036 0021     		movs	r1, #0
 518 0038 01A8     		add	r0, sp, #4
 519 003a FFF7FEFF 		bl	memset
 520              	.LVL48:
 521              	.LBE5:
 522              		.loc 1 348 1 is_stmt 0 view .LVU99
 523 003e E7E7     		b	.L25
 524              	.LVL49:
 525              	.L30:
 526              	.LBB6:
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 17


 345:Core/Src/main.c ****     memset(buff,0,300);
 527              		.loc 1 345 7 is_stmt 1 view .LVU100
 528 0040 1A46     		mov	r2, r3
 529 0042 01A9     		add	r1, sp, #4
 530 0044 0348     		ldr	r0, .L31+8
 531 0046 FFF7FEFF 		bl	shellPrint
 532              	.LVL50:
 345:Core/Src/main.c ****     memset(buff,0,300);
 533              		.loc 1 345 7 is_stmt 0 view .LVU101
 534 004a F2E7     		b	.L27
 535              	.L32:
 536              		.align	2
 537              	.L31:
 538 004c 00000000 		.word	.LC10
 539 0050 00000000 		.word	.LANCHOR1
 540 0054 00000000 		.word	shell
 541              	.LBE6:
 542              		.cfi_endproc
 543              	.LFE300:
 545              		.section	.rodata.LDR_Value_Get.str1.4,"aMS",%progbits,1
 546              		.align	2
 547              	.LC11:
 548 0000 4C44523A 		.ascii	"LDR:%d, input int:%d, input char:%c, input str:%s, "
 548      25642C20 
 548      696E7075 
 548      7420696E 
 548      743A2564 
 549 0033 696E7075 		.ascii	"input float:%.4f \015\012\000"
 549      7420666C 
 549      6F61743A 
 549      252E3466 
 549      200D0A00 
 550              		.section	.text.LDR_Value_Get,"ax",%progbits
 551              		.align	1
 552              		.global	LDR_Value_Get
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 557              	LDR_Value_Get:
 558              	.LVL51:
 559              	.LFB293:
 207:Core/Src/main.c ****     uint32_t ldr_adc_value = 0;
 560              		.loc 1 207 1 is_stmt 1 view -0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 207:Core/Src/main.c ****     uint32_t ldr_adc_value = 0;
 564              		.loc 1 207 1 is_stmt 0 view .LVU103
 565 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 566              	.LCFI18:
 567              		.cfi_def_cfa_offset 24
 568              		.cfi_offset 4, -24
 569              		.cfi_offset 5, -20
 570              		.cfi_offset 6, -16
 571              		.cfi_offset 7, -12
 572              		.cfi_offset 8, -8
 573              		.cfi_offset 14, -4
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 18


 574 0004 84B0     		sub	sp, sp, #16
 575              	.LCFI19:
 576              		.cfi_def_cfa_offset 40
 577 0006 0546     		mov	r5, r0
 578 0008 0E46     		mov	r6, r1
 579 000a 1746     		mov	r7, r2
 580 000c 10EE108A 		vmov	r8, s0
 208:Core/Src/main.c ****     ldr_adc_value = ADC_Average_Get(10,50);
 581              		.loc 1 208 5 is_stmt 1 view .LVU104
 582              	.LVL52:
 209:Core/Src/main.c ****     shellPrint(&shell,"LDR:%d, input int:%d, input char:%c, input str:%s, input float:%.4f \r\n",ld
 583              		.loc 1 209 5 view .LVU105
 209:Core/Src/main.c ****     shellPrint(&shell,"LDR:%d, input int:%d, input char:%c, input str:%s, input float:%.4f \r\n",ld
 584              		.loc 1 209 21 is_stmt 0 view .LVU106
 585 0010 3221     		movs	r1, #50
 586              	.LVL53:
 209:Core/Src/main.c ****     shellPrint(&shell,"LDR:%d, input int:%d, input char:%c, input str:%s, input float:%.4f \r\n",ld
 587              		.loc 1 209 21 view .LVU107
 588 0012 0A20     		movs	r0, #10
 589              	.LVL54:
 209:Core/Src/main.c ****     shellPrint(&shell,"LDR:%d, input int:%d, input char:%c, input str:%s, input float:%.4f \r\n",ld
 590              		.loc 1 209 21 view .LVU108
 591 0014 FFF7FEFF 		bl	ADC_Average_Get
 592              	.LVL55:
 209:Core/Src/main.c ****     shellPrint(&shell,"LDR:%d, input int:%d, input char:%c, input str:%s, input float:%.4f \r\n",ld
 593              		.loc 1 209 21 view .LVU109
 594 0018 0446     		mov	r4, r0
 595              	.LVL56:
 210:Core/Src/main.c **** }
 596              		.loc 1 210 5 is_stmt 1 view .LVU110
 597 001a 4046     		mov	r0, r8	@ float
 598              	.LVL57:
 210:Core/Src/main.c **** }
 599              		.loc 1 210 5 is_stmt 0 view .LVU111
 600 001c FFF7FEFF 		bl	__aeabi_f2d
 601              	.LVL58:
 602 0020 CDE90201 		strd	r0, [sp, #8]
 603 0024 0197     		str	r7, [sp, #4]
 604 0026 0096     		str	r6, [sp]
 605 0028 2B46     		mov	r3, r5
 606 002a 2246     		mov	r2, r4
 607 002c 0349     		ldr	r1, .L35
 608 002e 0448     		ldr	r0, .L35+4
 609 0030 FFF7FEFF 		bl	shellPrint
 610              	.LVL59:
 211:Core/Src/main.c **** 
 611              		.loc 1 211 1 view .LVU112
 612 0034 04B0     		add	sp, sp, #16
 613              	.LCFI20:
 614              		.cfi_def_cfa_offset 24
 615              		@ sp needed
 616 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 617              	.LVL60:
 618              	.L36:
 211:Core/Src/main.c **** 
 619              		.loc 1 211 1 view .LVU113
 620 003a 00BF     		.align	2
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 19


 621              	.L35:
 622 003c 00000000 		.word	.LC11
 623 0040 00000000 		.word	shell
 624              		.cfi_endproc
 625              	.LFE293:
 627              		.section	.text.agencyLDR_Value_Get,"ax",%progbits
 628              		.align	1
 629              		.global	agencyLDR_Value_Get
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 634              	agencyLDR_Value_Get:
 635              	.LVL61:
 636              	.LFB294:
 217:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 637              		.loc 1 217 1 is_stmt 1 view -0
 638              		.cfi_startproc
 639              		@ args = 12, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 217:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 641              		.loc 1 217 1 is_stmt 0 view .LVU115
 642 0000 08B5     		push	{r3, lr}
 643              	.LCFI21:
 644              		.cfi_def_cfa_offset 8
 645              		.cfi_offset 3, -8
 646              		.cfi_offset 14, -4
 217:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 647              		.loc 1 217 1 is_stmt 1 view .LVU116
 648 0002 00EE103A 		vmov	s0, r3
 649 0006 C9B2     		uxtb	r1, r1
 650              	.LVL62:
 217:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 651              		.loc 1 217 1 is_stmt 0 view .LVU117
 652 0008 FFF7FEFF 		bl	LDR_Value_Get
 653              	.LVL63:
 217:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 654              		.loc 1 217 1 view .LVU118
 655 000c 08BD     		pop	{r3, pc}
 217:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 656              		.loc 1 217 1 view .LVU119
 657              		.cfi_endproc
 658              	.LFE294:
 660              		.global	__aeabi_dadd
 661              		.global	__aeabi_d2f
 662              		.section	.rodata.Battery_Test.str1.4,"aMS",%progbits,1
 663              		.align	2
 664              	.LC12:
 665 0000 766F6C74 		.ascii	"voltage:%.2fv\015\012\000"
 665      6167653A 
 665      252E3266 
 665      760D0A00 
 666              		.section	.text.Battery_Test,"ax",%progbits
 667              		.align	1
 668              		.global	Battery_Test
 669              		.syntax unified
 670              		.thumb
 671              		.thumb_func
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 20


 673              	Battery_Test:
 674              	.LFB296:
 275:Core/Src/main.c ****     float voltage = 0;
 675              		.loc 1 275 1 is_stmt 1 view -0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679 0000 08B5     		push	{r3, lr}
 680              	.LCFI22:
 681              		.cfi_def_cfa_offset 8
 682              		.cfi_offset 3, -8
 683              		.cfi_offset 14, -4
 276:Core/Src/main.c ****     voltage = (float)ADC_Average_Get(5,50)/4096 * 3.3 * 2;
 684              		.loc 1 276 5 view .LVU121
 685              	.LVL64:
 277:Core/Src/main.c ****     
 686              		.loc 1 277 5 view .LVU122
 277:Core/Src/main.c ****     
 687              		.loc 1 277 22 is_stmt 0 view .LVU123
 688 0002 3221     		movs	r1, #50
 689 0004 0520     		movs	r0, #5
 690 0006 FFF7FEFF 		bl	ADC_Average_Get
 691              	.LVL65:
 692 000a 07EE900A 		vmov	s15, r0	@ int
 277:Core/Src/main.c ****     
 693              		.loc 1 277 15 view .LVU124
 694 000e F8EE677A 		vcvt.f32.u32	s15, s15
 277:Core/Src/main.c ****     
 695              		.loc 1 277 43 view .LVU125
 696 0012 9FED117A 		vldr.32	s14, .L41+8
 697 0016 67EE877A 		vmul.f32	s15, s15, s14
 698 001a 17EE900A 		vmov	r0, s15
 699 001e FFF7FEFF 		bl	__aeabi_f2d
 700              	.LVL66:
 277:Core/Src/main.c ****     
 701              		.loc 1 277 49 view .LVU126
 702 0022 0BA3     		adr	r3, .L41
 703 0024 D3E90023 		ldrd	r2, [r3]
 704 0028 FFF7FEFF 		bl	__aeabi_dmul
 705              	.LVL67:
 706 002c 0246     		mov	r2, r0
 707 002e 0B46     		mov	r3, r1
 277:Core/Src/main.c ****     
 708              		.loc 1 277 55 view .LVU127
 709 0030 FFF7FEFF 		bl	__aeabi_dadd
 710              	.LVL68:
 277:Core/Src/main.c ****     
 711              		.loc 1 277 13 view .LVU128
 712 0034 FFF7FEFF 		bl	__aeabi_d2f
 713              	.LVL69:
 279:Core/Src/main.c **** }
 714              		.loc 1 279 5 is_stmt 1 view .LVU129
 715 0038 FFF7FEFF 		bl	__aeabi_f2d
 716              	.LVL70:
 279:Core/Src/main.c **** }
 717              		.loc 1 279 5 is_stmt 0 view .LVU130
 718 003c 0246     		mov	r2, r0
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 21


 719 003e 0B46     		mov	r3, r1
 720 0040 0649     		ldr	r1, .L41+12
 721 0042 0748     		ldr	r0, .L41+16
 722 0044 FFF7FEFF 		bl	shellPrint
 723              	.LVL71:
 280:Core/Src/main.c **** 
 724              		.loc 1 280 1 view .LVU131
 725 0048 08BD     		pop	{r3, pc}
 726              	.L42:
 727 004a 00BFAFF3 		.align	3
 727      0080
 728              	.L41:
 729 0050 66666666 		.word	1717986918
 730 0054 66660A40 		.word	1074423398
 731 0058 00008039 		.word	964689920
 732 005c 00000000 		.word	.LC12
 733 0060 00000000 		.word	shell
 734              		.cfi_endproc
 735              	.LFE296:
 737              		.section	.text.agencyBattery_Test,"ax",%progbits
 738              		.align	1
 739              		.global	agencyBattery_Test
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 744              	agencyBattery_Test:
 745              	.LVL72:
 746              	.LFB297:
 286:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 747              		.loc 1 286 1 is_stmt 1 view -0
 748              		.cfi_startproc
 749              		@ args = 12, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 286:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 751              		.loc 1 286 1 is_stmt 0 view .LVU133
 752 0000 08B5     		push	{r3, lr}
 753              	.LCFI23:
 754              		.cfi_def_cfa_offset 8
 755              		.cfi_offset 3, -8
 756              		.cfi_offset 14, -4
 286:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 757              		.loc 1 286 1 is_stmt 1 view .LVU134
 758 0002 FFF7FEFF 		bl	Battery_Test
 759              	.LVL73:
 286:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 760              		.loc 1 286 1 is_stmt 0 view .LVU135
 761 0006 08BD     		pop	{r3, pc}
 286:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 762              		.loc 1 286 1 view .LVU136
 763              		.cfi_endproc
 764              	.LFE297:
 766              		.section	.text.Error_Handler,"ax",%progbits
 767              		.align	1
 768              		.global	Error_Handler
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 22


 773              	Error_Handler:
 774              	.LFB301:
 349:Core/Src/main.c **** SHELL_EXPORT_CMD(
 350:Core/Src/main.c **** SHELL_CMD_PERMISSION(0)|SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC)|SHELL_CMD_DISABLE_RETURN,
 351:Core/Src/main.c **** bds_test, BDS_Test, bde_dev test);
 352:Core/Src/main.c **** 
 353:Core/Src/main.c **** /* USER CODE END 4 */
 354:Core/Src/main.c **** 
 355:Core/Src/main.c **** /**
 356:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 357:Core/Src/main.c ****   * @retval None
 358:Core/Src/main.c ****   */
 359:Core/Src/main.c **** void Error_Handler(void)
 360:Core/Src/main.c **** {
 775              		.loc 1 360 1 is_stmt 1 view -0
 776              		.cfi_startproc
 777              		@ Volatile: function does not return.
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780              		@ link register save eliminated.
 361:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 362:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 363:Core/Src/main.c ****   __disable_irq();
 781              		.loc 1 363 3 view .LVU138
 782              	.LBB7:
 783              	.LBI7:
 784              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 23


  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 24


  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 25


 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 26


 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 785              		.loc 2 207 27 view .LVU139
 786              	.LBB8:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 787              		.loc 2 209 3 view .LVU140
 788              		.syntax unified
 789              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 790 0000 72B6     		cpsid i
 791              	@ 0 "" 2
 792              		.thumb
 793              		.syntax unified
 794              	.L46:
 795              	.LBE8:
 796              	.LBE7:
 364:Core/Src/main.c ****   while (1)
 797              		.loc 1 364 3 discriminator 1 view .LVU141
 365:Core/Src/main.c ****   {
 366:Core/Src/main.c ****   }
 798              		.loc 1 366 3 discriminator 1 view .LVU142
 364:Core/Src/main.c ****   while (1)
 799              		.loc 1 364 9 discriminator 1 view .LVU143
 800 0002 FEE7     		b	.L46
 801              		.cfi_endproc
 802              	.LFE301:
 804              		.section	.text.SystemClock_Config,"ax",%progbits
 805              		.align	1
 806              		.global	SystemClock_Config
 807              		.syntax unified
 808              		.thumb
 809              		.thumb_func
 811              	SystemClock_Config:
 812              	.LFB292:
 156:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 813              		.loc 1 156 1 view -0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 88
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817 0000 00B5     		push	{lr}
 818              	.LCFI24:
 819              		.cfi_def_cfa_offset 4
 820              		.cfi_offset 14, -4
 821 0002 97B0     		sub	sp, sp, #92
 822              	.LCFI25:
 823              		.cfi_def_cfa_offset 96
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 824              		.loc 1 157 3 view .LVU145
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 825              		.loc 1 157 22 is_stmt 0 view .LVU146
 826 0004 4422     		movs	r2, #68
 827 0006 0021     		movs	r1, #0
 828 0008 05A8     		add	r0, sp, #20
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 27


 829 000a FFF7FEFF 		bl	memset
 830              	.LVL74:
 158:Core/Src/main.c **** 
 831              		.loc 1 158 3 is_stmt 1 view .LVU147
 158:Core/Src/main.c **** 
 832              		.loc 1 158 22 is_stmt 0 view .LVU148
 833 000e 0023     		movs	r3, #0
 834 0010 0093     		str	r3, [sp]
 835 0012 0193     		str	r3, [sp, #4]
 836 0014 0293     		str	r3, [sp, #8]
 837 0016 0393     		str	r3, [sp, #12]
 838 0018 0493     		str	r3, [sp, #16]
 162:Core/Src/main.c ****   {
 839              		.loc 1 162 3 is_stmt 1 view .LVU149
 162:Core/Src/main.c ****   {
 840              		.loc 1 162 7 is_stmt 0 view .LVU150
 841 001a 4FF40070 		mov	r0, #512
 842 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 843              	.LVL75:
 162:Core/Src/main.c ****   {
 844              		.loc 1 162 6 view .LVU151
 845 0022 18BB     		cbnz	r0, .L52
 169:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 846              		.loc 1 169 3 is_stmt 1 view .LVU152
 169:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 847              		.loc 1 169 36 is_stmt 0 view .LVU153
 848 0024 0122     		movs	r2, #1
 849 0026 0592     		str	r2, [sp, #20]
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 850              		.loc 1 170 3 is_stmt 1 view .LVU154
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 851              		.loc 1 170 30 is_stmt 0 view .LVU155
 852 0028 4FF48033 		mov	r3, #65536
 853 002c 0693     		str	r3, [sp, #24]
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 854              		.loc 1 171 3 is_stmt 1 view .LVU156
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 855              		.loc 1 171 34 is_stmt 0 view .LVU157
 856 002e 0223     		movs	r3, #2
 857 0030 0F93     		str	r3, [sp, #60]
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 858              		.loc 1 172 3 is_stmt 1 view .LVU158
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 859              		.loc 1 172 35 is_stmt 0 view .LVU159
 860 0032 0321     		movs	r1, #3
 861 0034 1091     		str	r1, [sp, #64]
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 20;
 862              		.loc 1 173 3 is_stmt 1 view .LVU160
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 20;
 863              		.loc 1 173 30 is_stmt 0 view .LVU161
 864 0036 1192     		str	r2, [sp, #68]
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 865              		.loc 1 174 3 is_stmt 1 view .LVU162
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 866              		.loc 1 174 30 is_stmt 0 view .LVU163
 867 0038 1422     		movs	r2, #20
 868 003a 1292     		str	r2, [sp, #72]
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 28


 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 869              		.loc 1 175 3 is_stmt 1 view .LVU164
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 870              		.loc 1 175 30 is_stmt 0 view .LVU165
 871 003c 0722     		movs	r2, #7
 872 003e 1392     		str	r2, [sp, #76]
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 873              		.loc 1 176 3 is_stmt 1 view .LVU166
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 874              		.loc 1 176 30 is_stmt 0 view .LVU167
 875 0040 1493     		str	r3, [sp, #80]
 177:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 876              		.loc 1 177 3 is_stmt 1 view .LVU168
 177:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 877              		.loc 1 177 30 is_stmt 0 view .LVU169
 878 0042 1593     		str	r3, [sp, #84]
 178:Core/Src/main.c ****   {
 879              		.loc 1 178 3 is_stmt 1 view .LVU170
 178:Core/Src/main.c ****   {
 880              		.loc 1 178 7 is_stmt 0 view .LVU171
 881 0044 05A8     		add	r0, sp, #20
 882 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 883              	.LVL76:
 178:Core/Src/main.c ****   {
 884              		.loc 1 178 6 view .LVU172
 885 004a 88B9     		cbnz	r0, .L53
 184:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 886              		.loc 1 184 3 is_stmt 1 view .LVU173
 184:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 887              		.loc 1 184 31 is_stmt 0 view .LVU174
 888 004c 0F23     		movs	r3, #15
 889 004e 0093     		str	r3, [sp]
 186:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 890              		.loc 1 186 3 is_stmt 1 view .LVU175
 186:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 891              		.loc 1 186 34 is_stmt 0 view .LVU176
 892 0050 0323     		movs	r3, #3
 893 0052 0193     		str	r3, [sp, #4]
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 894              		.loc 1 187 3 is_stmt 1 view .LVU177
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 895              		.loc 1 187 35 is_stmt 0 view .LVU178
 896 0054 0023     		movs	r3, #0
 897 0056 0293     		str	r3, [sp, #8]
 188:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 898              		.loc 1 188 3 is_stmt 1 view .LVU179
 188:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 899              		.loc 1 188 36 is_stmt 0 view .LVU180
 900 0058 0393     		str	r3, [sp, #12]
 189:Core/Src/main.c **** 
 901              		.loc 1 189 3 is_stmt 1 view .LVU181
 189:Core/Src/main.c **** 
 902              		.loc 1 189 36 is_stmt 0 view .LVU182
 903 005a 0493     		str	r3, [sp, #16]
 191:Core/Src/main.c ****   {
 904              		.loc 1 191 3 is_stmt 1 view .LVU183
 191:Core/Src/main.c ****   {
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 29


 905              		.loc 1 191 7 is_stmt 0 view .LVU184
 906 005c 0421     		movs	r1, #4
 907 005e 6846     		mov	r0, sp
 908 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 909              	.LVL77:
 191:Core/Src/main.c ****   {
 910              		.loc 1 191 6 view .LVU185
 911 0064 30B9     		cbnz	r0, .L54
 195:Core/Src/main.c **** 
 912              		.loc 1 195 1 view .LVU186
 913 0066 17B0     		add	sp, sp, #92
 914              	.LCFI26:
 915              		.cfi_remember_state
 916              		.cfi_def_cfa_offset 4
 917              		@ sp needed
 918 0068 5DF804FB 		ldr	pc, [sp], #4
 919              	.L52:
 920              	.LCFI27:
 921              		.cfi_restore_state
 164:Core/Src/main.c ****   }
 922              		.loc 1 164 5 is_stmt 1 view .LVU187
 923 006c FFF7FEFF 		bl	Error_Handler
 924              	.LVL78:
 925              	.L53:
 180:Core/Src/main.c ****   }
 926              		.loc 1 180 5 view .LVU188
 927 0070 FFF7FEFF 		bl	Error_Handler
 928              	.LVL79:
 929              	.L54:
 193:Core/Src/main.c ****   }
 930              		.loc 1 193 5 view .LVU189
 931 0074 FFF7FEFF 		bl	Error_Handler
 932              	.LVL80:
 933              		.cfi_endproc
 934              	.LFE292:
 936              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 937              		.align	2
 938              	.LC13:
 939 0000 75617274 		.ascii	"uart2/bds_0\000"
 939      322F6264 
 939      735F3000 
 940              		.align	2
 941              	.LC14:
 942 000c 75617274 		.ascii	"uart1/ec200s\000"
 942      312F6563 
 942      32303073 
 942      00
 943              		.section	.text.main,"ax",%progbits
 944              		.align	1
 945              		.global	main
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 950              	main:
 951              	.LFB291:
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 952              		.loc 1 80 1 view -0
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 30


 953              		.cfi_startproc
 954              		@ Volatile: function does not return.
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957 0000 08B5     		push	{r3, lr}
 958              	.LCFI28:
 959              		.cfi_def_cfa_offset 8
 960              		.cfi_offset 3, -8
 961              		.cfi_offset 14, -4
  88:Core/Src/main.c **** 
 962              		.loc 1 88 3 view .LVU191
 963 0002 FFF7FEFF 		bl	HAL_Init
 964              	.LVL81:
  91:Core/Src/main.c ****   /* USER CODE END Init */
 965              		.loc 1 91 3 view .LVU192
 966 0006 FFF7FEFF 		bl	timer_init
 967              	.LVL82:
  95:Core/Src/main.c **** 
 968              		.loc 1 95 3 view .LVU193
 969 000a FFF7FEFF 		bl	SystemClock_Config
 970              	.LVL83:
 102:Core/Src/main.c ****   LED_Init(&dev_led[0]);
 971              		.loc 1 102 3 view .LVU194
 972 000e FFF7FEFF 		bl	MX_GPIO_Init
 973              	.LVL84:
 103:Core/Src/main.c ****   LED_Init(&dev_led[1]);
 974              		.loc 1 103 3 view .LVU195
 975 0012 1B4C     		ldr	r4, .L58
 976 0014 2046     		mov	r0, r4
 977 0016 FFF7FEFF 		bl	LED_Init
 978              	.LVL85:
 104:Core/Src/main.c ****   MX_ADC1_Init();
 979              		.loc 1 104 3 view .LVU196
 980 001a 04F10806 		add	r6, r4, #8
 981 001e 3046     		mov	r0, r6
 982 0020 FFF7FEFF 		bl	LED_Init
 983              	.LVL86:
 105:Core/Src/main.c ****   MX_SPI2_Init();
 984              		.loc 1 105 3 view .LVU197
 985 0024 FFF7FEFF 		bl	MX_ADC1_Init
 986              	.LVL87:
 106:Core/Src/main.c ****   MX_SPI3_Init();
 987              		.loc 1 106 3 view .LVU198
 988 0028 FFF7FEFF 		bl	MX_SPI2_Init
 989              	.LVL88:
 107:Core/Src/main.c ****   MX_USART1_UART_Init();
 990              		.loc 1 107 3 view .LVU199
 991 002c FFF7FEFF 		bl	MX_SPI3_Init
 992              	.LVL89:
 108:Core/Src/main.c ****   MX_USART2_UART_Init();
 993              		.loc 1 108 3 view .LVU200
 994 0030 FFF7FEFF 		bl	MX_USART1_UART_Init
 995              	.LVL90:
 109:Core/Src/main.c ****   MX_USART3_UART_Init();
 996              		.loc 1 109 3 view .LVU201
 997 0034 FFF7FEFF 		bl	MX_USART2_UART_Init
 998              	.LVL91:
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 31


 110:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 999              		.loc 1 110 3 view .LVU202
 1000 0038 FFF7FEFF 		bl	MX_USART3_UART_Init
 1001              	.LVL92:
 113:Core/Src/main.c ****   BSP_W25Qx_Init();
 1002              		.loc 1 113 3 view .LVU203
 1003 003c FFF7FEFF 		bl	User_Shell_Init
 1004              	.LVL93:
 114:Core/Src/main.c ****   bds_dev = atgm_open("uart2/bds_0");
 1005              		.loc 1 114 3 view .LVU204
 1006 0040 FFF7FEFF 		bl	BSP_W25Qx_Init
 1007              	.LVL94:
 115:Core/Src/main.c ****   ec2x_open("uart1/ec200s");
 1008              		.loc 1 115 3 view .LVU205
 115:Core/Src/main.c ****   ec2x_open("uart1/ec200s");
 1009              		.loc 1 115 13 is_stmt 0 view .LVU206
 1010 0044 0F48     		ldr	r0, .L58+4
 1011 0046 FFF7FEFF 		bl	atgm_open
 1012              	.LVL95:
 115:Core/Src/main.c ****   ec2x_open("uart1/ec200s");
 1013              		.loc 1 115 11 view .LVU207
 1014 004a 0F4B     		ldr	r3, .L58+8
 1015 004c 1860     		str	r0, [r3]
 116:Core/Src/main.c ****   timer_insert(1000,-1,LED_Toggle,&dev_led[0]);
 1016              		.loc 1 116 3 is_stmt 1 view .LVU208
 1017 004e 0F48     		ldr	r0, .L58+12
 1018 0050 FFF7FEFF 		bl	ec2x_open
 1019              	.LVL96:
 117:Core/Src/main.c ****   timer_insert(1000,10,LED_Toggle,&dev_led[1]);
 1020              		.loc 1 117 3 view .LVU209
 1021 0054 0E4D     		ldr	r5, .L58+16
 1022 0056 2346     		mov	r3, r4
 1023 0058 2A46     		mov	r2, r5
 1024 005a 4FF0FF31 		mov	r1, #-1
 1025 005e 4FF47A70 		mov	r0, #1000
 1026 0062 FFF7FEFF 		bl	timer_insert
 1027              	.LVL97:
 118:Core/Src/main.c ****   if(Lora_Init())
 1028              		.loc 1 118 3 view .LVU210
 1029 0066 3346     		mov	r3, r6
 1030 0068 2A46     		mov	r2, r5
 1031 006a 0A21     		movs	r1, #10
 1032 006c 4FF47A70 		mov	r0, #1000
 1033 0070 FFF7FEFF 		bl	timer_insert
 1034              	.LVL98:
 119:Core/Src/main.c ****   ;
 1035              		.loc 1 119 3 view .LVU211
 119:Core/Src/main.c ****   ;
 1036              		.loc 1 119 6 is_stmt 0 view .LVU212
 1037 0074 FFF7FEFF 		bl	Lora_Init
 1038              	.LVL99:
 1039              	.L56:
 129:Core/Src/main.c ****   {
 1040              		.loc 1 129 3 is_stmt 1 discriminator 1 view .LVU213
 145:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 1041              		.loc 1 145 6 discriminator 1 view .LVU214
 1042 0078 6420     		movs	r0, #100
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 32


 1043 007a FFF7FEFF 		bl	HAL_Delay
 1044              	.LVL100:
 129:Core/Src/main.c ****   {
 1045              		.loc 1 129 9 discriminator 1 view .LVU215
 1046 007e FBE7     		b	.L56
 1047              	.L59:
 1048              		.align	2
 1049              	.L58:
 1050 0080 00000000 		.word	dev_led
 1051 0084 00000000 		.word	.LC13
 1052 0088 00000000 		.word	.LANCHOR1
 1053 008c 0C000000 		.word	.LC14
 1054 0090 00000000 		.word	LED_Toggle
 1055              		.cfi_endproc
 1056              	.LFE291:
 1058              		.global	shellCommandbds_test
 1059              		.global	shellDescbds_test
 1060              		.global	shellCmdbds_test
 1061              		.global	shellCommandflash_test
 1062              		.global	shellDescflash_test
 1063              		.global	shellCmdflash_test
 1064              		.global	shellCommandrs485_send
 1065              		.global	shellDescrs485_send
 1066              		.global	shellCmdrs485_send
 1067              		.global	shellCommandbattery
 1068              		.global	shellDescbattery
 1069              		.global	shellCmdbattery
 1070              		.global	shellCommandled
 1071              		.global	shellDescled
 1072              		.global	shellCmdled
 1073              		.global	shellCommandLDR_Get
 1074              		.global	shellDescLDR_Get
 1075              		.global	shellCmdLDR_Get
 1076              		.global	bds_dev
 1077              		.section	.rodata
 1078              		.align	2
 1079              		.set	.LANCHOR0,. + 0
 1080              	.LC8:
 1081 0000 0000     		.ascii	"\000\000"
 1082 0002 00       		.space	1
 1083              		.section	.data.bds_dev,"aw"
 1084              		.align	2
 1085              		.set	.LANCHOR1,. + 0
 1088              	bds_dev:
 1089 0000 FFFFFFFF 		.word	-1
 1090              		.section	.rodata.shellCmdLDR_Get,"a"
 1091              		.align	2
 1094              	shellCmdLDR_Get:
 1095 0000 4C44525F 		.ascii	"LDR_Get\000"
 1095      47657400 
 1096              		.section	.rodata.shellCmdbattery,"a"
 1097              		.align	2
 1100              	shellCmdbattery:
 1101 0000 62617474 		.ascii	"battery\000"
 1101      65727900 
 1102              		.section	.rodata.shellCmdbds_test,"a"
 1103              		.align	2
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 33


 1106              	shellCmdbds_test:
 1107 0000 6264735F 		.ascii	"bds_test\000"
 1107      74657374 
 1107      00
 1108              		.section	.rodata.shellCmdflash_test,"a"
 1109              		.align	2
 1112              	shellCmdflash_test:
 1113 0000 666C6173 		.ascii	"flash_test\000"
 1113      685F7465 
 1113      737400
 1114              		.section	.rodata.shellCmdled,"a"
 1115              		.align	2
 1118              	shellCmdled:
 1119 0000 6C656400 		.ascii	"led\000"
 1120              		.section	.rodata.shellCmdrs485_send,"a"
 1121              		.align	2
 1124              	shellCmdrs485_send:
 1125 0000 72733438 		.ascii	"rs485_send\000"
 1125      355F7365 
 1125      6E6400
 1126              		.section	.rodata.shellDescLDR_Get,"a"
 1127              		.align	2
 1130              	shellDescLDR_Get:
 1131 0000 67657420 		.ascii	"get ldr value\000"
 1131      6C647220 
 1131      76616C75 
 1131      6500
 1132              		.section	.rodata.shellDescbattery,"a"
 1133              		.align	2
 1136              	shellDescbattery:
 1137 0000 67657420 		.ascii	"get battery voltage value\000"
 1137      62617474 
 1137      65727920 
 1137      766F6C74 
 1137      61676520 
 1138              		.section	.rodata.shellDescbds_test,"a"
 1139              		.align	2
 1142              	shellDescbds_test:
 1143 0000 6264655F 		.ascii	"bde_dev test\000"
 1143      64657620 
 1143      74657374 
 1143      00
 1144              		.section	.rodata.shellDescflash_test,"a"
 1145              		.align	2
 1148              	shellDescflash_test:
 1149 0000 72733438 		.ascii	"rs485 send test\000"
 1149      35207365 
 1149      6E642074 
 1149      65737400 
 1150              		.section	.rodata.shellDescled,"a"
 1151              		.align	2
 1154              	shellDescled:
 1155 0000 74657374 		.ascii	"test led func\000"
 1155      206C6564 
 1155      2066756E 
 1155      6300
 1156              		.section	.rodata.shellDescrs485_send,"a"
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 34


 1157              		.align	2
 1160              	shellDescrs485_send:
 1161 0000 72733438 		.ascii	"rs485 send test\000"
 1161      35207365 
 1161      6E642074 
 1161      65737400 
 1162              		.section	shellCommand,"a"
 1165              	shellCommandbds_test:
 1166 0000 00210000 		.4byte	8448
 1167 0004 00000000 		.4byte	shellCmdbds_test
 1168 0008 00000000 		.4byte	BDS_Test
 1169 000c 00000000 		.4byte	shellDescbds_test
 1172              	shellCommandflash_test:
 1173 0010 00210000 		.4byte	8448
 1174 0014 00000000 		.4byte	shellCmdflash_test
 1175 0018 00000000 		.4byte	Flash_Test
 1176 001c 00000000 		.4byte	shellDescflash_test
 1179              	shellCommandrs485_send:
 1180 0020 00210000 		.4byte	8448
 1181 0024 00000000 		.4byte	shellCmdrs485_send
 1182 0028 00000000 		.4byte	RS485_Test
 1183 002c 00000000 		.4byte	shellDescrs485_send
 1186              	shellCommandbattery:
 1187 0030 00210000 		.4byte	8448
 1188 0034 00000000 		.4byte	shellCmdbattery
 1189 0038 00000000 		.4byte	agencyBattery_Test
 1190 003c 00000000 		.4byte	shellDescbattery
 1193              	shellCommandled:
 1194 0040 00210000 		.4byte	8448
 1195 0044 00000000 		.4byte	shellCmdled
 1196 0048 00000000 		.4byte	LED_Test
 1197 004c 00000000 		.4byte	shellDescled
 1200              	shellCommandLDR_Get:
 1201 0050 00210000 		.4byte	8448
 1202 0054 00000000 		.4byte	shellCmdLDR_Get
 1203 0058 00000000 		.4byte	agencyLDR_Value_Get
 1204 005c 00000000 		.4byte	shellDescLDR_Get
 1205              		.text
 1206              	.Letext0:
 1207              		.file 3 "e:\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\
 1208              		.file 4 "e:\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\
 1209              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 1210              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1211              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 1212              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 1213              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 1214              		.file 10 "FML/Inc/led.h"
 1215              		.file 11 "ThirdParty/Letter-shell/Inc/shell.h"
 1216              		.file 12 "ThirdParty/Letter-shell/Inc/shell_port.h"
 1217              		.file 13 "e:\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\lib\\gcc\\arm-
 1218              		.file 14 "e:\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\
 1219              		.file 15 "FML/Inc/rs485.h"
 1220              		.file 16 "FML/Inc/ATGM332D.h"
 1221              		.file 17 "e:\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\
 1222              		.file 18 "FML/Inc/W25QXX.h"
 1223              		.file 19 "HAL/Inc/adc.h"
 1224              		.file 20 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 35


 1225              		.file 21 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 1226              		.file 22 "HAL/Inc/timer.h"
 1227              		.file 23 "HAL/Inc/gpio.h"
 1228              		.file 24 "HAL/Inc/spi.h"
 1229              		.file 25 "HAL/Inc/usart.h"
 1230              		.file 26 "FML/Inc/EC2x.h"
 1231              		.file 27 "FML/Inc/y_lora.h"
 1232              		.file 28 "<built-in>"
 1233              		.file 29 "e:\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 36


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:20     .rodata.LED_Test.str1.4:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:45     .text.LED_Test:00000000 $t
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:51     .text.LED_Test:00000000 LED_Test
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:224    .text.LED_Test:00000098 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:239    .text.RS485_Test:00000000 $t
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:245    .text.RS485_Test:00000000 RS485_Test
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:276    .text.RS485_Test:00000014 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:284    .rodata.Flash_Test.str1.4:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:291    .text.Flash_Test:00000000 $t
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:297    .text.Flash_Test:00000000 Flash_Test
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:408    .text.Flash_Test:000000a0 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:419    .rodata.BDS_Test.str1.4:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:423    .text.BDS_Test:00000000 $t
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:429    .text.BDS_Test:00000000 BDS_Test
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:538    .text.BDS_Test:0000004c $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:546    .rodata.LDR_Value_Get.str1.4:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:551    .text.LDR_Value_Get:00000000 $t
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:557    .text.LDR_Value_Get:00000000 LDR_Value_Get
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:622    .text.LDR_Value_Get:0000003c $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:628    .text.agencyLDR_Value_Get:00000000 $t
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:634    .text.agencyLDR_Value_Get:00000000 agencyLDR_Value_Get
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:663    .rodata.Battery_Test.str1.4:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:667    .text.Battery_Test:00000000 $t
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:673    .text.Battery_Test:00000000 Battery_Test
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:729    .text.Battery_Test:00000050 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:738    .text.agencyBattery_Test:00000000 $t
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:744    .text.agencyBattery_Test:00000000 agencyBattery_Test
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:767    .text.Error_Handler:00000000 $t
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:773    .text.Error_Handler:00000000 Error_Handler
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:805    .text.SystemClock_Config:00000000 $t
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:811    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:937    .rodata.main.str1.4:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:944    .text.main:00000000 $t
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:950    .text.main:00000000 main
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1050   .text.main:00000080 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1165   shellCommand:00000000 shellCommandbds_test
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1142   .rodata.shellDescbds_test:00000000 shellDescbds_test
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1106   .rodata.shellCmdbds_test:00000000 shellCmdbds_test
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1172   shellCommand:00000010 shellCommandflash_test
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1148   .rodata.shellDescflash_test:00000000 shellDescflash_test
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1112   .rodata.shellCmdflash_test:00000000 shellCmdflash_test
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1179   shellCommand:00000020 shellCommandrs485_send
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1160   .rodata.shellDescrs485_send:00000000 shellDescrs485_send
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1124   .rodata.shellCmdrs485_send:00000000 shellCmdrs485_send
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1186   shellCommand:00000030 shellCommandbattery
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1136   .rodata.shellDescbattery:00000000 shellDescbattery
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1100   .rodata.shellCmdbattery:00000000 shellCmdbattery
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1193   shellCommand:00000040 shellCommandled
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1154   .rodata.shellDescled:00000000 shellDescled
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1118   .rodata.shellCmdled:00000000 shellCmdled
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1200   shellCommand:00000050 shellCommandLDR_Get
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1130   .rodata.shellDescLDR_Get:00000000 shellDescLDR_Get
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1094   .rodata.shellCmdLDR_Get:00000000 shellCmdLDR_Get
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1088   .data.bds_dev:00000000 bds_dev
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1078   .rodata:00000000 $d
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 37


C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1084   .data.bds_dev:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1091   .rodata.shellCmdLDR_Get:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1097   .rodata.shellCmdbattery:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1103   .rodata.shellCmdbds_test:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1109   .rodata.shellCmdflash_test:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1115   .rodata.shellCmdled:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1121   .rodata.shellCmdrs485_send:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1127   .rodata.shellDescLDR_Get:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1133   .rodata.shellDescbattery:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1139   .rodata.shellDescbds_test:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1145   .rodata.shellDescflash_test:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1151   .rodata.shellDescled:00000000 $d
C:\Users\CL\AppData\Local\Temp\cclo7lZd.s:1157   .rodata.shellDescrs485_send:00000000 $d

UNDEFINED SYMBOLS
strcmp
shellPrint
LED_Blink
LED_On
LED_Off
LED_Toggle
dev_led
shell
strlen
RS485_SendData
dev_rs485
__aeabi_i2d
__aeabi_dmul
__aeabi_d2uiz
__aeabi_f2d
BSP_W25Qx_Read_ID
BSP_W25Qx_Read_JEDEC_ID
pow
atgm_read
memset
ADC_Average_Get
__aeabi_dadd
__aeabi_d2f
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
timer_init
MX_GPIO_Init
LED_Init
MX_ADC1_Init
MX_SPI2_Init
MX_SPI3_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
MX_USART3_UART_Init
User_Shell_Init
BSP_W25Qx_Init
atgm_open
ec2x_open
timer_insert
Lora_Init
ARM GAS  C:\Users\CL\AppData\Local\Temp\cclo7lZd.s 			page 38


HAL_Delay
