ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"led.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	dev_led
  20              		.section	.data.dev_led,"aw"
  21              		.align	2
  24              	dev_led:
  25 0000 00040048 		.word	1207960576
  26 0004 0400     		.short	4
  27 0006 0000     		.space	2
  28 0008 00080048 		.word	1207961600
  29 000c 0020     		.short	8192
  30 000e 0000     		.space	2
  31              		.section	.text.LED_Init,"ax",%progbits
  32              		.align	1
  33              		.global	LED_Init
  34              		.syntax unified
  35              		.thumb
  36              		.thumb_func
  38              	LED_Init:
  39              	.LFB288:
  40              		.file 1 "FML/Src/led.c"
   1:FML/Src/led.c **** 
   2:FML/Src/led.c **** /*----------------------------------include-----------------------------------*/
   3:FML/Src/led.c **** #include "led.h"
   4:FML/Src/led.c **** #include "shell_port.h"
   5:FML/Src/led.c **** #include <stdarg.h>
   6:FML/Src/led.c **** /*-----------------------------------macro------------------------------------*/
   7:FML/Src/led.c **** 
   8:FML/Src/led.c **** /*----------------------------------typedef-----------------------------------*/
   9:FML/Src/led.c **** 
  10:FML/Src/led.c **** /*----------------------------------variable----------------------------------*/
  11:FML/Src/led.c **** LED_HandleTypeDef dev_led[] = {
  12:FML/Src/led.c ****     {
  13:FML/Src/led.c ****         GPIOB,
  14:FML/Src/led.c ****         GPIO_PIN_2
  15:FML/Src/led.c ****     },
  16:FML/Src/led.c ****     {
  17:FML/Src/led.c ****         GPIOC,
  18:FML/Src/led.c ****         GPIO_PIN_13
  19:FML/Src/led.c ****     }
  20:FML/Src/led.c **** };
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 2


  21:FML/Src/led.c **** /*-------------------------------------os-------------------------------------*/
  22:FML/Src/led.c **** 
  23:FML/Src/led.c **** /*----------------------------------function----------------------------------*/
  24:FML/Src/led.c **** /**
  25:FML/Src/led.c ****  * @brief 
  26:FML/Src/led.c ****  * 
  27:FML/Src/led.c ****  * @param led 
  28:FML/Src/led.c ****  */
  29:FML/Src/led.c **** void LED_Init(LED_HandleTypeDef *led) {
  41              		.loc 1 29 39
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 40
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 8AB0     		sub	sp, sp, #40
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 48
  53 0004 00AF     		add	r7, sp, #0
  54              	.LCFI2:
  55              		.cfi_def_cfa_register 7
  56 0006 7860     		str	r0, [r7, #4]
  30:FML/Src/led.c ****     GPIO_InitTypeDef GPIO_InitStruct = {0};
  57              		.loc 1 30 22
  58 0008 07F11403 		add	r3, r7, #20
  59 000c 0022     		movs	r2, #0
  60 000e 1A60     		str	r2, [r3]
  61 0010 5A60     		str	r2, [r3, #4]
  62 0012 9A60     		str	r2, [r3, #8]
  63 0014 DA60     		str	r2, [r3, #12]
  64 0016 1A61     		str	r2, [r3, #16]
  65              	.LBB2:
  31:FML/Src/led.c ****     
  32:FML/Src/led.c ****     // 使能GPIO时钟
  33:FML/Src/led.c ****     __HAL_RCC_GPIOB_CLK_ENABLE(); // 替换为实际的GPIO时钟
  66              		.loc 1 33 5
  67 0018 1A4B     		ldr	r3, .L2
  68 001a DB6C     		ldr	r3, [r3, #76]
  69 001c 194A     		ldr	r2, .L2
  70 001e 43F00203 		orr	r3, r3, #2
  71 0022 D364     		str	r3, [r2, #76]
  72 0024 174B     		ldr	r3, .L2
  73 0026 DB6C     		ldr	r3, [r3, #76]
  74 0028 03F00203 		and	r3, r3, #2
  75 002c 3B61     		str	r3, [r7, #16]
  76 002e 3B69     		ldr	r3, [r7, #16]
  77              	.LBE2:
  78              	.LBB3:
  34:FML/Src/led.c ****     __HAL_RCC_GPIOC_CLK_ENABLE(); // 替换为实际的GPIO时钟
  79              		.loc 1 34 5
  80 0030 144B     		ldr	r3, .L2
  81 0032 DB6C     		ldr	r3, [r3, #76]
  82 0034 134A     		ldr	r2, .L2
  83 0036 43F00403 		orr	r3, r3, #4
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 3


  84 003a D364     		str	r3, [r2, #76]
  85 003c 114B     		ldr	r3, .L2
  86 003e DB6C     		ldr	r3, [r3, #76]
  87 0040 03F00403 		and	r3, r3, #4
  88 0044 FB60     		str	r3, [r7, #12]
  89 0046 FB68     		ldr	r3, [r7, #12]
  90              	.LBE3:
  35:FML/Src/led.c ****     // 配置GPIO引脚
  36:FML/Src/led.c ****     GPIO_InitStruct.Pin = led->pin;
  91              		.loc 1 36 30
  92 0048 7B68     		ldr	r3, [r7, #4]
  93 004a 9B88     		ldrh	r3, [r3, #4]
  94              		.loc 1 36 25
  95 004c 7B61     		str	r3, [r7, #20]
  37:FML/Src/led.c ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  96              		.loc 1 37 26
  97 004e 0123     		movs	r3, #1
  98 0050 BB61     		str	r3, [r7, #24]
  38:FML/Src/led.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  99              		.loc 1 38 26
 100 0052 0023     		movs	r3, #0
 101 0054 FB61     		str	r3, [r7, #28]
  39:FML/Src/led.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 102              		.loc 1 39 27
 103 0056 0023     		movs	r3, #0
 104 0058 3B62     		str	r3, [r7, #32]
  40:FML/Src/led.c ****     HAL_GPIO_Init(led->port, &GPIO_InitStruct);
 105              		.loc 1 40 5
 106 005a 7B68     		ldr	r3, [r7, #4]
 107 005c 1B68     		ldr	r3, [r3]
 108 005e 07F11402 		add	r2, r7, #20
 109 0062 1146     		mov	r1, r2
 110 0064 1846     		mov	r0, r3
 111 0066 FFF7FEFF 		bl	HAL_GPIO_Init
  41:FML/Src/led.c ****     
  42:FML/Src/led.c ****     // 关闭LED初始状态
  43:FML/Src/led.c ****     HAL_GPIO_WritePin(led->port, led->pin, GPIO_PIN_RESET);
 112              		.loc 1 43 5
 113 006a 7B68     		ldr	r3, [r7, #4]
 114 006c 1868     		ldr	r0, [r3]
 115 006e 7B68     		ldr	r3, [r7, #4]
 116 0070 9B88     		ldrh	r3, [r3, #4]
 117 0072 0022     		movs	r2, #0
 118 0074 1946     		mov	r1, r3
 119 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
  44:FML/Src/led.c **** }
 120              		.loc 1 44 1
 121 007a 00BF     		nop
 122 007c 2837     		adds	r7, r7, #40
 123              	.LCFI3:
 124              		.cfi_def_cfa_offset 8
 125 007e BD46     		mov	sp, r7
 126              	.LCFI4:
 127              		.cfi_def_cfa_register 13
 128              		@ sp needed
 129 0080 80BD     		pop	{r7, pc}
 130              	.L3:
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 4


 131 0082 00BF     		.align	2
 132              	.L2:
 133 0084 00100240 		.word	1073876992
 134              		.cfi_endproc
 135              	.LFE288:
 137              		.section	.text.LED_On,"ax",%progbits
 138              		.align	1
 139              		.global	LED_On
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 144              	LED_On:
 145              	.LFB289:
  45:FML/Src/led.c **** 
  46:FML/Src/led.c **** /**
  47:FML/Src/led.c ****  * @brief 
  48:FML/Src/led.c ****  * 
  49:FML/Src/led.c ****  * @param led 
  50:FML/Src/led.c ****  */
  51:FML/Src/led.c **** void LED_On(LED_HandleTypeDef *led) {
 146              		.loc 1 51 37
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 8
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150 0000 80B5     		push	{r7, lr}
 151              	.LCFI5:
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 7, -8
 154              		.cfi_offset 14, -4
 155 0002 82B0     		sub	sp, sp, #8
 156              	.LCFI6:
 157              		.cfi_def_cfa_offset 16
 158 0004 00AF     		add	r7, sp, #0
 159              	.LCFI7:
 160              		.cfi_def_cfa_register 7
 161 0006 7860     		str	r0, [r7, #4]
  52:FML/Src/led.c ****     HAL_GPIO_WritePin(led->port, led->pin, GPIO_PIN_SET);
 162              		.loc 1 52 5
 163 0008 7B68     		ldr	r3, [r7, #4]
 164 000a 1868     		ldr	r0, [r3]
 165 000c 7B68     		ldr	r3, [r7, #4]
 166 000e 9B88     		ldrh	r3, [r3, #4]
 167 0010 0122     		movs	r2, #1
 168 0012 1946     		mov	r1, r3
 169 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
  53:FML/Src/led.c **** }
 170              		.loc 1 53 1
 171 0018 00BF     		nop
 172 001a 0837     		adds	r7, r7, #8
 173              	.LCFI8:
 174              		.cfi_def_cfa_offset 8
 175 001c BD46     		mov	sp, r7
 176              	.LCFI9:
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 001e 80BD     		pop	{r7, pc}
 180              		.cfi_endproc
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 5


 181              	.LFE289:
 183              		.section	.text.LED_Off,"ax",%progbits
 184              		.align	1
 185              		.global	LED_Off
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	LED_Off:
 191              	.LFB290:
  54:FML/Src/led.c **** /**
  55:FML/Src/led.c ****  * @brief 
  56:FML/Src/led.c ****  * 
  57:FML/Src/led.c ****  * @param led 
  58:FML/Src/led.c ****  */
  59:FML/Src/led.c **** void LED_Off(LED_HandleTypeDef *led) {
 192              		.loc 1 59 38
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 8
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196 0000 80B5     		push	{r7, lr}
 197              	.LCFI10:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 7, -8
 200              		.cfi_offset 14, -4
 201 0002 82B0     		sub	sp, sp, #8
 202              	.LCFI11:
 203              		.cfi_def_cfa_offset 16
 204 0004 00AF     		add	r7, sp, #0
 205              	.LCFI12:
 206              		.cfi_def_cfa_register 7
 207 0006 7860     		str	r0, [r7, #4]
  60:FML/Src/led.c ****     HAL_GPIO_WritePin(led->port, led->pin, GPIO_PIN_RESET);
 208              		.loc 1 60 5
 209 0008 7B68     		ldr	r3, [r7, #4]
 210 000a 1868     		ldr	r0, [r3]
 211 000c 7B68     		ldr	r3, [r7, #4]
 212 000e 9B88     		ldrh	r3, [r3, #4]
 213 0010 0022     		movs	r2, #0
 214 0012 1946     		mov	r1, r3
 215 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
  61:FML/Src/led.c **** }
 216              		.loc 1 61 1
 217 0018 00BF     		nop
 218 001a 0837     		adds	r7, r7, #8
 219              	.LCFI13:
 220              		.cfi_def_cfa_offset 8
 221 001c BD46     		mov	sp, r7
 222              	.LCFI14:
 223              		.cfi_def_cfa_register 13
 224              		@ sp needed
 225 001e 80BD     		pop	{r7, pc}
 226              		.cfi_endproc
 227              	.LFE290:
 229              		.section	.text.LED_Toggle,"ax",%progbits
 230              		.align	1
 231              		.global	LED_Toggle
 232              		.syntax unified
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 6


 233              		.thumb
 234              		.thumb_func
 236              	LED_Toggle:
 237              	.LFB291:
  62:FML/Src/led.c **** /**
  63:FML/Src/led.c ****  * @brief 
  64:FML/Src/led.c ****  * 
  65:FML/Src/led.c ****  * @param led 
  66:FML/Src/led.c ****  */
  67:FML/Src/led.c **** void LED_Toggle(LED_HandleTypeDef *led) {
 238              		.loc 1 67 41
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 8
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242 0000 80B5     		push	{r7, lr}
 243              	.LCFI15:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 247 0002 82B0     		sub	sp, sp, #8
 248              	.LCFI16:
 249              		.cfi_def_cfa_offset 16
 250 0004 00AF     		add	r7, sp, #0
 251              	.LCFI17:
 252              		.cfi_def_cfa_register 7
 253 0006 7860     		str	r0, [r7, #4]
  68:FML/Src/led.c ****     HAL_GPIO_TogglePin(led->port, led->pin);
 254              		.loc 1 68 5
 255 0008 7B68     		ldr	r3, [r7, #4]
 256 000a 1A68     		ldr	r2, [r3]
 257 000c 7B68     		ldr	r3, [r7, #4]
 258 000e 9B88     		ldrh	r3, [r3, #4]
 259 0010 1946     		mov	r1, r3
 260 0012 1046     		mov	r0, r2
 261 0014 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  69:FML/Src/led.c **** }
 262              		.loc 1 69 1
 263 0018 00BF     		nop
 264 001a 0837     		adds	r7, r7, #8
 265              	.LCFI18:
 266              		.cfi_def_cfa_offset 8
 267 001c BD46     		mov	sp, r7
 268              	.LCFI19:
 269              		.cfi_def_cfa_register 13
 270              		@ sp needed
 271 001e 80BD     		pop	{r7, pc}
 272              		.cfi_endproc
 273              	.LFE291:
 275              		.section	.text.LED1_Toggle,"ax",%progbits
 276              		.align	1
 277              		.global	LED1_Toggle
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 282              	LED1_Toggle:
 283              	.LFB292:
  70:FML/Src/led.c **** 
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 7


  71:FML/Src/led.c **** void LED1_Toggle(void){
 284              		.loc 1 71 23
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288 0000 80B5     		push	{r7, lr}
 289              	.LCFI20:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 7, -8
 292              		.cfi_offset 14, -4
 293 0002 00AF     		add	r7, sp, #0
 294              	.LCFI21:
 295              		.cfi_def_cfa_register 7
  72:FML/Src/led.c ****     LED_Toggle(&dev_led[0]);
 296              		.loc 1 72 5
 297 0004 0248     		ldr	r0, .L8
 298 0006 FFF7FEFF 		bl	LED_Toggle
  73:FML/Src/led.c **** }
 299              		.loc 1 73 1
 300 000a 00BF     		nop
 301 000c 80BD     		pop	{r7, pc}
 302              	.L9:
 303 000e 00BF     		.align	2
 304              	.L8:
 305 0010 00000000 		.word	dev_led
 306              		.cfi_endproc
 307              	.LFE292:
 309              		.section	.text.LED_Blink,"ax",%progbits
 310              		.align	1
 311              		.global	LED_Blink
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	LED_Blink:
 317              	.LFB293:
  74:FML/Src/led.c **** /**
  75:FML/Src/led.c ****  * @brief 
  76:FML/Src/led.c ****  * 
  77:FML/Src/led.c ****  * @param led 
  78:FML/Src/led.c ****  * @param gap 
  79:FML/Src/led.c ****  * @param cycle 
  80:FML/Src/led.c ****  */
  81:FML/Src/led.c **** void LED_Blink(LED_HandleTypeDef *led,uint32_t gap,uint8_t cycle){
 318              		.loc 1 81 66
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 24
 321              		@ frame_needed = 1, uses_anonymous_args = 0
 322 0000 80B5     		push	{r7, lr}
 323              	.LCFI22:
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 7, -8
 326              		.cfi_offset 14, -4
 327 0002 86B0     		sub	sp, sp, #24
 328              	.LCFI23:
 329              		.cfi_def_cfa_offset 32
 330 0004 00AF     		add	r7, sp, #0
 331              	.LCFI24:
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 8


 332              		.cfi_def_cfa_register 7
 333 0006 F860     		str	r0, [r7, #12]
 334 0008 B960     		str	r1, [r7, #8]
 335 000a 1346     		mov	r3, r2
 336 000c FB71     		strb	r3, [r7, #7]
  82:FML/Src/led.c ****     uint8_t i = 0;
 337              		.loc 1 82 13
 338 000e 0023     		movs	r3, #0
 339 0010 FB75     		strb	r3, [r7, #23]
  83:FML/Src/led.c ****     for(i = 0; i < cycle * 2; i++){
 340              		.loc 1 83 11
 341 0012 0023     		movs	r3, #0
 342 0014 FB75     		strb	r3, [r7, #23]
 343              		.loc 1 83 5
 344 0016 0DE0     		b	.L11
 345              	.L12:
  84:FML/Src/led.c ****         HAL_GPIO_TogglePin(led->port,led->pin);
 346              		.loc 1 84 9 discriminator 3
 347 0018 FB68     		ldr	r3, [r7, #12]
 348 001a 1A68     		ldr	r2, [r3]
 349 001c FB68     		ldr	r3, [r7, #12]
 350 001e 9B88     		ldrh	r3, [r3, #4]
 351 0020 1946     		mov	r1, r3
 352 0022 1046     		mov	r0, r2
 353 0024 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  85:FML/Src/led.c ****         Delay_ms(gap);
 354              		.loc 1 85 9 discriminator 3
 355 0028 B868     		ldr	r0, [r7, #8]
 356 002a FFF7FEFF 		bl	Delay_ms
  83:FML/Src/led.c ****     for(i = 0; i < cycle * 2; i++){
 357              		.loc 1 83 32 discriminator 3
 358 002e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 359 0030 0133     		adds	r3, r3, #1
 360 0032 FB75     		strb	r3, [r7, #23]
 361              	.L11:
  83:FML/Src/led.c ****     for(i = 0; i < cycle * 2; i++){
 362              		.loc 1 83 18 discriminator 1
 363 0034 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
  83:FML/Src/led.c ****     for(i = 0; i < cycle * 2; i++){
 364              		.loc 1 83 26 discriminator 1
 365 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 366 0038 5B00     		lsls	r3, r3, #1
  83:FML/Src/led.c ****     for(i = 0; i < cycle * 2; i++){
 367              		.loc 1 83 5 discriminator 1
 368 003a 9A42     		cmp	r2, r3
 369 003c ECDB     		blt	.L12
  86:FML/Src/led.c ****     } 
  87:FML/Src/led.c **** }
 370              		.loc 1 87 1
 371 003e 00BF     		nop
 372 0040 00BF     		nop
 373 0042 1837     		adds	r7, r7, #24
 374              	.LCFI25:
 375              		.cfi_def_cfa_offset 8
 376 0044 BD46     		mov	sp, r7
 377              	.LCFI26:
 378              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 9


 379              		@ sp needed
 380 0046 80BD     		pop	{r7, pc}
 381              		.cfi_endproc
 382              	.LFE293:
 384              		.section	.rodata
 385              		.align	2
 386              	.LC0:
 387 0000 443600   		.ascii	"D6\000"
 388 0003 00       		.align	2
 389              	.LC1:
 390 0004 443700   		.ascii	"D7\000"
 391 0007 00       		.align	2
 392              	.LC2:
 393 0008 696E7661 		.ascii	"invalid led name\000"
 393      6C696420 
 393      6C656420 
 393      6E616D65 
 393      00
 394 0019 000000   		.align	2
 395              	.LC3:
 396 001c 6F6E00   		.ascii	"on\000"
 397 001f 00       		.align	2
 398              	.LC4:
 399 0020 6F666600 		.ascii	"off\000"
 400              		.align	2
 401              	.LC5:
 402 0024 746F6767 		.ascii	"toggle\000"
 402      6C6500
 403 002b 00       		.align	2
 404              	.LC6:
 405 002c 626C696E 		.ascii	"blink\000"
 405      6B00
 406 0032 0000     		.align	2
 407              	.LC7:
 408 0034 696E7661 		.ascii	"invalid cmd type\000"
 408      6C696420 
 408      636D6420 
 408      74797065 
 408      00
 409              		.section	.text.LED_Test,"ax",%progbits
 410              		.align	1
 411              		.global	LED_Test
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 416              	LED_Test:
 417              	.LFB294:
  88:FML/Src/led.c **** /*------------------------------------test------------------------------------*/
  89:FML/Src/led.c **** /**
  90:FML/Src/led.c ****  * @brief LED测试函数
  91:FML/Src/led.c ****  * 
  92:FML/Src/led.c ****  * @param name LED接口（D6/D7）
  93:FML/Src/led.c ****  * @param type LED状态 ON/OFF/TOGGLE/BLINK
  94:FML/Src/led.c ****  * @param ...  可变参数（仅type为blink时有效）args[0]:gap(闪烁间隔ms) args[1]:cycle(
  95:FML/Src/led.c ****  */
  96:FML/Src/led.c **** void LED_Test(char *name, char *type, ...){
 418              		.loc 1 96 43
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 10


 419              		.cfi_startproc
 420              		@ args = 4, pretend = 12, frame = 24
 421              		@ frame_needed = 1, uses_anonymous_args = 1
 422 0000 0EB4     		push	{r1, r2, r3}
 423              	.LCFI27:
 424              		.cfi_def_cfa_offset 12
 425              		.cfi_offset 1, -12
 426              		.cfi_offset 2, -8
 427              		.cfi_offset 3, -4
 428 0002 80B5     		push	{r7, lr}
 429              	.LCFI28:
 430              		.cfi_def_cfa_offset 20
 431              		.cfi_offset 7, -20
 432              		.cfi_offset 14, -16
 433 0004 87B0     		sub	sp, sp, #28
 434              	.LCFI29:
 435              		.cfi_def_cfa_offset 48
 436 0006 00AF     		add	r7, sp, #0
 437              	.LCFI30:
 438              		.cfi_def_cfa_register 7
 439 0008 7860     		str	r0, [r7, #4]
  97:FML/Src/led.c ****   LED_HandleTypeDef *test_led;
  98:FML/Src/led.c ****   uint32_t gap = 0;
 440              		.loc 1 98 12
 441 000a 0023     		movs	r3, #0
 442 000c 3B61     		str	r3, [r7, #16]
  99:FML/Src/led.c ****   uint8_t cycle = 0;
 443              		.loc 1 99 11
 444 000e 0023     		movs	r3, #0
 445 0010 FB73     		strb	r3, [r7, #15]
 446              	.LBB4:
 100:FML/Src/led.c **** 
 101:FML/Src/led.c ****   if(strcmp(name,"D6") == 0)
 447              		.loc 1 101 6
 448 0012 3049     		ldr	r1, .L22
 449 0014 7868     		ldr	r0, [r7, #4]
 450 0016 FFF7FEFF 		bl	strcmp
 451 001a 0346     		mov	r3, r0
 452              		.loc 1 101 5
 453 001c 002B     		cmp	r3, #0
 454 001e 02D1     		bne	.L14
 102:FML/Src/led.c ****     test_led = &dev_led[0];
 455              		.loc 1 102 14
 456 0020 2D4B     		ldr	r3, .L22+4
 457 0022 7B61     		str	r3, [r7, #20]
 458 0024 0EE0     		b	.L15
 459              	.L14:
 103:FML/Src/led.c ****   else if((strcmp(name,"D7") == 0))
 460              		.loc 1 103 12
 461 0026 2D49     		ldr	r1, .L22+8
 462 0028 7868     		ldr	r0, [r7, #4]
 463 002a FFF7FEFF 		bl	strcmp
 464 002e 0346     		mov	r3, r0
 465              		.loc 1 103 10
 466 0030 002B     		cmp	r3, #0
 467 0032 02D1     		bne	.L16
 104:FML/Src/led.c ****     test_led = &dev_led[1];
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 11


 468              		.loc 1 104 14
 469 0034 2A4B     		ldr	r3, .L22+12
 470 0036 7B61     		str	r3, [r7, #20]
 471 0038 04E0     		b	.L15
 472              	.L16:
 105:FML/Src/led.c ****   else{
 106:FML/Src/led.c ****     shellPrint(&shell,"invalid led name");
 473              		.loc 1 106 5
 474 003a 2A49     		ldr	r1, .L22+16
 475 003c 2A48     		ldr	r0, .L22+20
 476 003e FFF7FEFF 		bl	shellPrint
 107:FML/Src/led.c ****     return;
 477              		.loc 1 107 5
 478 0042 40E0     		b	.L13
 479              	.L15:
 480              	.LBE4:
 481              	.LBB5:
 108:FML/Src/led.c ****   }
 109:FML/Src/led.c **** 
 110:FML/Src/led.c ****   if(strcmp(type,"on") == 0)
 482              		.loc 1 110 6
 483 0044 2949     		ldr	r1, .L22+24
 484 0046 786A     		ldr	r0, [r7, #36]
 485 0048 FFF7FEFF 		bl	strcmp
 486 004c 0346     		mov	r3, r0
 487              		.loc 1 110 5
 488 004e 002B     		cmp	r3, #0
 489 0050 03D1     		bne	.L18
 111:FML/Src/led.c ****     LED_On(test_led);
 490              		.loc 1 111 5
 491 0052 7869     		ldr	r0, [r7, #20]
 492 0054 FFF7FEFF 		bl	LED_On
 493 0058 35E0     		b	.L13
 494              	.L18:
 112:FML/Src/led.c ****   else if(strcmp(type,"off") == 0)
 495              		.loc 1 112 11
 496 005a 2549     		ldr	r1, .L22+28
 497 005c 786A     		ldr	r0, [r7, #36]
 498 005e FFF7FEFF 		bl	strcmp
 499 0062 0346     		mov	r3, r0
 500              		.loc 1 112 10
 501 0064 002B     		cmp	r3, #0
 502 0066 03D1     		bne	.L19
 113:FML/Src/led.c ****     LED_Off(test_led);
 503              		.loc 1 113 5
 504 0068 7869     		ldr	r0, [r7, #20]
 505 006a FFF7FEFF 		bl	LED_Off
 506 006e 2AE0     		b	.L13
 507              	.L19:
 114:FML/Src/led.c ****   else if(strcmp(type,"toggle") == 0)
 508              		.loc 1 114 11
 509 0070 2049     		ldr	r1, .L22+32
 510 0072 786A     		ldr	r0, [r7, #36]
 511 0074 FFF7FEFF 		bl	strcmp
 512 0078 0346     		mov	r3, r0
 513              		.loc 1 114 10
 514 007a 002B     		cmp	r3, #0
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 12


 515 007c 03D1     		bne	.L20
 115:FML/Src/led.c ****     LED_Toggle(test_led);
 516              		.loc 1 115 5
 517 007e 7869     		ldr	r0, [r7, #20]
 518 0080 FFF7FEFF 		bl	LED_Toggle
 519 0084 1FE0     		b	.L13
 520              	.L20:
 116:FML/Src/led.c ****   else if(strcmp(type,"blink") == 0)
 521              		.loc 1 116 11
 522 0086 1C49     		ldr	r1, .L22+36
 523 0088 786A     		ldr	r0, [r7, #36]
 524 008a FFF7FEFF 		bl	strcmp
 525 008e 0346     		mov	r3, r0
 526              		.loc 1 116 10
 527 0090 002B     		cmp	r3, #0
 528 0092 13D1     		bne	.L21
 529              	.LBB6:
 117:FML/Src/led.c ****   {
 118:FML/Src/led.c ****     va_list p_args;
 119:FML/Src/led.c ****     va_start(p_args,type);
 530              		.loc 1 119 5
 531 0094 07F12803 		add	r3, r7, #40
 532 0098 BB60     		str	r3, [r7, #8]
 120:FML/Src/led.c ****     gap = va_arg(p_args,int);
 533              		.loc 1 120 11
 534 009a BB68     		ldr	r3, [r7, #8]
 535 009c 1A1D     		adds	r2, r3, #4
 536 009e BA60     		str	r2, [r7, #8]
 537 00a0 1B68     		ldr	r3, [r3]
 538              		.loc 1 120 9
 539 00a2 3B61     		str	r3, [r7, #16]
 121:FML/Src/led.c ****     cycle = va_arg(p_args,int);
 540              		.loc 1 121 13
 541 00a4 BB68     		ldr	r3, [r7, #8]
 542 00a6 1A1D     		adds	r2, r3, #4
 543 00a8 BA60     		str	r2, [r7, #8]
 544 00aa 1B68     		ldr	r3, [r3]
 545              		.loc 1 121 11
 546 00ac FB73     		strb	r3, [r7, #15]
 122:FML/Src/led.c ****     va_end(p_args);
 123:FML/Src/led.c ****     LED_Blink(test_led, gap, cycle);
 547              		.loc 1 123 5
 548 00ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 549 00b0 1A46     		mov	r2, r3
 550 00b2 3969     		ldr	r1, [r7, #16]
 551 00b4 7869     		ldr	r0, [r7, #20]
 552 00b6 FFF7FEFF 		bl	LED_Blink
 553              	.LBE6:
 554 00ba 04E0     		b	.L13
 555              	.L21:
 124:FML/Src/led.c ****   }
 125:FML/Src/led.c ****   else{
 126:FML/Src/led.c ****     shellPrint(&shell,"invalid cmd type");
 556              		.loc 1 126 5
 557 00bc 0F49     		ldr	r1, .L22+40
 558 00be 0A48     		ldr	r0, .L22+20
 559 00c0 FFF7FEFF 		bl	shellPrint
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 13


 127:FML/Src/led.c ****     return;
 560              		.loc 1 127 5
 561 00c4 00BF     		nop
 562              	.L13:
 563              	.LBE5:
 128:FML/Src/led.c ****   }
 129:FML/Src/led.c **** }
 564              		.loc 1 129 1
 565 00c6 1C37     		adds	r7, r7, #28
 566              	.LCFI31:
 567              		.cfi_def_cfa_offset 20
 568 00c8 BD46     		mov	sp, r7
 569              	.LCFI32:
 570              		.cfi_def_cfa_register 13
 571              		@ sp needed
 572 00ca BDE88040 		pop	{r7, lr}
 573              	.LCFI33:
 574              		.cfi_restore 14
 575              		.cfi_restore 7
 576              		.cfi_def_cfa_offset 12
 577 00ce 03B0     		add	sp, sp, #12
 578              	.LCFI34:
 579              		.cfi_restore 3
 580              		.cfi_restore 2
 581              		.cfi_restore 1
 582              		.cfi_def_cfa_offset 0
 583 00d0 7047     		bx	lr
 584              	.L23:
 585 00d2 00BF     		.align	2
 586              	.L22:
 587 00d4 00000000 		.word	.LC0
 588 00d8 00000000 		.word	dev_led
 589 00dc 04000000 		.word	.LC1
 590 00e0 08000000 		.word	dev_led+8
 591 00e4 08000000 		.word	.LC2
 592 00e8 00000000 		.word	shell
 593 00ec 1C000000 		.word	.LC3
 594 00f0 20000000 		.word	.LC4
 595 00f4 24000000 		.word	.LC5
 596 00f8 2C000000 		.word	.LC6
 597 00fc 34000000 		.word	.LC7
 598              		.cfi_endproc
 599              	.LFE294:
 601              		.global	shellCmdled
 602              		.section	.rodata.shellCmdled,"a"
 603              		.align	2
 606              	shellCmdled:
 607 0000 6C656400 		.ascii	"led\000"
 608              		.global	shellDescled
 609              		.section	.rodata.shellDescled,"a"
 610              		.align	2
 613              	shellDescled:
 614 0000 74657374 		.ascii	"test led func\000"
 614      206C6564 
 614      2066756E 
 614      6300
 615              		.global	shellCommandled
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 14


 616              		.section	shellCommand,"a"
 619              	shellCommandled:
 620 0000 00210000 		.4byte	8448
 621 0004 00000000 		.4byte	shellCmdled
 622 0008 00000000 		.4byte	LED_Test
 623 000c 00000000 		.4byte	shellDescled
 624              		.text
 625              	.Letext0:
 626              		.file 2 "e:\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\
 627              		.file 3 "e:\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\
 628              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 629              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 630              		.file 6 "FML/Inc/led.h"
 631              		.file 7 "ThirdParty/Letter-shell/Inc/shell.h"
 632              		.file 8 "ThirdParty/Letter-shell/Inc/shell_port.h"
 633              		.file 9 "e:\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\lib\\gcc\\arm-n
 634              		.file 10 "<built-in>"
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 led.c
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:24     .data.dev_led:00000000 dev_led
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:21     .data.dev_led:00000000 $d
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:32     .text.LED_Init:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:38     .text.LED_Init:00000000 LED_Init
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:133    .text.LED_Init:00000084 $d
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:138    .text.LED_On:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:144    .text.LED_On:00000000 LED_On
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:184    .text.LED_Off:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:190    .text.LED_Off:00000000 LED_Off
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:230    .text.LED_Toggle:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:236    .text.LED_Toggle:00000000 LED_Toggle
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:276    .text.LED1_Toggle:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:282    .text.LED1_Toggle:00000000 LED1_Toggle
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:305    .text.LED1_Toggle:00000010 $d
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:310    .text.LED_Blink:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:316    .text.LED_Blink:00000000 LED_Blink
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:385    .rodata:00000000 $d
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:410    .text.LED_Test:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:416    .text.LED_Test:00000000 LED_Test
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:587    .text.LED_Test:000000d4 $d
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:606    .rodata.shellCmdled:00000000 shellCmdled
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:603    .rodata.shellCmdled:00000000 $d
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:613    .rodata.shellDescled:00000000 shellDescled
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:610    .rodata.shellDescled:00000000 $d
C:\Users\CL\AppData\Local\Temp\cc5gBIYY.s:619    shellCommand:00000000 shellCommandled

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_GPIO_TogglePin
Delay_ms
strcmp
shellPrint
shell
