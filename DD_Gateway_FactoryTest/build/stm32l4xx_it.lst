ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32l4xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB288:
   1:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32l4xx_it.c **** /**
   3:Core/Src/stm32l4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32l4xx_it.c ****   * @file    stm32l4xx_it.c
   5:Core/Src/stm32l4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32l4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32l4xx_it.c ****   * @attention
   8:Core/Src/stm32l4xx_it.c ****   *
   9:Core/Src/stm32l4xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32l4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32l4xx_it.c ****   *
  12:Core/Src/stm32l4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32l4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32l4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32l4xx_it.c ****   *
  16:Core/Src/stm32l4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32l4xx_it.c ****   */
  18:Core/Src/stm32l4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32l4xx_it.c **** 
  20:Core/Src/stm32l4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32l4xx_it.c **** #include "main.h"
  22:Core/Src/stm32l4xx_it.c **** #include "stm32l4xx_it.h"
  23:Core/Src/stm32l4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32l4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32l4xx_it.c **** 
  27:Core/Src/stm32l4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32l4xx_it.c **** 
  30:Core/Src/stm32l4xx_it.c **** /* USER CODE END TD */
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s 			page 2


  31:Core/Src/stm32l4xx_it.c **** 
  32:Core/Src/stm32l4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32l4xx_it.c **** 
  35:Core/Src/stm32l4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32l4xx_it.c **** 
  37:Core/Src/stm32l4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32l4xx_it.c **** 
  40:Core/Src/stm32l4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32l4xx_it.c **** 
  42:Core/Src/stm32l4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32l4xx_it.c **** 
  45:Core/Src/stm32l4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32l4xx_it.c **** 
  47:Core/Src/stm32l4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32l4xx_it.c **** 
  50:Core/Src/stm32l4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32l4xx_it.c **** 
  52:Core/Src/stm32l4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32l4xx_it.c **** 
  55:Core/Src/stm32l4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32l4xx_it.c **** 
  57:Core/Src/stm32l4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32l4xx_it.c **** extern SPI_HandleTypeDef hspi2;
  59:Core/Src/stm32l4xx_it.c **** extern SPI_HandleTypeDef hspi3;
  60:Core/Src/stm32l4xx_it.c **** extern UART_HandleTypeDef huart1;
  61:Core/Src/stm32l4xx_it.c **** extern UART_HandleTypeDef huart2;
  62:Core/Src/stm32l4xx_it.c **** extern UART_HandleTypeDef huart3;
  63:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN EV */
  64:Core/Src/stm32l4xx_it.c **** 
  65:Core/Src/stm32l4xx_it.c **** /* USER CODE END EV */
  66:Core/Src/stm32l4xx_it.c **** 
  67:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32l4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  69:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32l4xx_it.c **** /**
  71:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:Core/Src/stm32l4xx_it.c ****   */
  73:Core/Src/stm32l4xx_it.c **** void NMI_Handler(void)
  74:Core/Src/stm32l4xx_it.c **** {
  29              		.loc 1 74 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  75:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32l4xx_it.c **** 
  77:Core/Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32l4xx_it.c ****   while (1)
  36              		.loc 1 79 3 discriminator 1 view .LVU1
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s 			page 3


  80:Core/Src/stm32l4xx_it.c ****   {
  81:Core/Src/stm32l4xx_it.c ****   }
  37              		.loc 1 81 3 discriminator 1 view .LVU2
  79:Core/Src/stm32l4xx_it.c ****   {
  38              		.loc 1 79 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE288:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB289:
  82:Core/Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32l4xx_it.c **** }
  84:Core/Src/stm32l4xx_it.c **** 
  85:Core/Src/stm32l4xx_it.c **** /**
  86:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Core/Src/stm32l4xx_it.c ****   */
  88:Core/Src/stm32l4xx_it.c **** void HardFault_Handler(void)
  89:Core/Src/stm32l4xx_it.c **** {
  52              		.loc 1 89 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  90:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Core/Src/stm32l4xx_it.c **** 
  92:Core/Src/stm32l4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Core/Src/stm32l4xx_it.c ****   while (1)
  59              		.loc 1 93 3 discriminator 1 view .LVU5
  94:Core/Src/stm32l4xx_it.c ****   {
  95:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Core/Src/stm32l4xx_it.c ****   }
  60              		.loc 1 97 3 discriminator 1 view .LVU6
  93:Core/Src/stm32l4xx_it.c ****   {
  61              		.loc 1 93 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE289:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB290:
  98:Core/Src/stm32l4xx_it.c **** }
  99:Core/Src/stm32l4xx_it.c **** 
 100:Core/Src/stm32l4xx_it.c **** /**
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s 			page 4


 101:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Memory management fault.
 102:Core/Src/stm32l4xx_it.c ****   */
 103:Core/Src/stm32l4xx_it.c **** void MemManage_Handler(void)
 104:Core/Src/stm32l4xx_it.c **** {
  75              		.loc 1 104 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 105:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Core/Src/stm32l4xx_it.c **** 
 107:Core/Src/stm32l4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Core/Src/stm32l4xx_it.c ****   while (1)
  82              		.loc 1 108 3 discriminator 1 view .LVU9
 109:Core/Src/stm32l4xx_it.c ****   {
 110:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32l4xx_it.c ****   }
  83              		.loc 1 112 3 discriminator 1 view .LVU10
 108:Core/Src/stm32l4xx_it.c ****   {
  84              		.loc 1 108 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE290:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB291:
 113:Core/Src/stm32l4xx_it.c **** }
 114:Core/Src/stm32l4xx_it.c **** 
 115:Core/Src/stm32l4xx_it.c **** /**
 116:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 117:Core/Src/stm32l4xx_it.c ****   */
 118:Core/Src/stm32l4xx_it.c **** void BusFault_Handler(void)
 119:Core/Src/stm32l4xx_it.c **** {
  98              		.loc 1 119 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 120:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Core/Src/stm32l4xx_it.c **** 
 122:Core/Src/stm32l4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Core/Src/stm32l4xx_it.c ****   while (1)
 105              		.loc 1 123 3 discriminator 1 view .LVU13
 124:Core/Src/stm32l4xx_it.c ****   {
 125:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Core/Src/stm32l4xx_it.c ****   }
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s 			page 5


 106              		.loc 1 127 3 discriminator 1 view .LVU14
 123:Core/Src/stm32l4xx_it.c ****   {
 107              		.loc 1 123 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE291:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB292:
 128:Core/Src/stm32l4xx_it.c **** }
 129:Core/Src/stm32l4xx_it.c **** 
 130:Core/Src/stm32l4xx_it.c **** /**
 131:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Core/Src/stm32l4xx_it.c ****   */
 133:Core/Src/stm32l4xx_it.c **** void UsageFault_Handler(void)
 134:Core/Src/stm32l4xx_it.c **** {
 121              		.loc 1 134 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 135:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Core/Src/stm32l4xx_it.c **** 
 137:Core/Src/stm32l4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Core/Src/stm32l4xx_it.c ****   while (1)
 128              		.loc 1 138 3 discriminator 1 view .LVU17
 139:Core/Src/stm32l4xx_it.c ****   {
 140:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32l4xx_it.c ****   }
 129              		.loc 1 142 3 discriminator 1 view .LVU18
 138:Core/Src/stm32l4xx_it.c ****   {
 130              		.loc 1 138 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE292:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB293:
 143:Core/Src/stm32l4xx_it.c **** }
 144:Core/Src/stm32l4xx_it.c **** 
 145:Core/Src/stm32l4xx_it.c **** /**
 146:Core/Src/stm32l4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 147:Core/Src/stm32l4xx_it.c ****   */
 148:Core/Src/stm32l4xx_it.c **** void SVC_Handler(void)
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s 			page 6


 149:Core/Src/stm32l4xx_it.c **** {
 144              		.loc 1 149 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 150:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 151:Core/Src/stm32l4xx_it.c **** 
 152:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 153:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 154:Core/Src/stm32l4xx_it.c **** 
 155:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 156:Core/Src/stm32l4xx_it.c **** }
 149              		.loc 1 156 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE293:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB294:
 157:Core/Src/stm32l4xx_it.c **** 
 158:Core/Src/stm32l4xx_it.c **** /**
 159:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Debug monitor.
 160:Core/Src/stm32l4xx_it.c ****   */
 161:Core/Src/stm32l4xx_it.c **** void DebugMon_Handler(void)
 162:Core/Src/stm32l4xx_it.c **** {
 163              		.loc 1 162 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 163:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 164:Core/Src/stm32l4xx_it.c **** 
 165:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 166:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 167:Core/Src/stm32l4xx_it.c **** 
 168:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 169:Core/Src/stm32l4xx_it.c **** }
 168              		.loc 1 169 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE294:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB295:
 170:Core/Src/stm32l4xx_it.c **** 
 171:Core/Src/stm32l4xx_it.c **** /**
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s 			page 7


 172:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Pendable request for system service.
 173:Core/Src/stm32l4xx_it.c ****   */
 174:Core/Src/stm32l4xx_it.c **** void PendSV_Handler(void)
 175:Core/Src/stm32l4xx_it.c **** {
 182              		.loc 1 175 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 176:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 177:Core/Src/stm32l4xx_it.c **** 
 178:Core/Src/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 179:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 180:Core/Src/stm32l4xx_it.c **** 
 181:Core/Src/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 182:Core/Src/stm32l4xx_it.c **** }
 187              		.loc 1 182 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE295:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB296:
 183:Core/Src/stm32l4xx_it.c **** 
 184:Core/Src/stm32l4xx_it.c **** /**
 185:Core/Src/stm32l4xx_it.c ****   * @brief This function handles System tick timer.
 186:Core/Src/stm32l4xx_it.c ****   */
 187:Core/Src/stm32l4xx_it.c **** void SysTick_Handler(void)
 188:Core/Src/stm32l4xx_it.c **** {
 201              		.loc 1 188 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI0:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 189:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 190:Core/Src/stm32l4xx_it.c ****   timer_update();//进行定时事件列表更新
 210              		.loc 1 190 3 view .LVU27
 211 0002 FFF7FEFF 		bl	timer_update
 212              	.LVL0:
 191:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 192:Core/Src/stm32l4xx_it.c ****   HAL_IncTick();
 213              		.loc 1 192 3 view .LVU28
 214 0006 FFF7FEFF 		bl	HAL_IncTick
 215              	.LVL1:
 193:Core/Src/stm32l4xx_it.c ****  
 194:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 195:Core/Src/stm32l4xx_it.c **** 
 196:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s 			page 8


 197:Core/Src/stm32l4xx_it.c **** }
 216              		.loc 1 197 1 is_stmt 0 view .LVU29
 217 000a 08BD     		pop	{r3, pc}
 218              		.cfi_endproc
 219              	.LFE296:
 221              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 222              		.align	1
 223              		.global	SPI2_IRQHandler
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 228              	SPI2_IRQHandler:
 229              	.LFB297:
 198:Core/Src/stm32l4xx_it.c **** 
 199:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
 200:Core/Src/stm32l4xx_it.c **** /* STM32L4xx Peripheral Interrupt Handlers                                    */
 201:Core/Src/stm32l4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 202:Core/Src/stm32l4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 203:Core/Src/stm32l4xx_it.c **** /* please refer to the startup file (startup_stm32l4xx.s).                    */
 204:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
 205:Core/Src/stm32l4xx_it.c **** 
 206:Core/Src/stm32l4xx_it.c **** /**
 207:Core/Src/stm32l4xx_it.c ****   * @brief This function handles SPI2 global interrupt.
 208:Core/Src/stm32l4xx_it.c ****   */
 209:Core/Src/stm32l4xx_it.c **** void SPI2_IRQHandler(void)
 210:Core/Src/stm32l4xx_it.c **** {
 230              		.loc 1 210 1 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 08B5     		push	{r3, lr}
 235              	.LCFI1:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
 211:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 0 */
 212:Core/Src/stm32l4xx_it.c **** 
 213:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SPI2_IRQn 0 */
 214:Core/Src/stm32l4xx_it.c ****   HAL_SPI_IRQHandler(&hspi2);
 239              		.loc 1 214 3 view .LVU31
 240 0002 0248     		ldr	r0, .L18
 241 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 242              	.LVL2:
 215:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 1 */
 216:Core/Src/stm32l4xx_it.c **** 
 217:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SPI2_IRQn 1 */
 218:Core/Src/stm32l4xx_it.c **** }
 243              		.loc 1 218 1 is_stmt 0 view .LVU32
 244 0008 08BD     		pop	{r3, pc}
 245              	.L19:
 246 000a 00BF     		.align	2
 247              	.L18:
 248 000c 00000000 		.word	hspi2
 249              		.cfi_endproc
 250              	.LFE297:
 252              		.section	.text.USART1_IRQHandler,"ax",%progbits
 253              		.align	1
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s 			page 9


 254              		.global	USART1_IRQHandler
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 259              	USART1_IRQHandler:
 260              	.LFB298:
 219:Core/Src/stm32l4xx_it.c **** 
 220:Core/Src/stm32l4xx_it.c **** /**
 221:Core/Src/stm32l4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 222:Core/Src/stm32l4xx_it.c ****   */
 223:Core/Src/stm32l4xx_it.c **** void USART1_IRQHandler(void)
 224:Core/Src/stm32l4xx_it.c **** {
 261              		.loc 1 224 1 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 08B5     		push	{r3, lr}
 266              	.LCFI2:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 3, -8
 269              		.cfi_offset 14, -4
 225:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 226:Core/Src/stm32l4xx_it.c **** 
 227:Core/Src/stm32l4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 228:Core/Src/stm32l4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 270              		.loc 1 228 3 view .LVU34
 271 0002 0248     		ldr	r0, .L22
 272 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 273              	.LVL3:
 229:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 230:Core/Src/stm32l4xx_it.c **** 
 231:Core/Src/stm32l4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 232:Core/Src/stm32l4xx_it.c **** }
 274              		.loc 1 232 1 is_stmt 0 view .LVU35
 275 0008 08BD     		pop	{r3, pc}
 276              	.L23:
 277 000a 00BF     		.align	2
 278              	.L22:
 279 000c 00000000 		.word	huart1
 280              		.cfi_endproc
 281              	.LFE298:
 283              		.section	.text.USART2_IRQHandler,"ax",%progbits
 284              		.align	1
 285              		.global	USART2_IRQHandler
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 290              	USART2_IRQHandler:
 291              	.LFB299:
 233:Core/Src/stm32l4xx_it.c **** 
 234:Core/Src/stm32l4xx_it.c **** /**
 235:Core/Src/stm32l4xx_it.c ****   * @brief This function handles USART2 global interrupt.
 236:Core/Src/stm32l4xx_it.c ****   */
 237:Core/Src/stm32l4xx_it.c **** void USART2_IRQHandler(void)
 238:Core/Src/stm32l4xx_it.c **** {
 292              		.loc 1 238 1 is_stmt 1 view -0
 293              		.cfi_startproc
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s 			page 10


 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 08B5     		push	{r3, lr}
 297              	.LCFI3:
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 3, -8
 300              		.cfi_offset 14, -4
 239:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 240:Core/Src/stm32l4xx_it.c **** 
 241:Core/Src/stm32l4xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 242:Core/Src/stm32l4xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 301              		.loc 1 242 3 view .LVU37
 302 0002 0248     		ldr	r0, .L26
 303 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 304              	.LVL4:
 243:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 244:Core/Src/stm32l4xx_it.c **** 
 245:Core/Src/stm32l4xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 246:Core/Src/stm32l4xx_it.c **** }
 305              		.loc 1 246 1 is_stmt 0 view .LVU38
 306 0008 08BD     		pop	{r3, pc}
 307              	.L27:
 308 000a 00BF     		.align	2
 309              	.L26:
 310 000c 00000000 		.word	huart2
 311              		.cfi_endproc
 312              	.LFE299:
 314              		.section	.text.USART3_IRQHandler,"ax",%progbits
 315              		.align	1
 316              		.global	USART3_IRQHandler
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 321              	USART3_IRQHandler:
 322              	.LFB300:
 247:Core/Src/stm32l4xx_it.c **** 
 248:Core/Src/stm32l4xx_it.c **** /**
 249:Core/Src/stm32l4xx_it.c ****   * @brief This function handles USART3 global interrupt.
 250:Core/Src/stm32l4xx_it.c ****   */
 251:Core/Src/stm32l4xx_it.c **** void USART3_IRQHandler(void)
 252:Core/Src/stm32l4xx_it.c **** {
 323              		.loc 1 252 1 is_stmt 1 view -0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327 0000 08B5     		push	{r3, lr}
 328              	.LCFI4:
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 3, -8
 331              		.cfi_offset 14, -4
 253:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 254:Core/Src/stm32l4xx_it.c **** 
 255:Core/Src/stm32l4xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 256:Core/Src/stm32l4xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 332              		.loc 1 256 3 view .LVU40
 333 0002 0248     		ldr	r0, .L30
 334 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s 			page 11


 335              	.LVL5:
 257:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 258:Core/Src/stm32l4xx_it.c **** 
 259:Core/Src/stm32l4xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 260:Core/Src/stm32l4xx_it.c **** }
 336              		.loc 1 260 1 is_stmt 0 view .LVU41
 337 0008 08BD     		pop	{r3, pc}
 338              	.L31:
 339 000a 00BF     		.align	2
 340              	.L30:
 341 000c 00000000 		.word	huart3
 342              		.cfi_endproc
 343              	.LFE300:
 345              		.section	.text.SPI3_IRQHandler,"ax",%progbits
 346              		.align	1
 347              		.global	SPI3_IRQHandler
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	SPI3_IRQHandler:
 353              	.LFB301:
 261:Core/Src/stm32l4xx_it.c **** 
 262:Core/Src/stm32l4xx_it.c **** /**
 263:Core/Src/stm32l4xx_it.c ****   * @brief This function handles SPI3 global interrupt.
 264:Core/Src/stm32l4xx_it.c ****   */
 265:Core/Src/stm32l4xx_it.c **** void SPI3_IRQHandler(void)
 266:Core/Src/stm32l4xx_it.c **** {
 354              		.loc 1 266 1 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 08B5     		push	{r3, lr}
 359              	.LCFI5:
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 3, -8
 362              		.cfi_offset 14, -4
 267:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SPI3_IRQn 0 */
 268:Core/Src/stm32l4xx_it.c **** 
 269:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SPI3_IRQn 0 */
 270:Core/Src/stm32l4xx_it.c ****   HAL_SPI_IRQHandler(&hspi3);
 363              		.loc 1 270 3 view .LVU43
 364 0002 0248     		ldr	r0, .L34
 365 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 366              	.LVL6:
 271:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SPI3_IRQn 1 */
 272:Core/Src/stm32l4xx_it.c **** 
 273:Core/Src/stm32l4xx_it.c ****   /* USER CODE END SPI3_IRQn 1 */
 274:Core/Src/stm32l4xx_it.c **** }
 367              		.loc 1 274 1 is_stmt 0 view .LVU44
 368 0008 08BD     		pop	{r3, pc}
 369              	.L35:
 370 000a 00BF     		.align	2
 371              	.L34:
 372 000c 00000000 		.word	hspi3
 373              		.cfi_endproc
 374              	.LFE301:
 376              		.text
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s 			page 12


 377              	.Letext0:
 378              		.file 2 "/Applications/ArmGNUToolchain/12.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 379              		.file 3 "/Applications/ArmGNUToolchain/12.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 380              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 381              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 382              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 383              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 384              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 385              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_it.c
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:21     .text.NMI_Handler:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:27     .text.NMI_Handler:00000000 NMI_Handler
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:44     .text.HardFault_Handler:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:67     .text.MemManage_Handler:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:90     .text.BusFault_Handler:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:113    .text.UsageFault_Handler:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:136    .text.SVC_Handler:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:142    .text.SVC_Handler:00000000 SVC_Handler
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:155    .text.DebugMon_Handler:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:161    .text.DebugMon_Handler:00000000 DebugMon_Handler
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:174    .text.PendSV_Handler:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:180    .text.PendSV_Handler:00000000 PendSV_Handler
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:193    .text.SysTick_Handler:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:199    .text.SysTick_Handler:00000000 SysTick_Handler
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:222    .text.SPI2_IRQHandler:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:228    .text.SPI2_IRQHandler:00000000 SPI2_IRQHandler
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:248    .text.SPI2_IRQHandler:0000000c $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:253    .text.USART1_IRQHandler:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:259    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:279    .text.USART1_IRQHandler:0000000c $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:284    .text.USART2_IRQHandler:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:290    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:310    .text.USART2_IRQHandler:0000000c $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:315    .text.USART3_IRQHandler:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:321    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:341    .text.USART3_IRQHandler:0000000c $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:346    .text.SPI3_IRQHandler:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:352    .text.SPI3_IRQHandler:00000000 SPI3_IRQHandler
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccZTOonQ.s:372    .text.SPI3_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
timer_update
HAL_IncTick
HAL_SPI_IRQHandler
hspi2
HAL_UART_IRQHandler
huart1
huart2
huart3
hspi3
