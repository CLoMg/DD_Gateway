ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"SX1278.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SX1278_SPIRead,"ax",%progbits
  20              		.align	1
  21              		.global	SX1278_SPIRead
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	SX1278_SPIRead:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "FML/Src/SX1278.c"
   1:FML/Src/SX1278.c **** /**
   2:FML/Src/SX1278.c ****  * Author Wojciech Domski <Wojciech.Domski@gmail.com>
   3:FML/Src/SX1278.c ****  * www: www.Domski.pl
   4:FML/Src/SX1278.c ****  *
   5:FML/Src/SX1278.c ****  * work based on DORJI.COM sample code and
   6:FML/Src/SX1278.c ****  * https://github.com/realspinner/SX1278_LoRa
   7:FML/Src/SX1278.c ****  */
   8:FML/Src/SX1278.c **** 
   9:FML/Src/SX1278.c **** #include "SX1278.h"
  10:FML/Src/SX1278.c **** #include <string.h>
  11:FML/Src/SX1278.c **** 
  12:FML/Src/SX1278.c **** uint8_t SX1278_SPIRead(SX1278_t *module, uint8_t addr) {
  30              		.loc 1 12 56 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 12 56 is_stmt 0 view .LVU1
  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 3, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  42 0002 0446     		mov	r4, r0
  13:FML/Src/SX1278.c **** 	uint8_t tmp;
  43              		.loc 1 13 2 is_stmt 1 view .LVU2
  14:FML/Src/SX1278.c **** 	SX1278_hw_SPICommand(module->hw, addr);
  44              		.loc 1 14 2 view .LVU3
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 2


  45 0004 0068     		ldr	r0, [r0]
  46              	.LVL1:
  47              		.loc 1 14 2 is_stmt 0 view .LVU4
  48 0006 FFF7FEFF 		bl	SX1278_hw_SPICommand
  49              	.LVL2:
  15:FML/Src/SX1278.c **** 	tmp = SX1278_hw_SPIReadByte(module->hw);
  50              		.loc 1 15 2 is_stmt 1 view .LVU5
  51              		.loc 1 15 8 is_stmt 0 view .LVU6
  52 000a 2068     		ldr	r0, [r4]
  53 000c FFF7FEFF 		bl	SX1278_hw_SPIReadByte
  54              	.LVL3:
  55 0010 0546     		mov	r5, r0
  56              	.LVL4:
  16:FML/Src/SX1278.c **** 	SX1278_hw_SetNSS(module->hw, 1);
  57              		.loc 1 16 2 is_stmt 1 view .LVU7
  58 0012 0121     		movs	r1, #1
  59 0014 2068     		ldr	r0, [r4]
  60 0016 FFF7FEFF 		bl	SX1278_hw_SetNSS
  61              	.LVL5:
  17:FML/Src/SX1278.c **** 	return tmp;
  62              		.loc 1 17 2 view .LVU8
  18:FML/Src/SX1278.c **** }
  63              		.loc 1 18 1 is_stmt 0 view .LVU9
  64 001a 2846     		mov	r0, r5
  65 001c 38BD     		pop	{r3, r4, r5, pc}
  66              		.loc 1 18 1 view .LVU10
  67              		.cfi_endproc
  68              	.LFE0:
  70              		.section	.text.SX1278_SPIWrite,"ax",%progbits
  71              		.align	1
  72              		.global	SX1278_SPIWrite
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  77              	SX1278_SPIWrite:
  78              	.LVL6:
  79              	.LFB1:
  19:FML/Src/SX1278.c **** 
  20:FML/Src/SX1278.c **** void SX1278_SPIWrite(SX1278_t *module, uint8_t addr, uint8_t cmd) {
  80              		.loc 1 20 67 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		.loc 1 20 67 is_stmt 0 view .LVU12
  85 0000 70B5     		push	{r4, r5, r6, lr}
  86              	.LCFI1:
  87              		.cfi_def_cfa_offset 16
  88              		.cfi_offset 4, -16
  89              		.cfi_offset 5, -12
  90              		.cfi_offset 6, -8
  91              		.cfi_offset 14, -4
  92 0002 0446     		mov	r4, r0
  93 0004 0E46     		mov	r6, r1
  94 0006 1546     		mov	r5, r2
  21:FML/Src/SX1278.c **** 	SX1278_hw_SetNSS(module->hw, 0);
  95              		.loc 1 21 2 is_stmt 1 view .LVU13
  96 0008 0021     		movs	r1, #0
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 3


  97              	.LVL7:
  98              		.loc 1 21 2 is_stmt 0 view .LVU14
  99 000a 0068     		ldr	r0, [r0]
 100              	.LVL8:
 101              		.loc 1 21 2 view .LVU15
 102 000c FFF7FEFF 		bl	SX1278_hw_SetNSS
 103              	.LVL9:
  22:FML/Src/SX1278.c **** 	SX1278_hw_SPICommand(module->hw, addr | 0x80);
 104              		.loc 1 22 2 is_stmt 1 view .LVU16
 105 0010 46F08001 		orr	r1, r6, #128
 106 0014 2068     		ldr	r0, [r4]
 107 0016 FFF7FEFF 		bl	SX1278_hw_SPICommand
 108              	.LVL10:
  23:FML/Src/SX1278.c **** 	SX1278_hw_SPICommand(module->hw, cmd);
 109              		.loc 1 23 2 view .LVU17
 110 001a 2946     		mov	r1, r5
 111 001c 2068     		ldr	r0, [r4]
 112 001e FFF7FEFF 		bl	SX1278_hw_SPICommand
 113              	.LVL11:
  24:FML/Src/SX1278.c **** 	SX1278_hw_SetNSS(module->hw, 1);
 114              		.loc 1 24 2 view .LVU18
 115 0022 0121     		movs	r1, #1
 116 0024 2068     		ldr	r0, [r4]
 117 0026 FFF7FEFF 		bl	SX1278_hw_SetNSS
 118              	.LVL12:
  25:FML/Src/SX1278.c **** }
 119              		.loc 1 25 1 is_stmt 0 view .LVU19
 120 002a 70BD     		pop	{r4, r5, r6, pc}
 121              		.loc 1 25 1 view .LVU20
 122              		.cfi_endproc
 123              	.LFE1:
 125              		.section	.text.SX1278_SPIBurstRead,"ax",%progbits
 126              		.align	1
 127              		.global	SX1278_SPIBurstRead
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 132              	SX1278_SPIBurstRead:
 133              	.LVL13:
 134              	.LFB2:
  26:FML/Src/SX1278.c **** 
  27:FML/Src/SX1278.c **** void SX1278_SPIBurstRead(SX1278_t *module, uint8_t addr, uint8_t *rxBuf,
  28:FML/Src/SX1278.c **** 		uint8_t length) {
 135              		.loc 1 28 19 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
  29:FML/Src/SX1278.c **** 	uint8_t i;
 139              		.loc 1 29 2 view .LVU22
  30:FML/Src/SX1278.c **** 	if (length <= 1) {
 140              		.loc 1 30 2 view .LVU23
 141              		.loc 1 30 5 is_stmt 0 view .LVU24
 142 0000 012B     		cmp	r3, #1
 143 0002 1BD9     		bls	.L10
  28:FML/Src/SX1278.c **** 	uint8_t i;
 144              		.loc 1 28 19 view .LVU25
 145 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 4


 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 24
 148              		.cfi_offset 3, -24
 149              		.cfi_offset 4, -20
 150              		.cfi_offset 5, -16
 151              		.cfi_offset 6, -12
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0006 0546     		mov	r5, r0
 155 0008 0C46     		mov	r4, r1
 156 000a 1746     		mov	r7, r2
 157 000c 1E46     		mov	r6, r3
  31:FML/Src/SX1278.c **** 		return;
  32:FML/Src/SX1278.c **** 	} else {
  33:FML/Src/SX1278.c **** 		SX1278_hw_SetNSS(module->hw, 0);
 158              		.loc 1 33 3 is_stmt 1 view .LVU26
 159 000e 0021     		movs	r1, #0
 160              	.LVL14:
 161              		.loc 1 33 3 is_stmt 0 view .LVU27
 162 0010 0068     		ldr	r0, [r0]
 163              	.LVL15:
 164              		.loc 1 33 3 view .LVU28
 165 0012 FFF7FEFF 		bl	SX1278_hw_SetNSS
 166              	.LVL16:
  34:FML/Src/SX1278.c **** 		SX1278_hw_SPICommand(module->hw, addr);
 167              		.loc 1 34 3 is_stmt 1 view .LVU29
 168 0016 2146     		mov	r1, r4
 169 0018 2868     		ldr	r0, [r5]
 170 001a FFF7FEFF 		bl	SX1278_hw_SPICommand
 171              	.LVL17:
  35:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 172              		.loc 1 35 3 view .LVU30
 173              		.loc 1 35 10 is_stmt 0 view .LVU31
 174 001e 0024     		movs	r4, #0
 175              		.loc 1 35 3 view .LVU32
 176 0020 05E0     		b	.L7
 177              	.LVL18:
 178              	.L8:
  36:FML/Src/SX1278.c **** 			*(rxBuf + i) = SX1278_hw_SPIReadByte(module->hw);
 179              		.loc 1 36 4 is_stmt 1 discriminator 3 view .LVU33
 180              		.loc 1 36 19 is_stmt 0 discriminator 3 view .LVU34
 181 0022 2868     		ldr	r0, [r5]
 182 0024 FFF7FEFF 		bl	SX1278_hw_SPIReadByte
 183              	.LVL19:
 184              		.loc 1 36 17 discriminator 3 view .LVU35
 185 0028 3855     		strb	r0, [r7, r4]
  35:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 186              		.loc 1 35 27 is_stmt 1 discriminator 3 view .LVU36
  35:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 187              		.loc 1 35 28 is_stmt 0 discriminator 3 view .LVU37
 188 002a 0134     		adds	r4, r4, #1
 189              	.LVL20:
  35:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 190              		.loc 1 35 28 discriminator 3 view .LVU38
 191 002c E4B2     		uxtb	r4, r4
 192              	.LVL21:
 193              	.L7:
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 5


  35:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 194              		.loc 1 35 15 is_stmt 1 discriminator 1 view .LVU39
  35:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 195              		.loc 1 35 3 is_stmt 0 discriminator 1 view .LVU40
 196 002e B442     		cmp	r4, r6
 197 0030 F7D3     		bcc	.L8
  37:FML/Src/SX1278.c **** 		}
  38:FML/Src/SX1278.c **** 		SX1278_hw_SetNSS(module->hw, 1);
 198              		.loc 1 38 3 is_stmt 1 view .LVU41
 199 0032 0121     		movs	r1, #1
 200 0034 2868     		ldr	r0, [r5]
 201 0036 FFF7FEFF 		bl	SX1278_hw_SetNSS
 202              	.LVL22:
  39:FML/Src/SX1278.c **** 	}
  40:FML/Src/SX1278.c **** }
 203              		.loc 1 40 1 is_stmt 0 view .LVU42
 204 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 205              	.LVL23:
 206              	.L10:
 207              	.LCFI3:
 208              		.cfi_def_cfa_offset 0
 209              		.cfi_restore 3
 210              		.cfi_restore 4
 211              		.cfi_restore 5
 212              		.cfi_restore 6
 213              		.cfi_restore 7
 214              		.cfi_restore 14
 215              		.loc 1 40 1 view .LVU43
 216 003c 7047     		bx	lr
 217              		.cfi_endproc
 218              	.LFE2:
 220              		.section	.text.SX1278_SPIBurstWrite,"ax",%progbits
 221              		.align	1
 222              		.global	SX1278_SPIBurstWrite
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 227              	SX1278_SPIBurstWrite:
 228              	.LVL24:
 229              	.LFB3:
  41:FML/Src/SX1278.c **** 
  42:FML/Src/SX1278.c **** void SX1278_SPIBurstWrite(SX1278_t *module, uint8_t addr, uint8_t *txBuf,
  43:FML/Src/SX1278.c **** 		uint8_t length) {
 230              		.loc 1 43 19 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
  44:FML/Src/SX1278.c **** 	unsigned char i;
 234              		.loc 1 44 2 view .LVU45
  45:FML/Src/SX1278.c **** 	if (length <= 1) {
 235              		.loc 1 45 2 view .LVU46
 236              		.loc 1 45 5 is_stmt 0 view .LVU47
 237 0000 012B     		cmp	r3, #1
 238 0002 1CD9     		bls	.L18
  43:FML/Src/SX1278.c **** 	unsigned char i;
 239              		.loc 1 43 19 view .LVU48
 240 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 6


 241              	.LCFI4:
 242              		.cfi_def_cfa_offset 24
 243              		.cfi_offset 3, -24
 244              		.cfi_offset 4, -20
 245              		.cfi_offset 5, -16
 246              		.cfi_offset 6, -12
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0006 0546     		mov	r5, r0
 250 0008 0C46     		mov	r4, r1
 251 000a 1746     		mov	r7, r2
 252 000c 1E46     		mov	r6, r3
  46:FML/Src/SX1278.c **** 		return;
  47:FML/Src/SX1278.c **** 	} else {
  48:FML/Src/SX1278.c **** 		SX1278_hw_SetNSS(module->hw, 0);
 253              		.loc 1 48 3 is_stmt 1 view .LVU49
 254 000e 0021     		movs	r1, #0
 255              	.LVL25:
 256              		.loc 1 48 3 is_stmt 0 view .LVU50
 257 0010 0068     		ldr	r0, [r0]
 258              	.LVL26:
 259              		.loc 1 48 3 view .LVU51
 260 0012 FFF7FEFF 		bl	SX1278_hw_SetNSS
 261              	.LVL27:
  49:FML/Src/SX1278.c **** 		SX1278_hw_SPICommand(module->hw, addr | 0x80);
 262              		.loc 1 49 3 is_stmt 1 view .LVU52
 263 0016 44F08001 		orr	r1, r4, #128
 264 001a 2868     		ldr	r0, [r5]
 265 001c FFF7FEFF 		bl	SX1278_hw_SPICommand
 266              	.LVL28:
  50:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 267              		.loc 1 50 3 view .LVU53
 268              		.loc 1 50 10 is_stmt 0 view .LVU54
 269 0020 0024     		movs	r4, #0
 270              		.loc 1 50 3 view .LVU55
 271 0022 05E0     		b	.L15
 272              	.LVL29:
 273              	.L16:
  51:FML/Src/SX1278.c **** 			SX1278_hw_SPICommand(module->hw, *(txBuf + i));
 274              		.loc 1 51 4 is_stmt 1 discriminator 3 view .LVU56
 275 0024 395D     		ldrb	r1, [r7, r4]	@ zero_extendqisi2
 276 0026 2868     		ldr	r0, [r5]
 277 0028 FFF7FEFF 		bl	SX1278_hw_SPICommand
 278              	.LVL30:
  50:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 279              		.loc 1 50 27 discriminator 3 view .LVU57
  50:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 280              		.loc 1 50 28 is_stmt 0 discriminator 3 view .LVU58
 281 002c 0134     		adds	r4, r4, #1
 282              	.LVL31:
  50:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 283              		.loc 1 50 28 discriminator 3 view .LVU59
 284 002e E4B2     		uxtb	r4, r4
 285              	.LVL32:
 286              	.L15:
  50:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 287              		.loc 1 50 15 is_stmt 1 discriminator 1 view .LVU60
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 7


  50:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 288              		.loc 1 50 3 is_stmt 0 discriminator 1 view .LVU61
 289 0030 B442     		cmp	r4, r6
 290 0032 F7D3     		bcc	.L16
  52:FML/Src/SX1278.c **** 		}
  53:FML/Src/SX1278.c **** 		SX1278_hw_SetNSS(module->hw, 1);
 291              		.loc 1 53 3 is_stmt 1 view .LVU62
 292 0034 0121     		movs	r1, #1
 293 0036 2868     		ldr	r0, [r5]
 294 0038 FFF7FEFF 		bl	SX1278_hw_SetNSS
 295              	.LVL33:
  54:FML/Src/SX1278.c **** 	}
  55:FML/Src/SX1278.c **** }
 296              		.loc 1 55 1 is_stmt 0 view .LVU63
 297 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 298              	.LVL34:
 299              	.L18:
 300              	.LCFI5:
 301              		.cfi_def_cfa_offset 0
 302              		.cfi_restore 3
 303              		.cfi_restore 4
 304              		.cfi_restore 5
 305              		.cfi_restore 6
 306              		.cfi_restore 7
 307              		.cfi_restore 14
 308              		.loc 1 55 1 view .LVU64
 309 003e 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE3:
 313              		.section	.text.SX1278_standby,"ax",%progbits
 314              		.align	1
 315              		.global	SX1278_standby
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 320              	SX1278_standby:
 321              	.LVL35:
 322              	.LFB5:
  56:FML/Src/SX1278.c **** 
  57:FML/Src/SX1278.c **** void SX1278_config(SX1278_t *module) {
  58:FML/Src/SX1278.c **** 	SX1278_sleep(module); //Change modem mode Must in Sleep mode
  59:FML/Src/SX1278.c **** 	SX1278_hw_DelayMs(15);
  60:FML/Src/SX1278.c **** 
  61:FML/Src/SX1278.c **** 	SX1278_entryLoRa(module);
  62:FML/Src/SX1278.c **** 	//SX1278_SPIWrite(module, 0x5904); //?? Change digital regulator form 1.6V to 1.47V: see errata no
  63:FML/Src/SX1278.c **** 
  64:FML/Src/SX1278.c **** 	uint64_t freq = ((uint64_t) module->frequency << 19) / 32000000;
  65:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
  66:FML/Src/SX1278.c **** 	freq_reg[0] = (uint8_t) (freq >> 16);
  67:FML/Src/SX1278.c **** 	freq_reg[1] = (uint8_t) (freq >> 8);
  68:FML/Src/SX1278.c **** 	freq_reg[2] = (uint8_t) (freq >> 0);
  69:FML/Src/SX1278.c **** 	SX1278_SPIBurstWrite(module, LR_RegFrMsb, (uint8_t*) freq_reg, 3); //setting  frequency parameter
  70:FML/Src/SX1278.c **** 
  71:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, RegSyncWord, 0x34);
  72:FML/Src/SX1278.c **** 
  73:FML/Src/SX1278.c **** 	//setting base parameter
  74:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPaConfig, SX1278_Power[module->power]); //Setting output power param
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 8


  75:FML/Src/SX1278.c **** 
  76:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOcp, 0x0B);			//RegOcp,Close Ocp
  77:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegLna, 0x23);		//RegLNA,High & LNA Enable
  78:FML/Src/SX1278.c **** 	if (SX1278_SpreadFactor[module->LoRa_SF] == 6) {	//SFactor=6
  79:FML/Src/SX1278.c **** 		uint8_t tmp;
  80:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
  81:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
  82:FML/Src/SX1278.c **** 				((SX1278_LoRaBandwidth[module->LoRa_BW] << 4)
  83:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x01)); //Implicit Enable CRC Enable(0x02) & Er
  84:FML/Src/SX1278.c **** 
  85:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
  86:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
  87:FML/Src/SX1278.c **** 				((SX1278_SpreadFactor[module->LoRa_SF] << 4)
  88:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x03));
  89:FML/Src/SX1278.c **** 
  90:FML/Src/SX1278.c **** 		tmp = SX1278_SPIRead(module, 0x31);
  91:FML/Src/SX1278.c **** 		tmp &= 0xF8;
  92:FML/Src/SX1278.c **** 		tmp |= 0x05;
  93:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x31, tmp);
  94:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x37, 0x0C);
  95:FML/Src/SX1278.c **** 	} else {
  96:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
  97:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
  98:FML/Src/SX1278.c **** 				((SX1278_LoRaBandwidth[module->LoRa_BW] << 4)
  99:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x00)); //Explicit Enable CRC Enable(0x02) & Er
 100:FML/Src/SX1278.c **** 
 101:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
 102:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 103:FML/Src/SX1278.c **** 				((SX1278_SpreadFactor[module->LoRa_SF] << 4)
 104:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x00)); //SFactor &  LNA gain set by the inte
 105:FML/Src/SX1278.c **** 	}
 106:FML/Src/SX1278.c **** 
 107:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegModemConfig3, 0x04);
 108:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegSymbTimeoutLsb, 0x08); //RegSymbTimeoutLsb Timeout = 0x3FF(Max)
 109:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPreambleMsb, 0x00); //RegPreambleMsb
 110:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPreambleLsb, 8); //RegPreambleLsb 8+4=12byte Preamble
 111:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_DIOMAPPING2, 0x01); //RegDioMapping2 DIO5=00, DIO4=01
 112:FML/Src/SX1278.c **** 	module->readBytes = 0;
 113:FML/Src/SX1278.c **** 	SX1278_standby(module); //Entry standby mode
 114:FML/Src/SX1278.c **** }
 115:FML/Src/SX1278.c **** 
 116:FML/Src/SX1278.c **** void SX1278_standby(SX1278_t *module) {
 323              		.loc 1 116 39 is_stmt 1 view -0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		.loc 1 116 39 is_stmt 0 view .LVU66
 328 0000 10B5     		push	{r4, lr}
 329              	.LCFI6:
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 4, -8
 332              		.cfi_offset 14, -4
 333 0002 0446     		mov	r4, r0
 117:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x09);
 334              		.loc 1 117 2 is_stmt 1 view .LVU67
 335 0004 0922     		movs	r2, #9
 336 0006 0121     		movs	r1, #1
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 9


 337 0008 FFF7FEFF 		bl	SX1278_SPIWrite
 338              	.LVL36:
 118:FML/Src/SX1278.c **** 	module->status = STANDBY;
 339              		.loc 1 118 2 view .LVU68
 340              		.loc 1 118 17 is_stmt 0 view .LVU69
 341 000c 0123     		movs	r3, #1
 342 000e A375     		strb	r3, [r4, #22]
 119:FML/Src/SX1278.c **** }
 343              		.loc 1 119 1 view .LVU70
 344 0010 10BD     		pop	{r4, pc}
 345              		.loc 1 119 1 view .LVU71
 346              		.cfi_endproc
 347              	.LFE5:
 349              		.section	.text.SX1278_sleep,"ax",%progbits
 350              		.align	1
 351              		.global	SX1278_sleep
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 356              	SX1278_sleep:
 357              	.LVL37:
 358              	.LFB6:
 120:FML/Src/SX1278.c **** 
 121:FML/Src/SX1278.c **** void SX1278_sleep(SX1278_t *module) {
 359              		.loc 1 121 37 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		.loc 1 121 37 is_stmt 0 view .LVU73
 364 0000 10B5     		push	{r4, lr}
 365              	.LCFI7:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 4, -8
 368              		.cfi_offset 14, -4
 369 0002 0446     		mov	r4, r0
 122:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x08);
 370              		.loc 1 122 2 is_stmt 1 view .LVU74
 371 0004 0822     		movs	r2, #8
 372 0006 0121     		movs	r1, #1
 373 0008 FFF7FEFF 		bl	SX1278_SPIWrite
 374              	.LVL38:
 123:FML/Src/SX1278.c **** 	module->status = SLEEP;
 375              		.loc 1 123 2 view .LVU75
 376              		.loc 1 123 17 is_stmt 0 view .LVU76
 377 000c 0023     		movs	r3, #0
 378 000e A375     		strb	r3, [r4, #22]
 124:FML/Src/SX1278.c **** }
 379              		.loc 1 124 1 view .LVU77
 380 0010 10BD     		pop	{r4, pc}
 381              		.loc 1 124 1 view .LVU78
 382              		.cfi_endproc
 383              	.LFE6:
 385              		.section	.text.SX1278_entryLoRa,"ax",%progbits
 386              		.align	1
 387              		.global	SX1278_entryLoRa
 388              		.syntax unified
 389              		.thumb
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 10


 390              		.thumb_func
 392              	SX1278_entryLoRa:
 393              	.LVL39:
 394              	.LFB7:
 125:FML/Src/SX1278.c **** 
 126:FML/Src/SX1278.c **** void SX1278_entryLoRa(SX1278_t *module) {
 395              		.loc 1 126 41 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		.loc 1 126 41 is_stmt 0 view .LVU80
 400 0000 08B5     		push	{r3, lr}
 401              	.LCFI8:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 3, -8
 404              		.cfi_offset 14, -4
 127:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x88);
 405              		.loc 1 127 2 is_stmt 1 view .LVU81
 406 0002 8822     		movs	r2, #136
 407 0004 0121     		movs	r1, #1
 408 0006 FFF7FEFF 		bl	SX1278_SPIWrite
 409              	.LVL40:
 128:FML/Src/SX1278.c **** }
 410              		.loc 1 128 1 is_stmt 0 view .LVU82
 411 000a 08BD     		pop	{r3, pc}
 412              		.cfi_endproc
 413              	.LFE7:
 415              		.global	__aeabi_uldivmod
 416              		.section	.text.SX1278_config,"ax",%progbits
 417              		.align	1
 418              		.global	SX1278_config
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 423              	SX1278_config:
 424              	.LVL41:
 425              	.LFB4:
  57:FML/Src/SX1278.c **** 	SX1278_sleep(module); //Change modem mode Must in Sleep mode
 426              		.loc 1 57 38 is_stmt 1 view -0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 8
 429              		@ frame_needed = 0, uses_anonymous_args = 0
  57:FML/Src/SX1278.c **** 	SX1278_sleep(module); //Change modem mode Must in Sleep mode
 430              		.loc 1 57 38 is_stmt 0 view .LVU84
 431 0000 30B5     		push	{r4, r5, lr}
 432              	.LCFI9:
 433              		.cfi_def_cfa_offset 12
 434              		.cfi_offset 4, -12
 435              		.cfi_offset 5, -8
 436              		.cfi_offset 14, -4
 437 0002 83B0     		sub	sp, sp, #12
 438              	.LCFI10:
 439              		.cfi_def_cfa_offset 24
 440 0004 0446     		mov	r4, r0
  58:FML/Src/SX1278.c **** 	SX1278_hw_DelayMs(15);
 441              		.loc 1 58 2 is_stmt 1 view .LVU85
 442 0006 FFF7FEFF 		bl	SX1278_sleep
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 11


 443              	.LVL42:
  59:FML/Src/SX1278.c **** 
 444              		.loc 1 59 2 view .LVU86
 445 000a 0F20     		movs	r0, #15
 446 000c FFF7FEFF 		bl	SX1278_hw_DelayMs
 447              	.LVL43:
  61:FML/Src/SX1278.c **** 	//SX1278_SPIWrite(module, 0x5904); //?? Change digital regulator form 1.6V to 1.47V: see errata no
 448              		.loc 1 61 2 view .LVU87
 449 0010 2046     		mov	r0, r4
 450 0012 FFF7FEFF 		bl	SX1278_entryLoRa
 451              	.LVL44:
  64:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
 452              		.loc 1 64 2 view .LVU88
  64:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
 453              		.loc 1 64 36 is_stmt 0 view .LVU89
 454 0016 A568     		ldr	r5, [r4, #8]
 455 0018 E368     		ldr	r3, [r4, #12]
  64:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
 456              		.loc 1 64 48 view .LVU90
 457 001a D904     		lsls	r1, r3, #19
  64:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
 458              		.loc 1 64 11 view .LVU91
 459 001c 554A     		ldr	r2, .L32
 460 001e 0023     		movs	r3, #0
 461 0020 E804     		lsls	r0, r5, #19
 462 0022 41EA5531 		orr	r1, r1, r5, lsr #13
 463 0026 FFF7FEFF 		bl	__aeabi_uldivmod
 464              	.LVL45:
  65:FML/Src/SX1278.c **** 	freq_reg[0] = (uint8_t) (freq >> 16);
 465              		.loc 1 65 2 is_stmt 1 view .LVU92
  66:FML/Src/SX1278.c **** 	freq_reg[1] = (uint8_t) (freq >> 8);
 466              		.loc 1 66 2 view .LVU93
  66:FML/Src/SX1278.c **** 	freq_reg[1] = (uint8_t) (freq >> 8);
 467              		.loc 1 66 16 is_stmt 0 view .LVU94
 468 002a C0F30743 		ubfx	r3, r0, #16, #8
  66:FML/Src/SX1278.c **** 	freq_reg[1] = (uint8_t) (freq >> 8);
 469              		.loc 1 66 14 view .LVU95
 470 002e 8DF80430 		strb	r3, [sp, #4]
  67:FML/Src/SX1278.c **** 	freq_reg[2] = (uint8_t) (freq >> 0);
 471              		.loc 1 67 2 is_stmt 1 view .LVU96
  67:FML/Src/SX1278.c **** 	freq_reg[2] = (uint8_t) (freq >> 0);
 472              		.loc 1 67 16 is_stmt 0 view .LVU97
 473 0032 C0F30723 		ubfx	r3, r0, #8, #8
  67:FML/Src/SX1278.c **** 	freq_reg[2] = (uint8_t) (freq >> 0);
 474              		.loc 1 67 14 view .LVU98
 475 0036 8DF80530 		strb	r3, [sp, #5]
  68:FML/Src/SX1278.c **** 	SX1278_SPIBurstWrite(module, LR_RegFrMsb, (uint8_t*) freq_reg, 3); //setting  frequency parameter
 476              		.loc 1 68 2 is_stmt 1 view .LVU99
  68:FML/Src/SX1278.c **** 	SX1278_SPIBurstWrite(module, LR_RegFrMsb, (uint8_t*) freq_reg, 3); //setting  frequency parameter
 477              		.loc 1 68 14 is_stmt 0 view .LVU100
 478 003a 8DF80600 		strb	r0, [sp, #6]
  69:FML/Src/SX1278.c **** 
 479              		.loc 1 69 2 is_stmt 1 view .LVU101
 480 003e 0323     		movs	r3, #3
 481 0040 01AA     		add	r2, sp, #4
 482 0042 0621     		movs	r1, #6
 483              	.LVL46:
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 12


  69:FML/Src/SX1278.c **** 
 484              		.loc 1 69 2 is_stmt 0 view .LVU102
 485 0044 2046     		mov	r0, r4
  69:FML/Src/SX1278.c **** 
 486              		.loc 1 69 2 view .LVU103
 487 0046 FFF7FEFF 		bl	SX1278_SPIBurstWrite
 488              	.LVL47:
  71:FML/Src/SX1278.c **** 
 489              		.loc 1 71 2 is_stmt 1 view .LVU104
 490 004a 3422     		movs	r2, #52
 491 004c 3921     		movs	r1, #57
 492 004e 2046     		mov	r0, r4
 493 0050 FFF7FEFF 		bl	SX1278_SPIWrite
 494              	.LVL48:
  74:FML/Src/SX1278.c **** 
 495              		.loc 1 74 2 view .LVU105
  74:FML/Src/SX1278.c **** 
 496              		.loc 1 74 61 is_stmt 0 view .LVU106
 497 0054 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
  74:FML/Src/SX1278.c **** 
 498              		.loc 1 74 2 view .LVU107
 499 0056 484A     		ldr	r2, .L32+4
 500 0058 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 501 005a 0921     		movs	r1, #9
 502 005c 2046     		mov	r0, r4
 503 005e FFF7FEFF 		bl	SX1278_SPIWrite
 504              	.LVL49:
  76:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegLna, 0x23);		//RegLNA,High & LNA Enable
 505              		.loc 1 76 2 is_stmt 1 view .LVU108
 506 0062 0B22     		movs	r2, #11
 507 0064 1146     		mov	r1, r2
 508 0066 2046     		mov	r0, r4
 509 0068 FFF7FEFF 		bl	SX1278_SPIWrite
 510              	.LVL50:
  77:FML/Src/SX1278.c **** 	if (SX1278_SpreadFactor[module->LoRa_SF] == 6) {	//SFactor=6
 511              		.loc 1 77 2 view .LVU109
 512 006c 2322     		movs	r2, #35
 513 006e 0C21     		movs	r1, #12
 514 0070 2046     		mov	r0, r4
 515 0072 FFF7FEFF 		bl	SX1278_SPIWrite
 516              	.LVL51:
  78:FML/Src/SX1278.c **** 		uint8_t tmp;
 517              		.loc 1 78 2 view .LVU110
  78:FML/Src/SX1278.c **** 		uint8_t tmp;
 518              		.loc 1 78 32 is_stmt 0 view .LVU111
 519 0076 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
  78:FML/Src/SX1278.c **** 		uint8_t tmp;
 520              		.loc 1 78 25 view .LVU112
 521 0078 404A     		ldr	r2, .L32+8
 522 007a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  78:FML/Src/SX1278.c **** 		uint8_t tmp;
 523              		.loc 1 78 5 view .LVU113
 524 007c 062B     		cmp	r3, #6
 525 007e 42D0     		beq	.L31
  96:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 526              		.loc 1 96 3 is_stmt 1 view .LVU114
  98:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x00)); //Explicit Enable CRC Enable(0x02) & Er
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 13


 527              		.loc 1 98 34 is_stmt 0 view .LVU115
 528 0080 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
  98:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x00)); //Explicit Enable CRC Enable(0x02) & Er
 529              		.loc 1 98 27 view .LVU116
 530 0082 3F4A     		ldr	r2, .L32+12
 531 0084 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
  98:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x00)); //Explicit Enable CRC Enable(0x02) & Er
 532              		.loc 1 98 45 view .LVU117
 533 0086 1201     		lsls	r2, r2, #4
 534 0088 D2B2     		uxtb	r2, r2
  99:FML/Src/SX1278.c **** 
 535              		.loc 1 99 34 view .LVU118
 536 008a E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
  99:FML/Src/SX1278.c **** 
 537              		.loc 1 99 27 view .LVU119
 538 008c 3D49     		ldr	r1, .L32+16
 539 008e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
  99:FML/Src/SX1278.c **** 
 540              		.loc 1 99 45 view .LVU120
 541 0090 5B00     		lsls	r3, r3, #1
 542 0092 DBB2     		uxtb	r3, r3
  96:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 543              		.loc 1 96 3 view .LVU121
 544 0094 1A44     		add	r2, r2, r3
 545 0096 02F0FE02 		and	r2, r2, #254
 546 009a 1D21     		movs	r1, #29
 547 009c 2046     		mov	r0, r4
 548 009e FFF7FEFF 		bl	SX1278_SPIWrite
 549              	.LVL52:
 101:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 550              		.loc 1 101 3 is_stmt 1 view .LVU122
 103:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x00)); //SFactor &  LNA gain set by the inte
 551              		.loc 1 103 33 is_stmt 0 view .LVU123
 552 00a2 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 103:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x00)); //SFactor &  LNA gain set by the inte
 553              		.loc 1 103 26 view .LVU124
 554 00a4 354A     		ldr	r2, .L32+8
 555 00a6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 103:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x00)); //SFactor &  LNA gain set by the inte
 556              		.loc 1 103 44 view .LVU125
 557 00a8 1201     		lsls	r2, r2, #4
 558 00aa D2B2     		uxtb	r2, r2
 104:FML/Src/SX1278.c **** 	}
 559              		.loc 1 104 31 view .LVU126
 560 00ac 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 104:FML/Src/SX1278.c **** 	}
 561              		.loc 1 104 24 view .LVU127
 562 00ae 3649     		ldr	r1, .L32+20
 563 00b0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 104:FML/Src/SX1278.c **** 	}
 564              		.loc 1 104 47 view .LVU128
 565 00b2 9B00     		lsls	r3, r3, #2
 566 00b4 DBB2     		uxtb	r3, r3
 101:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 567              		.loc 1 101 3 view .LVU129
 568 00b6 1A44     		add	r2, r2, r3
 569 00b8 02F0FC02 		and	r2, r2, #252
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 14


 570 00bc 1E21     		movs	r1, #30
 571 00be 2046     		mov	r0, r4
 572 00c0 FFF7FEFF 		bl	SX1278_SPIWrite
 573              	.LVL53:
 574              	.L29:
 107:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegSymbTimeoutLsb, 0x08); //RegSymbTimeoutLsb Timeout = 0x3FF(Max)
 575              		.loc 1 107 2 is_stmt 1 view .LVU130
 576 00c4 0422     		movs	r2, #4
 577 00c6 2621     		movs	r1, #38
 578 00c8 2046     		mov	r0, r4
 579 00ca FFF7FEFF 		bl	SX1278_SPIWrite
 580              	.LVL54:
 108:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPreambleMsb, 0x00); //RegPreambleMsb
 581              		.loc 1 108 2 view .LVU131
 582 00ce 0822     		movs	r2, #8
 583 00d0 1F21     		movs	r1, #31
 584 00d2 2046     		mov	r0, r4
 585 00d4 FFF7FEFF 		bl	SX1278_SPIWrite
 586              	.LVL55:
 109:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPreambleLsb, 8); //RegPreambleLsb 8+4=12byte Preamble
 587              		.loc 1 109 2 view .LVU132
 588 00d8 0022     		movs	r2, #0
 589 00da 2021     		movs	r1, #32
 590 00dc 2046     		mov	r0, r4
 591 00de FFF7FEFF 		bl	SX1278_SPIWrite
 592              	.LVL56:
 110:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_DIOMAPPING2, 0x01); //RegDioMapping2 DIO5=00, DIO4=01
 593              		.loc 1 110 2 view .LVU133
 594 00e2 0822     		movs	r2, #8
 595 00e4 2121     		movs	r1, #33
 596 00e6 2046     		mov	r0, r4
 597 00e8 FFF7FEFF 		bl	SX1278_SPIWrite
 598              	.LVL57:
 111:FML/Src/SX1278.c **** 	module->readBytes = 0;
 599              		.loc 1 111 2 view .LVU134
 600 00ec 0122     		movs	r2, #1
 601 00ee 4121     		movs	r1, #65
 602 00f0 2046     		mov	r0, r4
 603 00f2 FFF7FEFF 		bl	SX1278_SPIWrite
 604              	.LVL58:
 112:FML/Src/SX1278.c **** 	SX1278_standby(module); //Entry standby mode
 605              		.loc 1 112 2 view .LVU135
 112:FML/Src/SX1278.c **** 	SX1278_standby(module); //Entry standby mode
 606              		.loc 1 112 20 is_stmt 0 view .LVU136
 607 00f6 0023     		movs	r3, #0
 608 00f8 84F81731 		strb	r3, [r4, #279]
 113:FML/Src/SX1278.c **** }
 609              		.loc 1 113 2 is_stmt 1 view .LVU137
 610 00fc 2046     		mov	r0, r4
 611 00fe FFF7FEFF 		bl	SX1278_standby
 612              	.LVL59:
 114:FML/Src/SX1278.c **** 
 613              		.loc 1 114 1 is_stmt 0 view .LVU138
 614 0102 03B0     		add	sp, sp, #12
 615              	.LCFI11:
 616              		.cfi_remember_state
 617              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 15


 618              		@ sp needed
 619 0104 30BD     		pop	{r4, r5, pc}
 620              	.LVL60:
 621              	.L31:
 622              	.LCFI12:
 623              		.cfi_restore_state
 624              	.LBB2:
  79:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
 625              		.loc 1 79 3 is_stmt 1 view .LVU139
  80:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 626              		.loc 1 80 3 view .LVU140
  82:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x01)); //Implicit Enable CRC Enable(0x02) & Er
 627              		.loc 1 82 34 is_stmt 0 view .LVU141
 628 0106 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
  82:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x01)); //Implicit Enable CRC Enable(0x02) & Er
 629              		.loc 1 82 27 view .LVU142
 630 0108 1D4A     		ldr	r2, .L32+12
 631 010a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
  82:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x01)); //Implicit Enable CRC Enable(0x02) & Er
 632              		.loc 1 82 45 view .LVU143
 633 010c 1201     		lsls	r2, r2, #4
 634 010e D2B2     		uxtb	r2, r2
  83:FML/Src/SX1278.c **** 
 635              		.loc 1 83 34 view .LVU144
 636 0110 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
  83:FML/Src/SX1278.c **** 
 637              		.loc 1 83 27 view .LVU145
 638 0112 1C49     		ldr	r1, .L32+16
 639 0114 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
  83:FML/Src/SX1278.c **** 
 640              		.loc 1 83 45 view .LVU146
 641 0116 5B00     		lsls	r3, r3, #1
 642 0118 DBB2     		uxtb	r3, r3
  83:FML/Src/SX1278.c **** 
 643              		.loc 1 83 7 view .LVU147
 644 011a 1A44     		add	r2, r2, r3
 645 011c D2B2     		uxtb	r2, r2
  80:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 646              		.loc 1 80 3 view .LVU148
 647 011e 0132     		adds	r2, r2, #1
 648 0120 D2B2     		uxtb	r2, r2
 649 0122 1D21     		movs	r1, #29
 650 0124 2046     		mov	r0, r4
 651 0126 FFF7FEFF 		bl	SX1278_SPIWrite
 652              	.LVL61:
  85:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 653              		.loc 1 85 3 is_stmt 1 view .LVU149
  87:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x03));
 654              		.loc 1 87 33 is_stmt 0 view .LVU150
 655 012a 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
  87:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x03));
 656              		.loc 1 87 26 view .LVU151
 657 012c 134A     		ldr	r2, .L32+8
 658 012e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
  87:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x03));
 659              		.loc 1 87 44 view .LVU152
 660 0130 1201     		lsls	r2, r2, #4
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 16


 661 0132 D2B2     		uxtb	r2, r2
  88:FML/Src/SX1278.c **** 
 662              		.loc 1 88 31 view .LVU153
 663 0134 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
  88:FML/Src/SX1278.c **** 
 664              		.loc 1 88 24 view .LVU154
 665 0136 1449     		ldr	r1, .L32+20
 666 0138 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
  88:FML/Src/SX1278.c **** 
 667              		.loc 1 88 47 view .LVU155
 668 013a 9B00     		lsls	r3, r3, #2
 669 013c DBB2     		uxtb	r3, r3
  88:FML/Src/SX1278.c **** 
 670              		.loc 1 88 7 view .LVU156
 671 013e 1A44     		add	r2, r2, r3
 672 0140 D2B2     		uxtb	r2, r2
  85:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 673              		.loc 1 85 3 view .LVU157
 674 0142 0332     		adds	r2, r2, #3
 675 0144 D2B2     		uxtb	r2, r2
 676 0146 1E21     		movs	r1, #30
 677 0148 2046     		mov	r0, r4
 678 014a FFF7FEFF 		bl	SX1278_SPIWrite
 679              	.LVL62:
  90:FML/Src/SX1278.c **** 		tmp &= 0xF8;
 680              		.loc 1 90 3 is_stmt 1 view .LVU158
  90:FML/Src/SX1278.c **** 		tmp &= 0xF8;
 681              		.loc 1 90 9 is_stmt 0 view .LVU159
 682 014e 3121     		movs	r1, #49
 683 0150 2046     		mov	r0, r4
 684 0152 FFF7FEFF 		bl	SX1278_SPIRead
 685              	.LVL63:
  91:FML/Src/SX1278.c **** 		tmp |= 0x05;
 686              		.loc 1 91 3 is_stmt 1 view .LVU160
  91:FML/Src/SX1278.c **** 		tmp |= 0x05;
 687              		.loc 1 91 7 is_stmt 0 view .LVU161
 688 0156 00F0F802 		and	r2, r0, #248
 689              	.LVL64:
  92:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x31, tmp);
 690              		.loc 1 92 3 is_stmt 1 view .LVU162
  93:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x37, 0x0C);
 691              		.loc 1 93 3 view .LVU163
 692 015a 42F00502 		orr	r2, r2, #5
 693              	.LVL65:
  93:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x37, 0x0C);
 694              		.loc 1 93 3 is_stmt 0 view .LVU164
 695 015e 3121     		movs	r1, #49
 696 0160 2046     		mov	r0, r4
 697              	.LVL66:
  93:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x37, 0x0C);
 698              		.loc 1 93 3 view .LVU165
 699 0162 FFF7FEFF 		bl	SX1278_SPIWrite
 700              	.LVL67:
  94:FML/Src/SX1278.c **** 	} else {
 701              		.loc 1 94 3 is_stmt 1 view .LVU166
 702 0166 0C22     		movs	r2, #12
 703 0168 3721     		movs	r1, #55
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 17


 704 016a 2046     		mov	r0, r4
 705 016c FFF7FEFF 		bl	SX1278_SPIWrite
 706              	.LVL68:
 707              	.LBE2:
 708 0170 A8E7     		b	.L29
 709              	.L33:
 710 0172 00BF     		.align	2
 711              	.L32:
 712 0174 0048E801 		.word	32000000
 713 0178 00000000 		.word	.LANCHOR0
 714 017c 00000000 		.word	.LANCHOR1
 715 0180 00000000 		.word	.LANCHOR2
 716 0184 00000000 		.word	.LANCHOR3
 717 0188 00000000 		.word	.LANCHOR4
 718              		.cfi_endproc
 719              	.LFE4:
 721              		.section	.text.SX1278_clearLoRaIrq,"ax",%progbits
 722              		.align	1
 723              		.global	SX1278_clearLoRaIrq
 724              		.syntax unified
 725              		.thumb
 726              		.thumb_func
 728              	SX1278_clearLoRaIrq:
 729              	.LVL69:
 730              	.LFB8:
 129:FML/Src/SX1278.c **** 
 130:FML/Src/SX1278.c **** void SX1278_clearLoRaIrq(SX1278_t *module) {
 731              		.loc 1 130 44 view -0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              		.loc 1 130 44 is_stmt 0 view .LVU168
 736 0000 08B5     		push	{r3, lr}
 737              	.LCFI13:
 738              		.cfi_def_cfa_offset 8
 739              		.cfi_offset 3, -8
 740              		.cfi_offset 14, -4
 131:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegIrqFlags, 0xFF);
 741              		.loc 1 131 2 is_stmt 1 view .LVU169
 742 0002 FF22     		movs	r2, #255
 743 0004 1221     		movs	r1, #18
 744 0006 FFF7FEFF 		bl	SX1278_SPIWrite
 745              	.LVL70:
 132:FML/Src/SX1278.c **** }
 746              		.loc 1 132 1 is_stmt 0 view .LVU170
 747 000a 08BD     		pop	{r3, pc}
 748              		.cfi_endproc
 749              	.LFE8:
 751              		.section	.text.SX1278_LoRaEntryRx,"ax",%progbits
 752              		.align	1
 753              		.global	SX1278_LoRaEntryRx
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 758              	SX1278_LoRaEntryRx:
 759              	.LVL71:
 760              	.LFB9:
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 18


 133:FML/Src/SX1278.c **** 
 134:FML/Src/SX1278.c **** int SX1278_LoRaEntryRx(SX1278_t *module, uint8_t length, uint32_t timeout) {
 761              		.loc 1 134 76 is_stmt 1 view -0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              		.loc 1 134 76 is_stmt 0 view .LVU172
 766 0000 70B5     		push	{r4, r5, r6, lr}
 767              	.LCFI14:
 768              		.cfi_def_cfa_offset 16
 769              		.cfi_offset 4, -16
 770              		.cfi_offset 5, -12
 771              		.cfi_offset 6, -8
 772              		.cfi_offset 14, -4
 773 0002 0546     		mov	r5, r0
 774 0004 0E46     		mov	r6, r1
 775 0006 1446     		mov	r4, r2
 135:FML/Src/SX1278.c **** 	uint8_t addr;
 776              		.loc 1 135 2 is_stmt 1 view .LVU173
 136:FML/Src/SX1278.c **** 
 137:FML/Src/SX1278.c **** 	module->packetLength = length;
 777              		.loc 1 137 2 view .LVU174
 778              		.loc 1 137 23 is_stmt 0 view .LVU175
 779 0008 4175     		strb	r1, [r0, #21]
 138:FML/Src/SX1278.c **** 
 139:FML/Src/SX1278.c **** 	SX1278_config(module);		//Setting base parameter
 780              		.loc 1 139 2 is_stmt 1 view .LVU176
 781 000a FFF7FEFF 		bl	SX1278_config
 782              	.LVL72:
 140:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_PADAC, 0x84);	//Normal and RX
 783              		.loc 1 140 2 view .LVU177
 784 000e 8422     		movs	r2, #132
 785 0010 4D21     		movs	r1, #77
 786 0012 2846     		mov	r0, r5
 787 0014 FFF7FEFF 		bl	SX1278_SPIWrite
 788              	.LVL73:
 141:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegHopPeriod, 0xFF);	//No FHSS
 789              		.loc 1 141 2 view .LVU178
 790 0018 FF22     		movs	r2, #255
 791 001a 2421     		movs	r1, #36
 792 001c 2846     		mov	r0, r5
 793 001e FFF7FEFF 		bl	SX1278_SPIWrite
 794              	.LVL74:
 142:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_DIOMAPPING1, 0x01);//DIO=00,DIO1=00,DIO2=00, DIO3=01 (DIO0  RxDone)
 795              		.loc 1 142 2 view .LVU179
 796 0022 0122     		movs	r2, #1
 797 0024 4021     		movs	r1, #64
 798 0026 2846     		mov	r0, r5
 799 0028 FFF7FEFF 		bl	SX1278_SPIWrite
 800              	.LVL75:
 143:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegIrqFlagsMask, 0x3F);//Open RxDone interrupt & Timeout 0011 1111
 801              		.loc 1 143 2 view .LVU180
 802 002c 3F22     		movs	r2, #63
 803 002e 1121     		movs	r1, #17
 804 0030 2846     		mov	r0, r5
 805 0032 FFF7FEFF 		bl	SX1278_SPIWrite
 806              	.LVL76:
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 19


 144:FML/Src/SX1278.c **** 	SX1278_clearLoRaIrq(module);
 807              		.loc 1 144 2 view .LVU181
 808 0036 2846     		mov	r0, r5
 809 0038 FFF7FEFF 		bl	SX1278_clearLoRaIrq
 810              	.LVL77:
 145:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPayloadLength, length);//Payload Length 21byte(this register must di
 811              		.loc 1 145 2 view .LVU182
 812 003c 3246     		mov	r2, r6
 813 003e 2221     		movs	r1, #34
 814 0040 2846     		mov	r0, r5
 815 0042 FFF7FEFF 		bl	SX1278_SPIWrite
 816              	.LVL78:
 146:FML/Src/SX1278.c **** 	addr = SX1278_SPIRead(module, LR_RegFifoRxBaseAddr); //Read RxBaseAddr
 817              		.loc 1 146 2 view .LVU183
 818              		.loc 1 146 9 is_stmt 0 view .LVU184
 819 0046 0F21     		movs	r1, #15
 820 0048 2846     		mov	r0, r5
 821 004a FFF7FEFF 		bl	SX1278_SPIRead
 822              	.LVL79:
 823 004e 0246     		mov	r2, r0
 824              	.LVL80:
 147:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RxBaseAddr->FiFoAddrPtr
 825              		.loc 1 147 2 is_stmt 1 view .LVU185
 826 0050 0D21     		movs	r1, #13
 827 0052 2846     		mov	r0, r5
 828 0054 FFF7FEFF 		bl	SX1278_SPIWrite
 829              	.LVL81:
 148:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x8d);	//Mode//Low Frequency Mode
 830              		.loc 1 148 2 view .LVU186
 831 0058 8D22     		movs	r2, #141
 832 005a 0121     		movs	r1, #1
 833 005c 2846     		mov	r0, r5
 834 005e FFF7FEFF 		bl	SX1278_SPIWrite
 835              	.LVL82:
 149:FML/Src/SX1278.c **** 	//SX1278_SPIWrite(module, LR_RegOpMode,0x05);	//Continuous Rx Mode //High Frequency Mode
 150:FML/Src/SX1278.c **** 	module->readBytes = 0;
 836              		.loc 1 150 2 view .LVU187
 837              		.loc 1 150 20 is_stmt 0 view .LVU188
 838 0062 0023     		movs	r3, #0
 839 0064 85F81731 		strb	r3, [r5, #279]
 840 0068 06E0     		b	.L40
 841              	.L42:
 151:FML/Src/SX1278.c **** 
 152:FML/Src/SX1278.c **** 	while (1) {
 153:FML/Src/SX1278.c **** 		if ((SX1278_SPIRead(module, LR_RegModemStat) & 0x04) == 0x04) {	//Rx-on going RegModemStat
 154:FML/Src/SX1278.c **** 			module->status = RX;
 842              		.loc 1 154 4 is_stmt 1 view .LVU189
 843              		.loc 1 154 19 is_stmt 0 view .LVU190
 844 006a 0323     		movs	r3, #3
 845 006c AB75     		strb	r3, [r5, #22]
 155:FML/Src/SX1278.c **** 			return 1;
 846              		.loc 1 155 4 is_stmt 1 view .LVU191
 847              		.loc 1 155 11 is_stmt 0 view .LVU192
 848 006e 0120     		movs	r0, #1
 849              	.L36:
 156:FML/Src/SX1278.c **** 		}
 157:FML/Src/SX1278.c **** 		if (--timeout == 0) {
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 20


 158:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 159:FML/Src/SX1278.c **** 			SX1278_config(module);
 160:FML/Src/SX1278.c **** 			return 0;
 161:FML/Src/SX1278.c **** 		}
 162:FML/Src/SX1278.c **** 		SX1278_hw_DelayMs(1);
 163:FML/Src/SX1278.c **** 	}
 164:FML/Src/SX1278.c **** }
 850              		.loc 1 164 1 view .LVU193
 851 0070 70BD     		pop	{r4, r5, r6, pc}
 852              	.LVL83:
 853              	.L39:
 162:FML/Src/SX1278.c **** 	}
 854              		.loc 1 162 3 is_stmt 1 view .LVU194
 855 0072 0120     		movs	r0, #1
 856 0074 FFF7FEFF 		bl	SX1278_hw_DelayMs
 857              	.LVL84:
 152:FML/Src/SX1278.c **** 		if ((SX1278_SPIRead(module, LR_RegModemStat) & 0x04) == 0x04) {	//Rx-on going RegModemStat
 858              		.loc 1 152 8 view .LVU195
 859              	.L40:
 152:FML/Src/SX1278.c **** 		if ((SX1278_SPIRead(module, LR_RegModemStat) & 0x04) == 0x04) {	//Rx-on going RegModemStat
 860              		.loc 1 152 2 view .LVU196
 153:FML/Src/SX1278.c **** 			module->status = RX;
 861              		.loc 1 153 3 view .LVU197
 153:FML/Src/SX1278.c **** 			module->status = RX;
 862              		.loc 1 153 8 is_stmt 0 view .LVU198
 863 0078 1821     		movs	r1, #24
 864 007a 2846     		mov	r0, r5
 865 007c FFF7FEFF 		bl	SX1278_SPIRead
 866              	.LVL85:
 153:FML/Src/SX1278.c **** 			module->status = RX;
 867              		.loc 1 153 6 view .LVU199
 868 0080 10F0040F 		tst	r0, #4
 869 0084 F1D1     		bne	.L42
 157:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 870              		.loc 1 157 3 is_stmt 1 view .LVU200
 871              	.LVL86:
 157:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 872              		.loc 1 157 6 is_stmt 0 view .LVU201
 873 0086 013C     		subs	r4, r4, #1
 874              	.LVL87:
 157:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 875              		.loc 1 157 6 view .LVU202
 876 0088 F3D1     		bne	.L39
 158:FML/Src/SX1278.c **** 			SX1278_config(module);
 877              		.loc 1 158 4 is_stmt 1 view .LVU203
 878 008a 2868     		ldr	r0, [r5]
 879 008c FFF7FEFF 		bl	SX1278_hw_Reset
 880              	.LVL88:
 159:FML/Src/SX1278.c **** 			return 0;
 881              		.loc 1 159 4 view .LVU204
 882 0090 2846     		mov	r0, r5
 883 0092 FFF7FEFF 		bl	SX1278_config
 884              	.LVL89:
 160:FML/Src/SX1278.c **** 		}
 885              		.loc 1 160 4 view .LVU205
 160:FML/Src/SX1278.c **** 		}
 886              		.loc 1 160 11 is_stmt 0 view .LVU206
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 21


 887 0096 0020     		movs	r0, #0
 888 0098 EAE7     		b	.L36
 889              		.cfi_endproc
 890              	.LFE9:
 892              		.section	.text.SX1278_LoRaRxPacket,"ax",%progbits
 893              		.align	1
 894              		.global	SX1278_LoRaRxPacket
 895              		.syntax unified
 896              		.thumb
 897              		.thumb_func
 899              	SX1278_LoRaRxPacket:
 900              	.LVL90:
 901              	.LFB10:
 165:FML/Src/SX1278.c **** 
 166:FML/Src/SX1278.c **** /**
 167:FML/Src/SX1278.c ****  * @brief 将DIO0设置为RxDone中断，此函数作为DIO0连接引脚的中断回调函数
 168:FML/Src/SX1278.c ****  * 
 169:FML/Src/SX1278.c ****  * @param module 
 170:FML/Src/SX1278.c ****  * @return uint8_t 
 171:FML/Src/SX1278.c ****  */
 172:FML/Src/SX1278.c **** uint8_t SX1278_LoRaRxPacket(SX1278_t *module) {
 902              		.loc 1 172 47 is_stmt 1 view -0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906              		.loc 1 172 47 is_stmt 0 view .LVU208
 907 0000 70B5     		push	{r4, r5, r6, lr}
 908              	.LCFI15:
 909              		.cfi_def_cfa_offset 16
 910              		.cfi_offset 4, -16
 911              		.cfi_offset 5, -12
 912              		.cfi_offset 6, -8
 913              		.cfi_offset 14, -4
 914 0002 0446     		mov	r4, r0
 173:FML/Src/SX1278.c **** 	unsigned char addr;
 915              		.loc 1 173 2 is_stmt 1 view .LVU209
 174:FML/Src/SX1278.c **** 	unsigned char packet_size;
 916              		.loc 1 174 2 view .LVU210
 175:FML/Src/SX1278.c **** 
 176:FML/Src/SX1278.c **** 	if (SX1278_hw_GetDIO0(module->hw)) {
 917              		.loc 1 176 2 view .LVU211
 918              		.loc 1 176 6 is_stmt 0 view .LVU212
 919 0004 0068     		ldr	r0, [r0]
 920              	.LVL91:
 921              		.loc 1 176 6 view .LVU213
 922 0006 FFF7FEFF 		bl	SX1278_hw_GetDIO0
 923              	.LVL92:
 924              		.loc 1 176 5 view .LVU214
 925 000a 10B9     		cbnz	r0, .L48
 926              	.L44:
 177:FML/Src/SX1278.c **** 		memset(module->rxBuffer, 0x00, SX1278_MAX_PACKET);
 178:FML/Src/SX1278.c **** 
 179:FML/Src/SX1278.c **** 		addr = SX1278_SPIRead(module, LR_RegFifoRxCurrentaddr); //last packet addr
 180:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RxBaseAddr -> FiFoAddrPtr
 181:FML/Src/SX1278.c **** 
 182:FML/Src/SX1278.c **** 		if (module->LoRa_SF == SX1278_LORA_SF_6) { //When SpreadFactor is six,will used Implicit Header m
 183:FML/Src/SX1278.c **** 			packet_size = module->packetLength;
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 22


 184:FML/Src/SX1278.c **** 		} else {
 185:FML/Src/SX1278.c **** 			packet_size = SX1278_SPIRead(module, LR_RegRxNbBytes); //Number for received bytes
 186:FML/Src/SX1278.c **** 		}
 187:FML/Src/SX1278.c **** 
 188:FML/Src/SX1278.c **** 		SX1278_SPIBurstRead(module, 0x00, module->rxBuffer, packet_size);
 189:FML/Src/SX1278.c **** 		module->readBytes = packet_size;
 190:FML/Src/SX1278.c **** 		SX1278_clearLoRaIrq(module);
 191:FML/Src/SX1278.c **** 	}
 192:FML/Src/SX1278.c **** 	return module->readBytes;
 927              		.loc 1 192 2 is_stmt 1 view .LVU215
 193:FML/Src/SX1278.c **** }
 928              		.loc 1 193 1 is_stmt 0 view .LVU216
 929 000c 94F81701 		ldrb	r0, [r4, #279]	@ zero_extendqisi2
 930 0010 70BD     		pop	{r4, r5, r6, pc}
 931              	.LVL93:
 932              	.L48:
 177:FML/Src/SX1278.c **** 		memset(module->rxBuffer, 0x00, SX1278_MAX_PACKET);
 933              		.loc 1 177 3 is_stmt 1 view .LVU217
 177:FML/Src/SX1278.c **** 		memset(module->rxBuffer, 0x00, SX1278_MAX_PACKET);
 934              		.loc 1 177 16 is_stmt 0 view .LVU218
 935 0012 04F11706 		add	r6, r4, #23
 177:FML/Src/SX1278.c **** 		memset(module->rxBuffer, 0x00, SX1278_MAX_PACKET);
 936              		.loc 1 177 3 view .LVU219
 937 0016 4FF48072 		mov	r2, #256
 938 001a 0021     		movs	r1, #0
 939 001c 3046     		mov	r0, r6
 940 001e FFF7FEFF 		bl	memset
 941              	.LVL94:
 179:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RxBaseAddr -> FiFoAddrPtr
 942              		.loc 1 179 3 is_stmt 1 view .LVU220
 179:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RxBaseAddr -> FiFoAddrPtr
 943              		.loc 1 179 10 is_stmt 0 view .LVU221
 944 0022 1021     		movs	r1, #16
 945 0024 2046     		mov	r0, r4
 946 0026 FFF7FEFF 		bl	SX1278_SPIRead
 947              	.LVL95:
 948 002a 0246     		mov	r2, r0
 949              	.LVL96:
 180:FML/Src/SX1278.c **** 
 950              		.loc 1 180 3 is_stmt 1 view .LVU222
 951 002c 0D21     		movs	r1, #13
 952 002e 2046     		mov	r0, r4
 953 0030 FFF7FEFF 		bl	SX1278_SPIWrite
 954              	.LVL97:
 182:FML/Src/SX1278.c **** 			packet_size = module->packetLength;
 955              		.loc 1 182 3 view .LVU223
 182:FML/Src/SX1278.c **** 			packet_size = module->packetLength;
 956              		.loc 1 182 13 is_stmt 0 view .LVU224
 957 0034 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 182:FML/Src/SX1278.c **** 			packet_size = module->packetLength;
 958              		.loc 1 182 6 view .LVU225
 959 0036 63B9     		cbnz	r3, .L45
 183:FML/Src/SX1278.c **** 		} else {
 960              		.loc 1 183 4 is_stmt 1 view .LVU226
 183:FML/Src/SX1278.c **** 		} else {
 961              		.loc 1 183 16 is_stmt 0 view .LVU227
 962 0038 657D     		ldrb	r5, [r4, #21]	@ zero_extendqisi2
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 23


 963              	.LVL98:
 964              	.L46:
 188:FML/Src/SX1278.c **** 		module->readBytes = packet_size;
 965              		.loc 1 188 3 is_stmt 1 view .LVU228
 966 003a 2B46     		mov	r3, r5
 967 003c 3246     		mov	r2, r6
 968 003e 0021     		movs	r1, #0
 969 0040 2046     		mov	r0, r4
 970 0042 FFF7FEFF 		bl	SX1278_SPIBurstRead
 971              	.LVL99:
 189:FML/Src/SX1278.c **** 		SX1278_clearLoRaIrq(module);
 972              		.loc 1 189 3 view .LVU229
 189:FML/Src/SX1278.c **** 		SX1278_clearLoRaIrq(module);
 973              		.loc 1 189 21 is_stmt 0 view .LVU230
 974 0046 84F81751 		strb	r5, [r4, #279]
 190:FML/Src/SX1278.c **** 	}
 975              		.loc 1 190 3 is_stmt 1 view .LVU231
 976 004a 2046     		mov	r0, r4
 977 004c FFF7FEFF 		bl	SX1278_clearLoRaIrq
 978              	.LVL100:
 979 0050 DCE7     		b	.L44
 980              	.LVL101:
 981              	.L45:
 185:FML/Src/SX1278.c **** 		}
 982              		.loc 1 185 4 view .LVU232
 185:FML/Src/SX1278.c **** 		}
 983              		.loc 1 185 18 is_stmt 0 view .LVU233
 984 0052 1321     		movs	r1, #19
 985 0054 2046     		mov	r0, r4
 986 0056 FFF7FEFF 		bl	SX1278_SPIRead
 987              	.LVL102:
 988 005a 0546     		mov	r5, r0
 989              	.LVL103:
 185:FML/Src/SX1278.c **** 		}
 990              		.loc 1 185 18 view .LVU234
 991 005c EDE7     		b	.L46
 992              		.cfi_endproc
 993              	.LFE10:
 995              		.section	.text.SX1278_LoRaEntryTx,"ax",%progbits
 996              		.align	1
 997              		.global	SX1278_LoRaEntryTx
 998              		.syntax unified
 999              		.thumb
 1000              		.thumb_func
 1002              	SX1278_LoRaEntryTx:
 1003              	.LVL104:
 1004              	.LFB11:
 194:FML/Src/SX1278.c **** 
 195:FML/Src/SX1278.c **** int SX1278_LoRaEntryTx(SX1278_t *module, uint8_t length, uint32_t timeout) {
 1005              		.loc 1 195 76 is_stmt 1 view -0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 0
 1008              		@ frame_needed = 0, uses_anonymous_args = 0
 1009              		.loc 1 195 76 is_stmt 0 view .LVU236
 1010 0000 70B5     		push	{r4, r5, r6, lr}
 1011              	.LCFI16:
 1012              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 24


 1013              		.cfi_offset 4, -16
 1014              		.cfi_offset 5, -12
 1015              		.cfi_offset 6, -8
 1016              		.cfi_offset 14, -4
 1017 0002 0546     		mov	r5, r0
 1018 0004 0E46     		mov	r6, r1
 1019 0006 1446     		mov	r4, r2
 196:FML/Src/SX1278.c **** 	uint8_t addr;
 1020              		.loc 1 196 2 is_stmt 1 view .LVU237
 197:FML/Src/SX1278.c **** 	uint8_t temp;
 1021              		.loc 1 197 2 view .LVU238
 198:FML/Src/SX1278.c **** 
 199:FML/Src/SX1278.c **** 	module->packetLength = length;
 1022              		.loc 1 199 2 view .LVU239
 1023              		.loc 1 199 23 is_stmt 0 view .LVU240
 1024 0008 4175     		strb	r1, [r0, #21]
 200:FML/Src/SX1278.c **** 
 201:FML/Src/SX1278.c **** 	SX1278_config(module); //setting base parameter
 1025              		.loc 1 201 2 is_stmt 1 view .LVU241
 1026 000a FFF7FEFF 		bl	SX1278_config
 1027              	.LVL105:
 202:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_PADAC, 0x87);	//Tx for 20dBm
 1028              		.loc 1 202 2 view .LVU242
 1029 000e 8722     		movs	r2, #135
 1030 0010 4D21     		movs	r1, #77
 1031 0012 2846     		mov	r0, r5
 1032 0014 FFF7FEFF 		bl	SX1278_SPIWrite
 1033              	.LVL106:
 203:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegHopPeriod, 0x00); //RegHopPeriod NO FHSS
 1034              		.loc 1 203 2 view .LVU243
 1035 0018 0022     		movs	r2, #0
 1036 001a 2421     		movs	r1, #36
 1037 001c 2846     		mov	r0, r5
 1038 001e FFF7FEFF 		bl	SX1278_SPIWrite
 1039              	.LVL107:
 204:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_DIOMAPPING1, 0x41); //DIO0=01, DIO1=00,DIO2=00, DIO3=01
 1040              		.loc 1 204 2 view .LVU244
 1041 0022 4122     		movs	r2, #65
 1042 0024 4021     		movs	r1, #64
 1043 0026 2846     		mov	r0, r5
 1044 0028 FFF7FEFF 		bl	SX1278_SPIWrite
 1045              	.LVL108:
 205:FML/Src/SX1278.c **** 	SX1278_clearLoRaIrq(module);
 1046              		.loc 1 205 2 view .LVU245
 1047 002c 2846     		mov	r0, r5
 1048 002e FFF7FEFF 		bl	SX1278_clearLoRaIrq
 1049              	.LVL109:
 206:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegIrqFlagsMask, 0xF7); //Open TxDone interrupt
 1050              		.loc 1 206 2 view .LVU246
 1051 0032 F722     		movs	r2, #247
 1052 0034 1121     		movs	r1, #17
 1053 0036 2846     		mov	r0, r5
 1054 0038 FFF7FEFF 		bl	SX1278_SPIWrite
 1055              	.LVL110:
 207:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPayloadLength, length); //RegPayloadLength 21byte
 1056              		.loc 1 207 2 view .LVU247
 1057 003c 3246     		mov	r2, r6
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 25


 1058 003e 2221     		movs	r1, #34
 1059 0040 2846     		mov	r0, r5
 1060 0042 FFF7FEFF 		bl	SX1278_SPIWrite
 1061              	.LVL111:
 208:FML/Src/SX1278.c **** 	addr = SX1278_SPIRead(module, LR_RegFifoTxBaseAddr); //RegFiFoTxBaseAddr
 1062              		.loc 1 208 2 view .LVU248
 1063              		.loc 1 208 9 is_stmt 0 view .LVU249
 1064 0046 0E21     		movs	r1, #14
 1065 0048 2846     		mov	r0, r5
 1066 004a FFF7FEFF 		bl	SX1278_SPIRead
 1067              	.LVL112:
 1068 004e 0246     		mov	r2, r0
 1069              	.LVL113:
 209:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RegFifoAddrPtr
 1070              		.loc 1 209 2 is_stmt 1 view .LVU250
 1071 0050 0D21     		movs	r1, #13
 1072 0052 2846     		mov	r0, r5
 1073 0054 FFF7FEFF 		bl	SX1278_SPIWrite
 1074              	.LVL114:
 1075              	.L52:
 210:FML/Src/SX1278.c **** 
 211:FML/Src/SX1278.c **** 	while (1) {
 1076              		.loc 1 211 2 view .LVU251
 212:FML/Src/SX1278.c **** 		temp = SX1278_SPIRead(module, LR_RegPayloadLength);
 1077              		.loc 1 212 3 view .LVU252
 1078              		.loc 1 212 10 is_stmt 0 view .LVU253
 1079 0058 2221     		movs	r1, #34
 1080 005a 2846     		mov	r0, r5
 1081 005c FFF7FEFF 		bl	SX1278_SPIRead
 1082              	.LVL115:
 213:FML/Src/SX1278.c **** 		if (temp == length) {
 1083              		.loc 1 213 3 is_stmt 1 view .LVU254
 1084              		.loc 1 213 6 is_stmt 0 view .LVU255
 1085 0060 8642     		cmp	r6, r0
 1086 0062 09D0     		beq	.L54
 214:FML/Src/SX1278.c **** 			module->status = TX;
 215:FML/Src/SX1278.c **** 			return 1;
 216:FML/Src/SX1278.c **** 		}
 217:FML/Src/SX1278.c **** 
 218:FML/Src/SX1278.c **** 		if (--timeout == 0) {
 1087              		.loc 1 218 3 is_stmt 1 view .LVU256
 1088              	.LVL116:
 1089              		.loc 1 218 6 is_stmt 0 view .LVU257
 1090 0064 013C     		subs	r4, r4, #1
 1091              	.LVL117:
 1092              		.loc 1 218 6 view .LVU258
 1093 0066 F7D1     		bne	.L52
 219:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 1094              		.loc 1 219 4 is_stmt 1 view .LVU259
 1095 0068 2868     		ldr	r0, [r5]
 1096              	.LVL118:
 1097              		.loc 1 219 4 is_stmt 0 view .LVU260
 1098 006a FFF7FEFF 		bl	SX1278_hw_Reset
 1099              	.LVL119:
 220:FML/Src/SX1278.c **** 			SX1278_config(module);
 1100              		.loc 1 220 4 is_stmt 1 view .LVU261
 1101 006e 2846     		mov	r0, r5
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 26


 1102 0070 FFF7FEFF 		bl	SX1278_config
 1103              	.LVL120:
 221:FML/Src/SX1278.c **** 			return 0;
 1104              		.loc 1 221 4 view .LVU262
 1105              		.loc 1 221 11 is_stmt 0 view .LVU263
 1106 0074 0020     		movs	r0, #0
 1107 0076 02E0     		b	.L49
 1108              	.LVL121:
 1109              	.L54:
 214:FML/Src/SX1278.c **** 			return 1;
 1110              		.loc 1 214 4 is_stmt 1 view .LVU264
 214:FML/Src/SX1278.c **** 			return 1;
 1111              		.loc 1 214 19 is_stmt 0 view .LVU265
 1112 0078 0223     		movs	r3, #2
 1113 007a AB75     		strb	r3, [r5, #22]
 215:FML/Src/SX1278.c **** 		}
 1114              		.loc 1 215 4 is_stmt 1 view .LVU266
 215:FML/Src/SX1278.c **** 		}
 1115              		.loc 1 215 11 is_stmt 0 view .LVU267
 1116 007c 0120     		movs	r0, #1
 1117              	.LVL122:
 1118              	.L49:
 222:FML/Src/SX1278.c **** 		}
 223:FML/Src/SX1278.c **** 	}
 224:FML/Src/SX1278.c **** }
 1119              		.loc 1 224 1 view .LVU268
 1120 007e 70BD     		pop	{r4, r5, r6, pc}
 1121              		.loc 1 224 1 view .LVU269
 1122              		.cfi_endproc
 1123              	.LFE11:
 1125              		.section	.text.SX1278_LoRaTxPacket,"ax",%progbits
 1126              		.align	1
 1127              		.global	SX1278_LoRaTxPacket
 1128              		.syntax unified
 1129              		.thumb
 1130              		.thumb_func
 1132              	SX1278_LoRaTxPacket:
 1133              	.LVL123:
 1134              	.LFB12:
 225:FML/Src/SX1278.c **** 
 226:FML/Src/SX1278.c **** int SX1278_LoRaTxPacket(SX1278_t *module, uint8_t *txBuffer, uint8_t length,
 227:FML/Src/SX1278.c **** 		uint32_t timeout) {
 1135              		.loc 1 227 21 is_stmt 1 view -0
 1136              		.cfi_startproc
 1137              		@ args = 0, pretend = 0, frame = 0
 1138              		@ frame_needed = 0, uses_anonymous_args = 0
 1139              		.loc 1 227 21 is_stmt 0 view .LVU271
 1140 0000 70B5     		push	{r4, r5, r6, lr}
 1141              	.LCFI17:
 1142              		.cfi_def_cfa_offset 16
 1143              		.cfi_offset 4, -16
 1144              		.cfi_offset 5, -12
 1145              		.cfi_offset 6, -8
 1146              		.cfi_offset 14, -4
 1147 0002 0546     		mov	r5, r0
 1148 0004 1C46     		mov	r4, r3
 228:FML/Src/SX1278.c **** 	SX1278_SPIBurstWrite(module, 0x00, txBuffer, length);
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 27


 1149              		.loc 1 228 2 is_stmt 1 view .LVU272
 1150 0006 1346     		mov	r3, r2
 1151              	.LVL124:
 1152              		.loc 1 228 2 is_stmt 0 view .LVU273
 1153 0008 0A46     		mov	r2, r1
 1154              	.LVL125:
 1155              		.loc 1 228 2 view .LVU274
 1156 000a 0021     		movs	r1, #0
 1157              	.LVL126:
 1158              		.loc 1 228 2 view .LVU275
 1159 000c FFF7FEFF 		bl	SX1278_SPIBurstWrite
 1160              	.LVL127:
 229:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x8b);	//Tx Mode
 1161              		.loc 1 229 2 is_stmt 1 view .LVU276
 1162 0010 8B22     		movs	r2, #139
 1163 0012 0121     		movs	r1, #1
 1164 0014 2846     		mov	r0, r5
 1165 0016 FFF7FEFF 		bl	SX1278_SPIWrite
 1166              	.LVL128:
 1167 001a 0FE0     		b	.L59
 1168              	.L61:
 230:FML/Src/SX1278.c **** 	while (1) {
 231:FML/Src/SX1278.c **** 		if (SX1278_hw_GetDIO0(module->hw)) { //if(Get_NIRQ()) //Packet send over
 232:FML/Src/SX1278.c **** 			SX1278_SPIRead(module, LR_RegIrqFlags);
 1169              		.loc 1 232 4 view .LVU277
 1170 001c 1221     		movs	r1, #18
 1171 001e 2846     		mov	r0, r5
 1172 0020 FFF7FEFF 		bl	SX1278_SPIRead
 1173              	.LVL129:
 233:FML/Src/SX1278.c **** 			SX1278_clearLoRaIrq(module); //Clear irq
 1174              		.loc 1 233 4 view .LVU278
 1175 0024 2846     		mov	r0, r5
 1176 0026 FFF7FEFF 		bl	SX1278_clearLoRaIrq
 1177              	.LVL130:
 234:FML/Src/SX1278.c **** 			SX1278_standby(module); //Entry Standby mode
 1178              		.loc 1 234 4 view .LVU279
 1179 002a 2846     		mov	r0, r5
 1180 002c FFF7FEFF 		bl	SX1278_standby
 1181              	.LVL131:
 235:FML/Src/SX1278.c **** 			return 1;
 1182              		.loc 1 235 4 view .LVU280
 1183              		.loc 1 235 11 is_stmt 0 view .LVU281
 1184 0030 0126     		movs	r6, #1
 1185              	.L55:
 236:FML/Src/SX1278.c **** 		}
 237:FML/Src/SX1278.c **** 
 238:FML/Src/SX1278.c **** 		if (--timeout == 0) {
 239:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 240:FML/Src/SX1278.c **** 			SX1278_config(module);
 241:FML/Src/SX1278.c **** 			return 0;
 242:FML/Src/SX1278.c **** 		}
 243:FML/Src/SX1278.c **** 		SX1278_hw_DelayMs(1);
 244:FML/Src/SX1278.c **** 	}
 245:FML/Src/SX1278.c **** }
 1186              		.loc 1 245 1 view .LVU282
 1187 0032 3046     		mov	r0, r6
 1188 0034 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 28


 1189              	.LVL132:
 1190              	.L58:
 243:FML/Src/SX1278.c **** 	}
 1191              		.loc 1 243 3 is_stmt 1 view .LVU283
 1192 0036 0120     		movs	r0, #1
 1193 0038 FFF7FEFF 		bl	SX1278_hw_DelayMs
 1194              	.LVL133:
 230:FML/Src/SX1278.c **** 		if (SX1278_hw_GetDIO0(module->hw)) { //if(Get_NIRQ()) //Packet send over
 1195              		.loc 1 230 8 view .LVU284
 1196              	.L59:
 230:FML/Src/SX1278.c **** 		if (SX1278_hw_GetDIO0(module->hw)) { //if(Get_NIRQ()) //Packet send over
 1197              		.loc 1 230 2 view .LVU285
 231:FML/Src/SX1278.c **** 			SX1278_SPIRead(module, LR_RegIrqFlags);
 1198              		.loc 1 231 3 view .LVU286
 231:FML/Src/SX1278.c **** 			SX1278_SPIRead(module, LR_RegIrqFlags);
 1199              		.loc 1 231 7 is_stmt 0 view .LVU287
 1200 003c 2868     		ldr	r0, [r5]
 1201 003e FFF7FEFF 		bl	SX1278_hw_GetDIO0
 1202              	.LVL134:
 231:FML/Src/SX1278.c **** 			SX1278_SPIRead(module, LR_RegIrqFlags);
 1203              		.loc 1 231 6 view .LVU288
 1204 0042 0646     		mov	r6, r0
 1205 0044 0028     		cmp	r0, #0
 1206 0046 E9D1     		bne	.L61
 238:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 1207              		.loc 1 238 3 is_stmt 1 view .LVU289
 1208              	.LVL135:
 238:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 1209              		.loc 1 238 6 is_stmt 0 view .LVU290
 1210 0048 013C     		subs	r4, r4, #1
 1211              	.LVL136:
 238:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 1212              		.loc 1 238 6 view .LVU291
 1213 004a F4D1     		bne	.L58
 239:FML/Src/SX1278.c **** 			SX1278_config(module);
 1214              		.loc 1 239 4 is_stmt 1 view .LVU292
 1215 004c 2868     		ldr	r0, [r5]
 1216 004e FFF7FEFF 		bl	SX1278_hw_Reset
 1217              	.LVL137:
 240:FML/Src/SX1278.c **** 			return 0;
 1218              		.loc 1 240 4 view .LVU293
 1219 0052 2846     		mov	r0, r5
 1220 0054 FFF7FEFF 		bl	SX1278_config
 1221              	.LVL138:
 241:FML/Src/SX1278.c **** 		}
 1222              		.loc 1 241 4 view .LVU294
 241:FML/Src/SX1278.c **** 		}
 1223              		.loc 1 241 11 is_stmt 0 view .LVU295
 1224 0058 EBE7     		b	.L55
 1225              		.cfi_endproc
 1226              	.LFE12:
 1228              		.section	.text.SX1278_init,"ax",%progbits
 1229              		.align	1
 1230              		.global	SX1278_init
 1231              		.syntax unified
 1232              		.thumb
 1233              		.thumb_func
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 29


 1235              	SX1278_init:
 1236              	.LVL139:
 1237              	.LFB13:
 246:FML/Src/SX1278.c **** 
 247:FML/Src/SX1278.c **** void SX1278_init(SX1278_t *module, uint64_t frequency, uint8_t power,
 248:FML/Src/SX1278.c **** 		uint8_t LoRa_SF, uint8_t LoRa_BW, uint8_t LoRa_CR,
 249:FML/Src/SX1278.c **** 		uint8_t LoRa_CRC_sum, uint8_t packetLength) {
 1238              		.loc 1 249 47 is_stmt 1 view -0
 1239              		.cfi_startproc
 1240              		@ args = 24, pretend = 0, frame = 0
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 1242              		.loc 1 249 47 is_stmt 0 view .LVU297
 1243 0000 70B5     		push	{r4, r5, r6, lr}
 1244              	.LCFI18:
 1245              		.cfi_def_cfa_offset 16
 1246              		.cfi_offset 4, -16
 1247              		.cfi_offset 5, -12
 1248              		.cfi_offset 6, -8
 1249              		.cfi_offset 14, -4
 1250 0002 0446     		mov	r4, r0
 1251 0004 1646     		mov	r6, r2
 1252 0006 1D46     		mov	r5, r3
 250:FML/Src/SX1278.c **** 	SX1278_hw_init(module->hw);
 1253              		.loc 1 250 2 is_stmt 1 view .LVU298
 1254 0008 0068     		ldr	r0, [r0]
 1255              	.LVL140:
 1256              		.loc 1 250 2 is_stmt 0 view .LVU299
 1257 000a FFF7FEFF 		bl	SX1278_hw_init
 1258              	.LVL141:
 251:FML/Src/SX1278.c **** 	module->frequency = frequency;
 1259              		.loc 1 251 2 is_stmt 1 view .LVU300
 1260              		.loc 1 251 20 is_stmt 0 view .LVU301
 1261 000e A660     		str	r6, [r4, #8]
 1262 0010 E560     		str	r5, [r4, #12]
 252:FML/Src/SX1278.c **** 	module->power = power;
 1263              		.loc 1 252 2 is_stmt 1 view .LVU302
 1264              		.loc 1 252 16 is_stmt 0 view .LVU303
 1265 0012 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 1266 0016 2374     		strb	r3, [r4, #16]
 253:FML/Src/SX1278.c **** 	module->LoRa_SF = LoRa_SF;
 1267              		.loc 1 253 2 is_stmt 1 view .LVU304
 1268              		.loc 1 253 18 is_stmt 0 view .LVU305
 1269 0018 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 1270 001c 6374     		strb	r3, [r4, #17]
 254:FML/Src/SX1278.c **** 	module->LoRa_BW = LoRa_BW;
 1271              		.loc 1 254 2 is_stmt 1 view .LVU306
 1272              		.loc 1 254 18 is_stmt 0 view .LVU307
 1273 001e 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 1274 0022 A374     		strb	r3, [r4, #18]
 255:FML/Src/SX1278.c **** 	module->LoRa_CR = LoRa_CR;
 1275              		.loc 1 255 2 is_stmt 1 view .LVU308
 1276              		.loc 1 255 18 is_stmt 0 view .LVU309
 1277 0024 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 1278 0028 E374     		strb	r3, [r4, #19]
 256:FML/Src/SX1278.c **** 	module->LoRa_CRC_sum = LoRa_CRC_sum;
 1279              		.loc 1 256 2 is_stmt 1 view .LVU310
 1280              		.loc 1 256 23 is_stmt 0 view .LVU311
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 30


 1281 002a 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 1282 002e 2375     		strb	r3, [r4, #20]
 257:FML/Src/SX1278.c **** 	module->packetLength = packetLength;
 1283              		.loc 1 257 2 is_stmt 1 view .LVU312
 1284              		.loc 1 257 23 is_stmt 0 view .LVU313
 1285 0030 9DF82430 		ldrb	r3, [sp, #36]	@ zero_extendqisi2
 1286 0034 6375     		strb	r3, [r4, #21]
 258:FML/Src/SX1278.c **** 	SX1278_config(module);
 1287              		.loc 1 258 2 is_stmt 1 view .LVU314
 1288 0036 2046     		mov	r0, r4
 1289 0038 FFF7FEFF 		bl	SX1278_config
 1290              	.LVL142:
 259:FML/Src/SX1278.c **** }
 1291              		.loc 1 259 1 is_stmt 0 view .LVU315
 1292 003c 70BD     		pop	{r4, r5, r6, pc}
 1293              		.loc 1 259 1 view .LVU316
 1294              		.cfi_endproc
 1295              	.LFE13:
 1297              		.section	.text.SX1278_transmit,"ax",%progbits
 1298              		.align	1
 1299              		.global	SX1278_transmit
 1300              		.syntax unified
 1301              		.thumb
 1302              		.thumb_func
 1304              	SX1278_transmit:
 1305              	.LVL143:
 1306              	.LFB14:
 260:FML/Src/SX1278.c **** 
 261:FML/Src/SX1278.c **** int SX1278_transmit(SX1278_t *module, uint8_t *txBuf, uint8_t length,
 262:FML/Src/SX1278.c **** 		uint32_t timeout) {
 1307              		.loc 1 262 21 is_stmt 1 view -0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              		.loc 1 262 21 is_stmt 0 view .LVU318
 1312 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1313              	.LCFI19:
 1314              		.cfi_def_cfa_offset 24
 1315              		.cfi_offset 3, -24
 1316              		.cfi_offset 4, -20
 1317              		.cfi_offset 5, -16
 1318              		.cfi_offset 6, -12
 1319              		.cfi_offset 7, -8
 1320              		.cfi_offset 14, -4
 1321 0002 0646     		mov	r6, r0
 1322 0004 0F46     		mov	r7, r1
 1323 0006 1446     		mov	r4, r2
 1324 0008 1D46     		mov	r5, r3
 263:FML/Src/SX1278.c **** 	if (SX1278_LoRaEntryTx(module, length, timeout)) {
 1325              		.loc 1 263 2 is_stmt 1 view .LVU319
 1326              		.loc 1 263 6 is_stmt 0 view .LVU320
 1327 000a 1A46     		mov	r2, r3
 1328              	.LVL144:
 1329              		.loc 1 263 6 view .LVU321
 1330 000c 2146     		mov	r1, r4
 1331              	.LVL145:
 1332              		.loc 1 263 6 view .LVU322
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 31


 1333 000e FFF7FEFF 		bl	SX1278_LoRaEntryTx
 1334              	.LVL146:
 1335              		.loc 1 263 5 view .LVU323
 1336 0012 00B9     		cbnz	r0, .L67
 1337              	.L64:
 264:FML/Src/SX1278.c **** 		return SX1278_LoRaTxPacket(module, txBuf, length, timeout);
 265:FML/Src/SX1278.c **** 	}
 266:FML/Src/SX1278.c **** 	return 0;
 267:FML/Src/SX1278.c **** }
 1338              		.loc 1 267 1 view .LVU324
 1339 0014 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1340              	.LVL147:
 1341              	.L67:
 264:FML/Src/SX1278.c **** 		return SX1278_LoRaTxPacket(module, txBuf, length, timeout);
 1342              		.loc 1 264 3 is_stmt 1 view .LVU325
 264:FML/Src/SX1278.c **** 		return SX1278_LoRaTxPacket(module, txBuf, length, timeout);
 1343              		.loc 1 264 10 is_stmt 0 view .LVU326
 1344 0016 2B46     		mov	r3, r5
 1345 0018 2246     		mov	r2, r4
 1346 001a 3946     		mov	r1, r7
 1347 001c 3046     		mov	r0, r6
 1348 001e FFF7FEFF 		bl	SX1278_LoRaTxPacket
 1349              	.LVL148:
 1350 0022 F7E7     		b	.L64
 1351              		.cfi_endproc
 1352              	.LFE14:
 1354              		.section	.text.SX1278_receive,"ax",%progbits
 1355              		.align	1
 1356              		.global	SX1278_receive
 1357              		.syntax unified
 1358              		.thumb
 1359              		.thumb_func
 1361              	SX1278_receive:
 1362              	.LVL149:
 1363              	.LFB15:
 268:FML/Src/SX1278.c **** 
 269:FML/Src/SX1278.c **** int SX1278_receive(SX1278_t *module, uint8_t length, uint32_t timeout) {
 1364              		.loc 1 269 72 is_stmt 1 view -0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
 1367              		@ frame_needed = 0, uses_anonymous_args = 0
 1368              		.loc 1 269 72 is_stmt 0 view .LVU328
 1369 0000 08B5     		push	{r3, lr}
 1370              	.LCFI20:
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 3, -8
 1373              		.cfi_offset 14, -4
 270:FML/Src/SX1278.c **** 	return SX1278_LoRaEntryRx(module, length, timeout);
 1374              		.loc 1 270 2 is_stmt 1 view .LVU329
 1375              		.loc 1 270 9 is_stmt 0 view .LVU330
 1376 0002 FFF7FEFF 		bl	SX1278_LoRaEntryRx
 1377              	.LVL150:
 271:FML/Src/SX1278.c **** }
 1378              		.loc 1 271 1 view .LVU331
 1379 0006 08BD     		pop	{r3, pc}
 1380              		.cfi_endproc
 1381              	.LFE15:
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 32


 1383              		.section	.text.SX1278_available,"ax",%progbits
 1384              		.align	1
 1385              		.global	SX1278_available
 1386              		.syntax unified
 1387              		.thumb
 1388              		.thumb_func
 1390              	SX1278_available:
 1391              	.LVL151:
 1392              	.LFB16:
 272:FML/Src/SX1278.c **** 
 273:FML/Src/SX1278.c **** uint8_t SX1278_available(SX1278_t *module) {
 1393              		.loc 1 273 44 is_stmt 1 view -0
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 0
 1396              		@ frame_needed = 0, uses_anonymous_args = 0
 1397              		.loc 1 273 44 is_stmt 0 view .LVU333
 1398 0000 08B5     		push	{r3, lr}
 1399              	.LCFI21:
 1400              		.cfi_def_cfa_offset 8
 1401              		.cfi_offset 3, -8
 1402              		.cfi_offset 14, -4
 274:FML/Src/SX1278.c **** 	return SX1278_LoRaRxPacket(module);
 1403              		.loc 1 274 2 is_stmt 1 view .LVU334
 1404              		.loc 1 274 9 is_stmt 0 view .LVU335
 1405 0002 FFF7FEFF 		bl	SX1278_LoRaRxPacket
 1406              	.LVL152:
 275:FML/Src/SX1278.c **** }
 1407              		.loc 1 275 1 view .LVU336
 1408 0006 08BD     		pop	{r3, pc}
 1409              		.cfi_endproc
 1410              	.LFE16:
 1412              		.section	.text.SX1278_read,"ax",%progbits
 1413              		.align	1
 1414              		.global	SX1278_read
 1415              		.syntax unified
 1416              		.thumb
 1417              		.thumb_func
 1419              	SX1278_read:
 1420              	.LVL153:
 1421              	.LFB17:
 276:FML/Src/SX1278.c **** 
 277:FML/Src/SX1278.c **** uint8_t SX1278_read(SX1278_t *module, uint8_t *rxBuf, uint8_t length) {
 1422              		.loc 1 277 71 is_stmt 1 view -0
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 0
 1425              		@ frame_needed = 0, uses_anonymous_args = 0
 1426              		.loc 1 277 71 is_stmt 0 view .LVU338
 1427 0000 70B5     		push	{r4, r5, r6, lr}
 1428              	.LCFI22:
 1429              		.cfi_def_cfa_offset 16
 1430              		.cfi_offset 4, -16
 1431              		.cfi_offset 5, -12
 1432              		.cfi_offset 6, -8
 1433              		.cfi_offset 14, -4
 1434 0002 0446     		mov	r4, r0
 1435 0004 0E46     		mov	r6, r1
 278:FML/Src/SX1278.c **** 	if (length != module->readBytes)
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 33


 1436              		.loc 1 278 2 is_stmt 1 view .LVU339
 1437              		.loc 1 278 22 is_stmt 0 view .LVU340
 1438 0006 90F81751 		ldrb	r5, [r0, #279]	@ zero_extendqisi2
 1439              		.loc 1 278 5 view .LVU341
 1440 000a 9542     		cmp	r5, r2
 1441 000c 0BD0     		beq	.L75
 1442              	.L73:
 1443              	.LVL154:
 279:FML/Src/SX1278.c **** 		length = module->readBytes;
 280:FML/Src/SX1278.c **** 	memcpy(rxBuf, module->rxBuffer, length);
 1444              		.loc 1 280 2 is_stmt 1 view .LVU342
 1445 000e 2A46     		mov	r2, r5
 1446 0010 04F11701 		add	r1, r4, #23
 1447              	.LVL155:
 1448              		.loc 1 280 2 is_stmt 0 view .LVU343
 1449 0014 3046     		mov	r0, r6
 1450              	.LVL156:
 1451              		.loc 1 280 2 view .LVU344
 1452 0016 FFF7FEFF 		bl	memcpy
 1453              	.LVL157:
 281:FML/Src/SX1278.c **** 	rxBuf[length] = '\0';
 1454              		.loc 1 281 2 is_stmt 1 view .LVU345
 1455              		.loc 1 281 16 is_stmt 0 view .LVU346
 1456 001a 0023     		movs	r3, #0
 1457 001c 7355     		strb	r3, [r6, r5]
 282:FML/Src/SX1278.c **** 	module->readBytes = 0;
 1458              		.loc 1 282 2 is_stmt 1 view .LVU347
 1459              		.loc 1 282 20 is_stmt 0 view .LVU348
 1460 001e 84F81731 		strb	r3, [r4, #279]
 283:FML/Src/SX1278.c **** 	return length;
 1461              		.loc 1 283 2 is_stmt 1 view .LVU349
 284:FML/Src/SX1278.c **** }
 1462              		.loc 1 284 1 is_stmt 0 view .LVU350
 1463 0022 2846     		mov	r0, r5
 1464 0024 70BD     		pop	{r4, r5, r6, pc}
 1465              	.LVL158:
 1466              	.L75:
 278:FML/Src/SX1278.c **** 		length = module->readBytes;
 1467              		.loc 1 278 5 view .LVU351
 1468 0026 1546     		mov	r5, r2
 1469 0028 F1E7     		b	.L73
 1470              		.cfi_endproc
 1471              	.LFE17:
 1473              		.section	.text.SX1278_RSSI_LoRa,"ax",%progbits
 1474              		.align	1
 1475              		.global	SX1278_RSSI_LoRa
 1476              		.syntax unified
 1477              		.thumb
 1478              		.thumb_func
 1480              	SX1278_RSSI_LoRa:
 1481              	.LVL159:
 1482              	.LFB18:
 285:FML/Src/SX1278.c **** 
 286:FML/Src/SX1278.c **** uint8_t SX1278_RSSI_LoRa(SX1278_t *module) {
 1483              		.loc 1 286 44 is_stmt 1 view -0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 34


 1486              		@ frame_needed = 0, uses_anonymous_args = 0
 1487              		.loc 1 286 44 is_stmt 0 view .LVU353
 1488 0000 08B5     		push	{r3, lr}
 1489              	.LCFI23:
 1490              		.cfi_def_cfa_offset 8
 1491              		.cfi_offset 3, -8
 1492              		.cfi_offset 14, -4
 287:FML/Src/SX1278.c **** 	uint32_t temp = 10;
 1493              		.loc 1 287 2 is_stmt 1 view .LVU354
 1494              	.LVL160:
 288:FML/Src/SX1278.c **** 	temp = SX1278_SPIRead(module, LR_RegRssiValue); //Read RegRssiValue, Rssi value
 1495              		.loc 1 288 2 view .LVU355
 1496              		.loc 1 288 9 is_stmt 0 view .LVU356
 1497 0002 1B21     		movs	r1, #27
 1498 0004 FFF7FEFF 		bl	SX1278_SPIRead
 1499              	.LVL161:
 289:FML/Src/SX1278.c **** 	temp = temp + 127 - 137; //127:Max RSSI, 137:RSSI offset
 1500              		.loc 1 289 2 is_stmt 1 view .LVU357
 290:FML/Src/SX1278.c **** 	return (uint8_t) temp;
 1501              		.loc 1 290 2 view .LVU358
 1502              		.loc 1 290 9 is_stmt 0 view .LVU359
 1503 0008 0A38     		subs	r0, r0, #10
 1504              	.LVL162:
 291:FML/Src/SX1278.c **** }
 1505              		.loc 1 291 1 view .LVU360
 1506 000a C0B2     		uxtb	r0, r0
 1507 000c 08BD     		pop	{r3, pc}
 1508              		.cfi_endproc
 1509              	.LFE18:
 1511              		.section	.text.SX1278_RSSI,"ax",%progbits
 1512              		.align	1
 1513              		.global	SX1278_RSSI
 1514              		.syntax unified
 1515              		.thumb
 1516              		.thumb_func
 1518              	SX1278_RSSI:
 1519              	.LVL163:
 1520              	.LFB19:
 292:FML/Src/SX1278.c **** 
 293:FML/Src/SX1278.c **** uint8_t SX1278_RSSI(SX1278_t *module) {
 1521              		.loc 1 293 39 is_stmt 1 view -0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525              		.loc 1 293 39 is_stmt 0 view .LVU362
 1526 0000 08B5     		push	{r3, lr}
 1527              	.LCFI24:
 1528              		.cfi_def_cfa_offset 8
 1529              		.cfi_offset 3, -8
 1530              		.cfi_offset 14, -4
 294:FML/Src/SX1278.c **** 	uint8_t temp = 0xff;
 1531              		.loc 1 294 2 is_stmt 1 view .LVU363
 1532              	.LVL164:
 295:FML/Src/SX1278.c **** 	temp = SX1278_SPIRead(module, RegRssiValue);
 1533              		.loc 1 295 2 view .LVU364
 1534              		.loc 1 295 9 is_stmt 0 view .LVU365
 1535 0002 1121     		movs	r1, #17
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 35


 1536 0004 FFF7FEFF 		bl	SX1278_SPIRead
 1537              	.LVL165:
 296:FML/Src/SX1278.c **** 	temp = 127 - (temp >> 1);	//127:Max RSSI
 1538              		.loc 1 296 2 is_stmt 1 view .LVU366
 1539              		.loc 1 296 13 is_stmt 0 view .LVU367
 1540 0008 C0F34700 		ubfx	r0, r0, #1, #8
 1541              	.LVL166:
 1542              		.loc 1 296 7 view .LVU368
 1543 000c C0F17F00 		rsb	r0, r0, #127
 1544              	.LVL167:
 297:FML/Src/SX1278.c **** 	return temp;
 1545              		.loc 1 297 2 is_stmt 1 view .LVU369
 298:FML/Src/SX1278.c **** }
 1546              		.loc 1 298 1 is_stmt 0 view .LVU370
 1547 0010 C0B2     		uxtb	r0, r0
 1548              		.loc 1 298 1 view .LVU371
 1549 0012 08BD     		pop	{r3, pc}
 1550              		.cfi_endproc
 1551              	.LFE19:
 1553              		.section	.rodata.SX1278_CRC_Sum,"a"
 1554              		.align	2
 1555              		.set	.LANCHOR4,. + 0
 1558              	SX1278_CRC_Sum:
 1559 0000 0100     		.ascii	"\001\000"
 1560              		.section	.rodata.SX1278_CodingRate,"a"
 1561              		.align	2
 1562              		.set	.LANCHOR3,. + 0
 1565              	SX1278_CodingRate:
 1566 0000 01020304 		.ascii	"\001\002\003\004"
 1567              		.section	.rodata.SX1278_LoRaBandwidth,"a"
 1568              		.align	2
 1569              		.set	.LANCHOR2,. + 0
 1572              	SX1278_LoRaBandwidth:
 1573 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011"
 1573      04050607 
 1573      0809
 1574              		.section	.rodata.SX1278_Power,"a"
 1575              		.align	2
 1576              		.set	.LANCHOR0,. + 0
 1579              	SX1278_Power:
 1580 0000 FFFCF9F6 		.ascii	"\377\374\371\366"
 1581              		.section	.rodata.SX1278_SpreadFactor,"a"
 1582              		.align	2
 1583              		.set	.LANCHOR1,. + 0
 1586              	SX1278_SpreadFactor:
 1587 0000 06070809 		.ascii	"\006\007\010\011\012\013\014"
 1587      0A0B0C
 1588              		.text
 1589              	.Letext0:
 1590              		.file 2 "e:\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\
 1591              		.file 3 "e:\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\
 1592              		.file 4 "HAL/Inc/SX1278_hw.h"
 1593              		.file 5 "FML/Inc/SX1278.h"
 1594              		.file 6 "<built-in>"
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 36


DEFINED SYMBOLS
                            *ABS*:00000000 SX1278.c
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:20     .text.SX1278_SPIRead:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:26     .text.SX1278_SPIRead:00000000 SX1278_SPIRead
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:71     .text.SX1278_SPIWrite:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:77     .text.SX1278_SPIWrite:00000000 SX1278_SPIWrite
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:126    .text.SX1278_SPIBurstRead:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:132    .text.SX1278_SPIBurstRead:00000000 SX1278_SPIBurstRead
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:221    .text.SX1278_SPIBurstWrite:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:227    .text.SX1278_SPIBurstWrite:00000000 SX1278_SPIBurstWrite
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:314    .text.SX1278_standby:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:320    .text.SX1278_standby:00000000 SX1278_standby
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:350    .text.SX1278_sleep:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:356    .text.SX1278_sleep:00000000 SX1278_sleep
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:386    .text.SX1278_entryLoRa:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:392    .text.SX1278_entryLoRa:00000000 SX1278_entryLoRa
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:417    .text.SX1278_config:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:423    .text.SX1278_config:00000000 SX1278_config
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:712    .text.SX1278_config:00000174 $d
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:722    .text.SX1278_clearLoRaIrq:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:728    .text.SX1278_clearLoRaIrq:00000000 SX1278_clearLoRaIrq
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:752    .text.SX1278_LoRaEntryRx:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:758    .text.SX1278_LoRaEntryRx:00000000 SX1278_LoRaEntryRx
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:893    .text.SX1278_LoRaRxPacket:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:899    .text.SX1278_LoRaRxPacket:00000000 SX1278_LoRaRxPacket
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:996    .text.SX1278_LoRaEntryTx:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1002   .text.SX1278_LoRaEntryTx:00000000 SX1278_LoRaEntryTx
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1126   .text.SX1278_LoRaTxPacket:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1132   .text.SX1278_LoRaTxPacket:00000000 SX1278_LoRaTxPacket
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1229   .text.SX1278_init:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1235   .text.SX1278_init:00000000 SX1278_init
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1298   .text.SX1278_transmit:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1304   .text.SX1278_transmit:00000000 SX1278_transmit
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1355   .text.SX1278_receive:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1361   .text.SX1278_receive:00000000 SX1278_receive
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1384   .text.SX1278_available:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1390   .text.SX1278_available:00000000 SX1278_available
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1413   .text.SX1278_read:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1419   .text.SX1278_read:00000000 SX1278_read
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1474   .text.SX1278_RSSI_LoRa:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1480   .text.SX1278_RSSI_LoRa:00000000 SX1278_RSSI_LoRa
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1512   .text.SX1278_RSSI:00000000 $t
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1518   .text.SX1278_RSSI:00000000 SX1278_RSSI
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1554   .rodata.SX1278_CRC_Sum:00000000 $d
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1558   .rodata.SX1278_CRC_Sum:00000000 SX1278_CRC_Sum
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1561   .rodata.SX1278_CodingRate:00000000 $d
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1565   .rodata.SX1278_CodingRate:00000000 SX1278_CodingRate
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1568   .rodata.SX1278_LoRaBandwidth:00000000 $d
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1572   .rodata.SX1278_LoRaBandwidth:00000000 SX1278_LoRaBandwidth
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1575   .rodata.SX1278_Power:00000000 $d
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1579   .rodata.SX1278_Power:00000000 SX1278_Power
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1582   .rodata.SX1278_SpreadFactor:00000000 $d
C:\Users\CL\AppData\Local\Temp\cc8I95uH.s:1586   .rodata.SX1278_SpreadFactor:00000000 SX1278_SpreadFactor

UNDEFINED SYMBOLS
SX1278_hw_SPICommand
SX1278_hw_SPIReadByte
ARM GAS  C:\Users\CL\AppData\Local\Temp\cc8I95uH.s 			page 37


SX1278_hw_SetNSS
__aeabi_uldivmod
SX1278_hw_DelayMs
SX1278_hw_Reset
SX1278_hw_GetDIO0
memset
SX1278_hw_init
memcpy
