ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"SX1278.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "FML/Src/SX1278.c"
  20              		.section	.text.SX1278_SPIRead,"ax",%progbits
  21              		.align	1
  22              		.global	SX1278_SPIRead
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	SX1278_SPIRead:
  28              	.LVL0:
  29              	.LFB288:
   1:FML/Src/SX1278.c **** /**
   2:FML/Src/SX1278.c ****  * Author Wojciech Domski <Wojciech.Domski@gmail.com>
   3:FML/Src/SX1278.c ****  * www: www.Domski.pl
   4:FML/Src/SX1278.c ****  *
   5:FML/Src/SX1278.c ****  * work based on DORJI.COM sample code and
   6:FML/Src/SX1278.c ****  * https://github.com/realspinner/SX1278_LoRa
   7:FML/Src/SX1278.c ****  */
   8:FML/Src/SX1278.c **** 
   9:FML/Src/SX1278.c **** #include "SX1278.h"
  10:FML/Src/SX1278.c **** #include <string.h>
  11:FML/Src/SX1278.c **** #include "spi.h"
  12:FML/Src/SX1278.c **** #include "shell_port.h"
  13:FML/Src/SX1278.c **** 
  14:FML/Src/SX1278.c **** 
  15:FML/Src/SX1278.c **** SX1278_t Lora_dev[]={
  16:FML/Src/SX1278.c **** 	{
  17:FML/Src/SX1278.c **** 	 .hw = &lora_dev_hw[0],
  18:FML/Src/SX1278.c **** 	 .frequency = 437000000,
  19:FML/Src/SX1278.c **** 	 .power = 20,
  20:FML/Src/SX1278.c **** 	 .LoRa_SF = 5,
  21:FML/Src/SX1278.c **** 	 .LoRa_BW = 2,
  22:FML/Src/SX1278.c **** 	 .LoRa_CR = 1,
  23:FML/Src/SX1278.c **** 	 .LoRa_CRC_sum = 0,
  24:FML/Src/SX1278.c **** 	 .packetLength = 0, 
  25:FML/Src/SX1278.c **** 	 .readBytes = 0,
  26:FML/Src/SX1278.c **** 	}
  27:FML/Src/SX1278.c **** };
  28:FML/Src/SX1278.c **** 
  29:FML/Src/SX1278.c **** uint8_t SX1278_SPIRead(SX1278_t *module, uint8_t addr) {
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 2


  30              		.loc 1 29 56 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 29 56 is_stmt 0 view .LVU1
  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 3, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  42 0002 0446     		mov	r4, r0
  30:FML/Src/SX1278.c **** 	uint8_t tmp;
  43              		.loc 1 30 2 is_stmt 1 view .LVU2
  31:FML/Src/SX1278.c **** 	SX1278_hw_SPICommand(module->hw, addr);
  44              		.loc 1 31 2 view .LVU3
  45 0004 0068     		ldr	r0, [r0]
  46              	.LVL1:
  47              		.loc 1 31 2 is_stmt 0 view .LVU4
  48 0006 FFF7FEFF 		bl	SX1278_hw_SPICommand
  49              	.LVL2:
  32:FML/Src/SX1278.c **** 	tmp = SX1278_hw_SPIReadByte(module->hw);
  50              		.loc 1 32 2 is_stmt 1 view .LVU5
  51              		.loc 1 32 8 is_stmt 0 view .LVU6
  52 000a 2068     		ldr	r0, [r4]
  53 000c FFF7FEFF 		bl	SX1278_hw_SPIReadByte
  54              	.LVL3:
  55 0010 0546     		mov	r5, r0
  56              	.LVL4:
  33:FML/Src/SX1278.c **** 	SX1278_hw_SetNSS(module->hw, 1);
  57              		.loc 1 33 2 is_stmt 1 view .LVU7
  58 0012 0121     		movs	r1, #1
  59 0014 2068     		ldr	r0, [r4]
  60 0016 FFF7FEFF 		bl	SX1278_hw_SetNSS
  61              	.LVL5:
  34:FML/Src/SX1278.c **** 	return tmp;
  62              		.loc 1 34 2 view .LVU8
  35:FML/Src/SX1278.c **** }
  63              		.loc 1 35 1 is_stmt 0 view .LVU9
  64 001a 2846     		mov	r0, r5
  65 001c 38BD     		pop	{r3, r4, r5, pc}
  66              		.loc 1 35 1 view .LVU10
  67              		.cfi_endproc
  68              	.LFE288:
  70              		.section	.text.SX1278_SPIWrite,"ax",%progbits
  71              		.align	1
  72              		.global	SX1278_SPIWrite
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  77              	SX1278_SPIWrite:
  78              	.LVL6:
  79              	.LFB289:
  36:FML/Src/SX1278.c **** 
  37:FML/Src/SX1278.c **** void SX1278_SPIWrite(SX1278_t *module, uint8_t addr, uint8_t cmd) {
  80              		.loc 1 37 67 is_stmt 1 view -0
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 3


  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		.loc 1 37 67 is_stmt 0 view .LVU12
  85 0000 70B5     		push	{r4, r5, r6, lr}
  86              	.LCFI1:
  87              		.cfi_def_cfa_offset 16
  88              		.cfi_offset 4, -16
  89              		.cfi_offset 5, -12
  90              		.cfi_offset 6, -8
  91              		.cfi_offset 14, -4
  92 0002 0446     		mov	r4, r0
  93 0004 0E46     		mov	r6, r1
  94 0006 1546     		mov	r5, r2
  38:FML/Src/SX1278.c **** 	SX1278_hw_SetNSS(module->hw, 0);
  95              		.loc 1 38 2 is_stmt 1 view .LVU13
  96 0008 0021     		movs	r1, #0
  97              	.LVL7:
  98              		.loc 1 38 2 is_stmt 0 view .LVU14
  99 000a 0068     		ldr	r0, [r0]
 100              	.LVL8:
 101              		.loc 1 38 2 view .LVU15
 102 000c FFF7FEFF 		bl	SX1278_hw_SetNSS
 103              	.LVL9:
  39:FML/Src/SX1278.c **** 	SX1278_hw_SPICommand(module->hw, addr | 0x80);
 104              		.loc 1 39 2 is_stmt 1 view .LVU16
 105 0010 46F08001 		orr	r1, r6, #128
 106 0014 2068     		ldr	r0, [r4]
 107 0016 FFF7FEFF 		bl	SX1278_hw_SPICommand
 108              	.LVL10:
  40:FML/Src/SX1278.c **** 	SX1278_hw_SPICommand(module->hw, cmd);
 109              		.loc 1 40 2 view .LVU17
 110 001a 2946     		mov	r1, r5
 111 001c 2068     		ldr	r0, [r4]
 112 001e FFF7FEFF 		bl	SX1278_hw_SPICommand
 113              	.LVL11:
  41:FML/Src/SX1278.c **** 	SX1278_hw_SetNSS(module->hw, 1);
 114              		.loc 1 41 2 view .LVU18
 115 0022 0121     		movs	r1, #1
 116 0024 2068     		ldr	r0, [r4]
 117 0026 FFF7FEFF 		bl	SX1278_hw_SetNSS
 118              	.LVL12:
  42:FML/Src/SX1278.c **** }
 119              		.loc 1 42 1 is_stmt 0 view .LVU19
 120 002a 70BD     		pop	{r4, r5, r6, pc}
 121              		.loc 1 42 1 view .LVU20
 122              		.cfi_endproc
 123              	.LFE289:
 125              		.section	.text.SX1278_SPIBurstRead,"ax",%progbits
 126              		.align	1
 127              		.global	SX1278_SPIBurstRead
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 132              	SX1278_SPIBurstRead:
 133              	.LVL13:
 134              	.LFB290:
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 4


  43:FML/Src/SX1278.c **** 
  44:FML/Src/SX1278.c **** void SX1278_SPIBurstRead(SX1278_t *module, uint8_t addr, uint8_t *rxBuf,
  45:FML/Src/SX1278.c **** 		uint8_t length) {
 135              		.loc 1 45 19 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
  46:FML/Src/SX1278.c **** 	uint8_t i;
 139              		.loc 1 46 2 view .LVU22
  47:FML/Src/SX1278.c **** 	if (length <= 1) {
 140              		.loc 1 47 2 view .LVU23
 141              		.loc 1 47 5 is_stmt 0 view .LVU24
 142 0000 012B     		cmp	r3, #1
 143 0002 1BD9     		bls	.L10
  45:FML/Src/SX1278.c **** 	uint8_t i;
 144              		.loc 1 45 19 view .LVU25
 145 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 24
 148              		.cfi_offset 3, -24
 149              		.cfi_offset 4, -20
 150              		.cfi_offset 5, -16
 151              		.cfi_offset 6, -12
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0006 0546     		mov	r5, r0
 155 0008 0C46     		mov	r4, r1
 156 000a 1746     		mov	r7, r2
 157 000c 1E46     		mov	r6, r3
  48:FML/Src/SX1278.c **** 		return;
  49:FML/Src/SX1278.c **** 	} else {
  50:FML/Src/SX1278.c **** 		SX1278_hw_SetNSS(module->hw, 0);
 158              		.loc 1 50 3 is_stmt 1 view .LVU26
 159 000e 0021     		movs	r1, #0
 160              	.LVL14:
 161              		.loc 1 50 3 is_stmt 0 view .LVU27
 162 0010 0068     		ldr	r0, [r0]
 163              	.LVL15:
 164              		.loc 1 50 3 view .LVU28
 165 0012 FFF7FEFF 		bl	SX1278_hw_SetNSS
 166              	.LVL16:
  51:FML/Src/SX1278.c **** 		SX1278_hw_SPICommand(module->hw, addr);
 167              		.loc 1 51 3 is_stmt 1 view .LVU29
 168 0016 2146     		mov	r1, r4
 169 0018 2868     		ldr	r0, [r5]
 170 001a FFF7FEFF 		bl	SX1278_hw_SPICommand
 171              	.LVL17:
  52:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 172              		.loc 1 52 3 view .LVU30
 173              		.loc 1 52 10 is_stmt 0 view .LVU31
 174 001e 0024     		movs	r4, #0
 175              		.loc 1 52 3 view .LVU32
 176 0020 05E0     		b	.L7
 177              	.LVL18:
 178              	.L8:
  53:FML/Src/SX1278.c **** 			*(rxBuf + i) = SX1278_hw_SPIReadByte(module->hw);
 179              		.loc 1 53 4 is_stmt 1 discriminator 3 view .LVU33
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 5


 180              		.loc 1 53 19 is_stmt 0 discriminator 3 view .LVU34
 181 0022 2868     		ldr	r0, [r5]
 182 0024 FFF7FEFF 		bl	SX1278_hw_SPIReadByte
 183              	.LVL19:
 184              		.loc 1 53 17 discriminator 3 view .LVU35
 185 0028 3855     		strb	r0, [r7, r4]
  52:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 186              		.loc 1 52 28 is_stmt 1 discriminator 3 view .LVU36
 187 002a 0134     		adds	r4, r4, #1
 188              	.LVL20:
  52:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 189              		.loc 1 52 28 is_stmt 0 discriminator 3 view .LVU37
 190 002c E4B2     		uxtb	r4, r4
 191              	.LVL21:
 192              	.L7:
  52:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 193              		.loc 1 52 17 is_stmt 1 discriminator 1 view .LVU38
 194 002e B442     		cmp	r4, r6
 195 0030 F7D3     		bcc	.L8
  54:FML/Src/SX1278.c **** 		}
  55:FML/Src/SX1278.c **** 		SX1278_hw_SetNSS(module->hw, 1);
 196              		.loc 1 55 3 view .LVU39
 197 0032 0121     		movs	r1, #1
 198 0034 2868     		ldr	r0, [r5]
 199 0036 FFF7FEFF 		bl	SX1278_hw_SetNSS
 200              	.LVL22:
  56:FML/Src/SX1278.c **** 	}
  57:FML/Src/SX1278.c **** }
 201              		.loc 1 57 1 is_stmt 0 view .LVU40
 202 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 203              	.LVL23:
 204              	.L10:
 205              	.LCFI3:
 206              		.cfi_def_cfa_offset 0
 207              		.cfi_restore 3
 208              		.cfi_restore 4
 209              		.cfi_restore 5
 210              		.cfi_restore 6
 211              		.cfi_restore 7
 212              		.cfi_restore 14
 213              		.loc 1 57 1 view .LVU41
 214 003c 7047     		bx	lr
 215              		.cfi_endproc
 216              	.LFE290:
 218              		.section	.text.SX1278_SPIBurstWrite,"ax",%progbits
 219              		.align	1
 220              		.global	SX1278_SPIBurstWrite
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	SX1278_SPIBurstWrite:
 226              	.LVL24:
 227              	.LFB291:
  58:FML/Src/SX1278.c **** 
  59:FML/Src/SX1278.c **** void SX1278_SPIBurstWrite(SX1278_t *module, uint8_t addr, uint8_t *txBuf,
  60:FML/Src/SX1278.c **** 		uint8_t length) {
 228              		.loc 1 60 19 is_stmt 1 view -0
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 6


 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
  61:FML/Src/SX1278.c **** 	unsigned char i;
 232              		.loc 1 61 2 view .LVU43
  62:FML/Src/SX1278.c **** 	if (length <= 1) {
 233              		.loc 1 62 2 view .LVU44
 234              		.loc 1 62 5 is_stmt 0 view .LVU45
 235 0000 012B     		cmp	r3, #1
 236 0002 1CD9     		bls	.L18
  60:FML/Src/SX1278.c **** 	unsigned char i;
 237              		.loc 1 60 19 view .LVU46
 238 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 239              	.LCFI4:
 240              		.cfi_def_cfa_offset 24
 241              		.cfi_offset 3, -24
 242              		.cfi_offset 4, -20
 243              		.cfi_offset 5, -16
 244              		.cfi_offset 6, -12
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 247 0006 0546     		mov	r5, r0
 248 0008 0C46     		mov	r4, r1
 249 000a 1746     		mov	r7, r2
 250 000c 1E46     		mov	r6, r3
  63:FML/Src/SX1278.c **** 		return;
  64:FML/Src/SX1278.c **** 	} else {
  65:FML/Src/SX1278.c **** 		SX1278_hw_SetNSS(module->hw, 0);
 251              		.loc 1 65 3 is_stmt 1 view .LVU47
 252 000e 0021     		movs	r1, #0
 253              	.LVL25:
 254              		.loc 1 65 3 is_stmt 0 view .LVU48
 255 0010 0068     		ldr	r0, [r0]
 256              	.LVL26:
 257              		.loc 1 65 3 view .LVU49
 258 0012 FFF7FEFF 		bl	SX1278_hw_SetNSS
 259              	.LVL27:
  66:FML/Src/SX1278.c **** 		SX1278_hw_SPICommand(module->hw, addr | 0x80);
 260              		.loc 1 66 3 is_stmt 1 view .LVU50
 261 0016 44F08001 		orr	r1, r4, #128
 262 001a 2868     		ldr	r0, [r5]
 263 001c FFF7FEFF 		bl	SX1278_hw_SPICommand
 264              	.LVL28:
  67:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 265              		.loc 1 67 3 view .LVU51
 266              		.loc 1 67 10 is_stmt 0 view .LVU52
 267 0020 0024     		movs	r4, #0
 268              		.loc 1 67 3 view .LVU53
 269 0022 05E0     		b	.L15
 270              	.LVL29:
 271              	.L16:
  68:FML/Src/SX1278.c **** 			SX1278_hw_SPICommand(module->hw, *(txBuf + i));
 272              		.loc 1 68 4 is_stmt 1 discriminator 3 view .LVU54
 273 0024 395D     		ldrb	r1, [r7, r4]	@ zero_extendqisi2
 274 0026 2868     		ldr	r0, [r5]
 275 0028 FFF7FEFF 		bl	SX1278_hw_SPICommand
 276              	.LVL30:
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 7


  67:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 277              		.loc 1 67 28 discriminator 3 view .LVU55
 278 002c 0134     		adds	r4, r4, #1
 279              	.LVL31:
  67:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 280              		.loc 1 67 28 is_stmt 0 discriminator 3 view .LVU56
 281 002e E4B2     		uxtb	r4, r4
 282              	.LVL32:
 283              	.L15:
  67:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 284              		.loc 1 67 17 is_stmt 1 discriminator 1 view .LVU57
 285 0030 B442     		cmp	r4, r6
 286 0032 F7D3     		bcc	.L16
  69:FML/Src/SX1278.c **** 		}
  70:FML/Src/SX1278.c **** 		SX1278_hw_SetNSS(module->hw, 1);
 287              		.loc 1 70 3 view .LVU58
 288 0034 0121     		movs	r1, #1
 289 0036 2868     		ldr	r0, [r5]
 290 0038 FFF7FEFF 		bl	SX1278_hw_SetNSS
 291              	.LVL33:
  71:FML/Src/SX1278.c **** 	}
  72:FML/Src/SX1278.c **** }
 292              		.loc 1 72 1 is_stmt 0 view .LVU59
 293 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 294              	.LVL34:
 295              	.L18:
 296              	.LCFI5:
 297              		.cfi_def_cfa_offset 0
 298              		.cfi_restore 3
 299              		.cfi_restore 4
 300              		.cfi_restore 5
 301              		.cfi_restore 6
 302              		.cfi_restore 7
 303              		.cfi_restore 14
 304              		.loc 1 72 1 view .LVU60
 305 003e 7047     		bx	lr
 306              		.cfi_endproc
 307              	.LFE291:
 309              		.section	.text.SX1278_standby,"ax",%progbits
 310              		.align	1
 311              		.global	SX1278_standby
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	SX1278_standby:
 317              	.LVL35:
 318              	.LFB293:
  73:FML/Src/SX1278.c **** 
  74:FML/Src/SX1278.c **** void SX1278_config(SX1278_t *module) {
  75:FML/Src/SX1278.c **** 	SX1278_sleep(module); //Change modem mode Must in Sleep mode
  76:FML/Src/SX1278.c **** 	SX1278_hw_DelayMs(15);
  77:FML/Src/SX1278.c **** 
  78:FML/Src/SX1278.c **** 	SX1278_entryLoRa(module);
  79:FML/Src/SX1278.c **** 	//SX1278_SPIWrite(module, 0x5904); //?? Change digital regulator form 1.6V to 1.47V: see errata no
  80:FML/Src/SX1278.c **** 
  81:FML/Src/SX1278.c **** 	uint64_t freq = ((uint64_t) module->frequency << 19) / 32000000;
  82:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 8


  83:FML/Src/SX1278.c **** 	freq_reg[0] = (uint8_t) (freq >> 16);
  84:FML/Src/SX1278.c **** 	freq_reg[1] = (uint8_t) (freq >> 8);
  85:FML/Src/SX1278.c **** 	freq_reg[2] = (uint8_t) (freq >> 0);
  86:FML/Src/SX1278.c **** 	SX1278_SPIBurstWrite(module, LR_RegFrMsb, (uint8_t*) freq_reg, 3); //setting  frequency parameter
  87:FML/Src/SX1278.c **** 
  88:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, RegSyncWord, 0x34);
  89:FML/Src/SX1278.c **** 
  90:FML/Src/SX1278.c **** 	//setting base parameter
  91:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPaConfig, SX1278_Power[module->power]); //Setting output power param
  92:FML/Src/SX1278.c **** 
  93:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOcp, 0x0B);			//RegOcp,Close Ocp
  94:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegLna, 0x23);		//RegLNA,High & LNA Enable
  95:FML/Src/SX1278.c **** 	if (SX1278_SpreadFactor[module->LoRa_SF] == 6) {	//SFactor=6
  96:FML/Src/SX1278.c **** 		uint8_t tmp;
  97:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
  98:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
  99:FML/Src/SX1278.c **** 				((SX1278_LoRaBandwidth[module->LoRa_BW] << 4)
 100:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x01)); //Implicit Enable CRC Enable(0x02) & Er
 101:FML/Src/SX1278.c **** 
 102:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
 103:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 104:FML/Src/SX1278.c **** 				((SX1278_SpreadFactor[module->LoRa_SF] << 4)
 105:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x03));
 106:FML/Src/SX1278.c **** 
 107:FML/Src/SX1278.c **** 		tmp = SX1278_SPIRead(module, 0x31);
 108:FML/Src/SX1278.c **** 		tmp &= 0xF8;
 109:FML/Src/SX1278.c **** 		tmp |= 0x05;
 110:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x31, tmp);
 111:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x37, 0x0C);
 112:FML/Src/SX1278.c **** 	} else {
 113:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
 114:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 115:FML/Src/SX1278.c **** 				((SX1278_LoRaBandwidth[module->LoRa_BW] << 4)
 116:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x00)); //Explicit Enable CRC Enable(0x02) & Er
 117:FML/Src/SX1278.c **** 
 118:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
 119:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 120:FML/Src/SX1278.c **** 				((SX1278_SpreadFactor[module->LoRa_SF] << 4)
 121:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x00)); //SFactor &  LNA gain set by the inte
 122:FML/Src/SX1278.c **** 	}
 123:FML/Src/SX1278.c **** 
 124:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegModemConfig3, 0x04);
 125:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegSymbTimeoutLsb, 0x08); //RegSymbTimeoutLsb Timeout = 0x3FF(Max)
 126:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPreambleMsb, 0x00); //RegPreambleMsb
 127:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPreambleLsb, 8); //RegPreambleLsb 8+4=12byte Preamble
 128:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_DIOMAPPING2, 0x01); //RegDioMapping2 DIO5=00, DIO4=01
 129:FML/Src/SX1278.c **** 	module->readBytes = 0;
 130:FML/Src/SX1278.c **** 	SX1278_standby(module); //Entry standby mode
 131:FML/Src/SX1278.c **** }
 132:FML/Src/SX1278.c **** 
 133:FML/Src/SX1278.c **** void SX1278_standby(SX1278_t *module) {
 319              		.loc 1 133 39 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		.loc 1 133 39 is_stmt 0 view .LVU62
 324 0000 10B5     		push	{r4, lr}
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 9


 325              	.LCFI6:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 4, -8
 328              		.cfi_offset 14, -4
 329 0002 0446     		mov	r4, r0
 134:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x09);
 330              		.loc 1 134 2 is_stmt 1 view .LVU63
 331 0004 0922     		movs	r2, #9
 332 0006 0121     		movs	r1, #1
 333 0008 FFF7FEFF 		bl	SX1278_SPIWrite
 334              	.LVL36:
 135:FML/Src/SX1278.c **** 	module->status = STANDBY;
 335              		.loc 1 135 2 view .LVU64
 336              		.loc 1 135 17 is_stmt 0 view .LVU65
 337 000c 0123     		movs	r3, #1
 338 000e A375     		strb	r3, [r4, #22]
 136:FML/Src/SX1278.c **** }
 339              		.loc 1 136 1 view .LVU66
 340 0010 10BD     		pop	{r4, pc}
 341              		.loc 1 136 1 view .LVU67
 342              		.cfi_endproc
 343              	.LFE293:
 345              		.section	.text.SX1278_sleep,"ax",%progbits
 346              		.align	1
 347              		.global	SX1278_sleep
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	SX1278_sleep:
 353              	.LVL37:
 354              	.LFB294:
 137:FML/Src/SX1278.c **** 
 138:FML/Src/SX1278.c **** void SX1278_sleep(SX1278_t *module) {
 355              		.loc 1 138 37 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		.loc 1 138 37 is_stmt 0 view .LVU69
 360 0000 10B5     		push	{r4, lr}
 361              	.LCFI7:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
 365 0002 0446     		mov	r4, r0
 139:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x08);
 366              		.loc 1 139 2 is_stmt 1 view .LVU70
 367 0004 0822     		movs	r2, #8
 368 0006 0121     		movs	r1, #1
 369 0008 FFF7FEFF 		bl	SX1278_SPIWrite
 370              	.LVL38:
 140:FML/Src/SX1278.c **** 	module->status = SLEEP;
 371              		.loc 1 140 2 view .LVU71
 372              		.loc 1 140 17 is_stmt 0 view .LVU72
 373 000c 0023     		movs	r3, #0
 374 000e A375     		strb	r3, [r4, #22]
 141:FML/Src/SX1278.c **** }
 375              		.loc 1 141 1 view .LVU73
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 10


 376 0010 10BD     		pop	{r4, pc}
 377              		.loc 1 141 1 view .LVU74
 378              		.cfi_endproc
 379              	.LFE294:
 381              		.section	.text.SX1278_entryLoRa,"ax",%progbits
 382              		.align	1
 383              		.global	SX1278_entryLoRa
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 388              	SX1278_entryLoRa:
 389              	.LVL39:
 390              	.LFB295:
 142:FML/Src/SX1278.c **** 
 143:FML/Src/SX1278.c **** void SX1278_entryLoRa(SX1278_t *module) {
 391              		.loc 1 143 41 is_stmt 1 view -0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		.loc 1 143 41 is_stmt 0 view .LVU76
 396 0000 08B5     		push	{r3, lr}
 397              	.LCFI8:
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 3, -8
 400              		.cfi_offset 14, -4
 144:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x88);
 401              		.loc 1 144 2 is_stmt 1 view .LVU77
 402 0002 8822     		movs	r2, #136
 403 0004 0121     		movs	r1, #1
 404 0006 FFF7FEFF 		bl	SX1278_SPIWrite
 405              	.LVL40:
 145:FML/Src/SX1278.c **** }
 406              		.loc 1 145 1 is_stmt 0 view .LVU78
 407 000a 08BD     		pop	{r3, pc}
 408              		.cfi_endproc
 409              	.LFE295:
 411              		.global	__aeabi_uldivmod
 412              		.section	.text.SX1278_config,"ax",%progbits
 413              		.align	1
 414              		.global	SX1278_config
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 419              	SX1278_config:
 420              	.LVL41:
 421              	.LFB292:
  74:FML/Src/SX1278.c **** 	SX1278_sleep(module); //Change modem mode Must in Sleep mode
 422              		.loc 1 74 38 is_stmt 1 view -0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 8
 425              		@ frame_needed = 0, uses_anonymous_args = 0
  74:FML/Src/SX1278.c **** 	SX1278_sleep(module); //Change modem mode Must in Sleep mode
 426              		.loc 1 74 38 is_stmt 0 view .LVU80
 427 0000 30B5     		push	{r4, r5, lr}
 428              	.LCFI9:
 429              		.cfi_def_cfa_offset 12
 430              		.cfi_offset 4, -12
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 11


 431              		.cfi_offset 5, -8
 432              		.cfi_offset 14, -4
 433 0002 83B0     		sub	sp, sp, #12
 434              	.LCFI10:
 435              		.cfi_def_cfa_offset 24
 436 0004 0446     		mov	r4, r0
  75:FML/Src/SX1278.c **** 	SX1278_hw_DelayMs(15);
 437              		.loc 1 75 2 is_stmt 1 view .LVU81
 438 0006 FFF7FEFF 		bl	SX1278_sleep
 439              	.LVL42:
  76:FML/Src/SX1278.c **** 
 440              		.loc 1 76 2 view .LVU82
 441 000a 0F20     		movs	r0, #15
 442 000c FFF7FEFF 		bl	SX1278_hw_DelayMs
 443              	.LVL43:
  78:FML/Src/SX1278.c **** 	//SX1278_SPIWrite(module, 0x5904); //?? Change digital regulator form 1.6V to 1.47V: see errata no
 444              		.loc 1 78 2 view .LVU83
 445 0010 2046     		mov	r0, r4
 446 0012 FFF7FEFF 		bl	SX1278_entryLoRa
 447              	.LVL44:
  81:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
 448              		.loc 1 81 2 view .LVU84
  81:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
 449              		.loc 1 81 36 is_stmt 0 view .LVU85
 450 0016 A568     		ldr	r5, [r4, #8]
 451 0018 E368     		ldr	r3, [r4, #12]
  81:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
 452              		.loc 1 81 48 view .LVU86
 453 001a D904     		lsls	r1, r3, #19
  81:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
 454              		.loc 1 81 11 view .LVU87
 455 001c 554A     		ldr	r2, .L32
 456 001e 0023     		movs	r3, #0
 457 0020 E804     		lsls	r0, r5, #19
 458 0022 41EA5531 		orr	r1, r1, r5, lsr #13
 459 0026 FFF7FEFF 		bl	__aeabi_uldivmod
 460              	.LVL45:
  82:FML/Src/SX1278.c **** 	freq_reg[0] = (uint8_t) (freq >> 16);
 461              		.loc 1 82 2 is_stmt 1 view .LVU88
  83:FML/Src/SX1278.c **** 	freq_reg[1] = (uint8_t) (freq >> 8);
 462              		.loc 1 83 2 view .LVU89
  83:FML/Src/SX1278.c **** 	freq_reg[1] = (uint8_t) (freq >> 8);
 463              		.loc 1 83 16 is_stmt 0 view .LVU90
 464 002a C0F30743 		ubfx	r3, r0, #16, #8
  83:FML/Src/SX1278.c **** 	freq_reg[1] = (uint8_t) (freq >> 8);
 465              		.loc 1 83 14 view .LVU91
 466 002e 8DF80430 		strb	r3, [sp, #4]
  84:FML/Src/SX1278.c **** 	freq_reg[2] = (uint8_t) (freq >> 0);
 467              		.loc 1 84 2 is_stmt 1 view .LVU92
  84:FML/Src/SX1278.c **** 	freq_reg[2] = (uint8_t) (freq >> 0);
 468              		.loc 1 84 16 is_stmt 0 view .LVU93
 469 0032 C0F30723 		ubfx	r3, r0, #8, #8
  84:FML/Src/SX1278.c **** 	freq_reg[2] = (uint8_t) (freq >> 0);
 470              		.loc 1 84 14 view .LVU94
 471 0036 8DF80530 		strb	r3, [sp, #5]
  85:FML/Src/SX1278.c **** 	SX1278_SPIBurstWrite(module, LR_RegFrMsb, (uint8_t*) freq_reg, 3); //setting  frequency parameter
 472              		.loc 1 85 2 is_stmt 1 view .LVU95
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 12


  85:FML/Src/SX1278.c **** 	SX1278_SPIBurstWrite(module, LR_RegFrMsb, (uint8_t*) freq_reg, 3); //setting  frequency parameter
 473              		.loc 1 85 14 is_stmt 0 view .LVU96
 474 003a 8DF80600 		strb	r0, [sp, #6]
  86:FML/Src/SX1278.c **** 
 475              		.loc 1 86 2 is_stmt 1 view .LVU97
 476 003e 0323     		movs	r3, #3
 477 0040 01AA     		add	r2, sp, #4
 478 0042 0621     		movs	r1, #6
 479              	.LVL46:
  86:FML/Src/SX1278.c **** 
 480              		.loc 1 86 2 is_stmt 0 view .LVU98
 481 0044 2046     		mov	r0, r4
  86:FML/Src/SX1278.c **** 
 482              		.loc 1 86 2 view .LVU99
 483 0046 FFF7FEFF 		bl	SX1278_SPIBurstWrite
 484              	.LVL47:
  88:FML/Src/SX1278.c **** 
 485              		.loc 1 88 2 is_stmt 1 view .LVU100
 486 004a 3422     		movs	r2, #52
 487 004c 3921     		movs	r1, #57
 488 004e 2046     		mov	r0, r4
 489 0050 FFF7FEFF 		bl	SX1278_SPIWrite
 490              	.LVL48:
  91:FML/Src/SX1278.c **** 
 491              		.loc 1 91 2 view .LVU101
  91:FML/Src/SX1278.c **** 
 492              		.loc 1 91 61 is_stmt 0 view .LVU102
 493 0054 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
  91:FML/Src/SX1278.c **** 
 494              		.loc 1 91 2 view .LVU103
 495 0056 484A     		ldr	r2, .L32+4
 496 0058 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 497 005a 0921     		movs	r1, #9
 498 005c 2046     		mov	r0, r4
 499 005e FFF7FEFF 		bl	SX1278_SPIWrite
 500              	.LVL49:
  93:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegLna, 0x23);		//RegLNA,High & LNA Enable
 501              		.loc 1 93 2 is_stmt 1 view .LVU104
 502 0062 0B22     		movs	r2, #11
 503 0064 1146     		mov	r1, r2
 504 0066 2046     		mov	r0, r4
 505 0068 FFF7FEFF 		bl	SX1278_SPIWrite
 506              	.LVL50:
  94:FML/Src/SX1278.c **** 	if (SX1278_SpreadFactor[module->LoRa_SF] == 6) {	//SFactor=6
 507              		.loc 1 94 2 view .LVU105
 508 006c 2322     		movs	r2, #35
 509 006e 0C21     		movs	r1, #12
 510 0070 2046     		mov	r0, r4
 511 0072 FFF7FEFF 		bl	SX1278_SPIWrite
 512              	.LVL51:
  95:FML/Src/SX1278.c **** 		uint8_t tmp;
 513              		.loc 1 95 2 view .LVU106
  95:FML/Src/SX1278.c **** 		uint8_t tmp;
 514              		.loc 1 95 32 is_stmt 0 view .LVU107
 515 0076 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
  95:FML/Src/SX1278.c **** 		uint8_t tmp;
 516              		.loc 1 95 25 view .LVU108
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 13


 517 0078 404A     		ldr	r2, .L32+8
 518 007a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  95:FML/Src/SX1278.c **** 		uint8_t tmp;
 519              		.loc 1 95 5 view .LVU109
 520 007c 062B     		cmp	r3, #6
 521 007e 42D0     		beq	.L31
 113:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 522              		.loc 1 113 3 is_stmt 1 view .LVU110
 115:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x00)); //Explicit Enable CRC Enable(0x02) & Er
 523              		.loc 1 115 34 is_stmt 0 view .LVU111
 524 0080 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 115:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x00)); //Explicit Enable CRC Enable(0x02) & Er
 525              		.loc 1 115 27 view .LVU112
 526 0082 3F4A     		ldr	r2, .L32+12
 527 0084 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 115:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x00)); //Explicit Enable CRC Enable(0x02) & Er
 528              		.loc 1 115 45 view .LVU113
 529 0086 1201     		lsls	r2, r2, #4
 530 0088 D2B2     		uxtb	r2, r2
 116:FML/Src/SX1278.c **** 
 531              		.loc 1 116 34 view .LVU114
 532 008a E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 116:FML/Src/SX1278.c **** 
 533              		.loc 1 116 27 view .LVU115
 534 008c 3D49     		ldr	r1, .L32+16
 535 008e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 116:FML/Src/SX1278.c **** 
 536              		.loc 1 116 45 view .LVU116
 537 0090 5B00     		lsls	r3, r3, #1
 538 0092 DBB2     		uxtb	r3, r3
 113:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 539              		.loc 1 113 3 view .LVU117
 540 0094 1A44     		add	r2, r2, r3
 541 0096 02F0FE02 		and	r2, r2, #254
 542 009a 1D21     		movs	r1, #29
 543 009c 2046     		mov	r0, r4
 544 009e FFF7FEFF 		bl	SX1278_SPIWrite
 545              	.LVL52:
 118:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 546              		.loc 1 118 3 is_stmt 1 view .LVU118
 120:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x00)); //SFactor &  LNA gain set by the inte
 547              		.loc 1 120 33 is_stmt 0 view .LVU119
 548 00a2 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 120:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x00)); //SFactor &  LNA gain set by the inte
 549              		.loc 1 120 26 view .LVU120
 550 00a4 354A     		ldr	r2, .L32+8
 551 00a6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 120:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x00)); //SFactor &  LNA gain set by the inte
 552              		.loc 1 120 44 view .LVU121
 553 00a8 1201     		lsls	r2, r2, #4
 554 00aa D2B2     		uxtb	r2, r2
 121:FML/Src/SX1278.c **** 	}
 555              		.loc 1 121 31 view .LVU122
 556 00ac 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 121:FML/Src/SX1278.c **** 	}
 557              		.loc 1 121 24 view .LVU123
 558 00ae 3649     		ldr	r1, .L32+20
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 14


 559 00b0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 121:FML/Src/SX1278.c **** 	}
 560              		.loc 1 121 47 view .LVU124
 561 00b2 9B00     		lsls	r3, r3, #2
 562 00b4 DBB2     		uxtb	r3, r3
 118:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 563              		.loc 1 118 3 view .LVU125
 564 00b6 1A44     		add	r2, r2, r3
 565 00b8 02F0FC02 		and	r2, r2, #252
 566 00bc 1E21     		movs	r1, #30
 567 00be 2046     		mov	r0, r4
 568 00c0 FFF7FEFF 		bl	SX1278_SPIWrite
 569              	.LVL53:
 570              	.L29:
 124:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegSymbTimeoutLsb, 0x08); //RegSymbTimeoutLsb Timeout = 0x3FF(Max)
 571              		.loc 1 124 2 is_stmt 1 view .LVU126
 572 00c4 0422     		movs	r2, #4
 573 00c6 2621     		movs	r1, #38
 574 00c8 2046     		mov	r0, r4
 575 00ca FFF7FEFF 		bl	SX1278_SPIWrite
 576              	.LVL54:
 125:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPreambleMsb, 0x00); //RegPreambleMsb
 577              		.loc 1 125 2 view .LVU127
 578 00ce 0822     		movs	r2, #8
 579 00d0 1F21     		movs	r1, #31
 580 00d2 2046     		mov	r0, r4
 581 00d4 FFF7FEFF 		bl	SX1278_SPIWrite
 582              	.LVL55:
 126:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPreambleLsb, 8); //RegPreambleLsb 8+4=12byte Preamble
 583              		.loc 1 126 2 view .LVU128
 584 00d8 0022     		movs	r2, #0
 585 00da 2021     		movs	r1, #32
 586 00dc 2046     		mov	r0, r4
 587 00de FFF7FEFF 		bl	SX1278_SPIWrite
 588              	.LVL56:
 127:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_DIOMAPPING2, 0x01); //RegDioMapping2 DIO5=00, DIO4=01
 589              		.loc 1 127 2 view .LVU129
 590 00e2 0822     		movs	r2, #8
 591 00e4 2121     		movs	r1, #33
 592 00e6 2046     		mov	r0, r4
 593 00e8 FFF7FEFF 		bl	SX1278_SPIWrite
 594              	.LVL57:
 128:FML/Src/SX1278.c **** 	module->readBytes = 0;
 595              		.loc 1 128 2 view .LVU130
 596 00ec 0122     		movs	r2, #1
 597 00ee 4121     		movs	r1, #65
 598 00f0 2046     		mov	r0, r4
 599 00f2 FFF7FEFF 		bl	SX1278_SPIWrite
 600              	.LVL58:
 129:FML/Src/SX1278.c **** 	SX1278_standby(module); //Entry standby mode
 601              		.loc 1 129 2 view .LVU131
 129:FML/Src/SX1278.c **** 	SX1278_standby(module); //Entry standby mode
 602              		.loc 1 129 20 is_stmt 0 view .LVU132
 603 00f6 0023     		movs	r3, #0
 604 00f8 84F81731 		strb	r3, [r4, #279]
 130:FML/Src/SX1278.c **** }
 605              		.loc 1 130 2 is_stmt 1 view .LVU133
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 15


 606 00fc 2046     		mov	r0, r4
 607 00fe FFF7FEFF 		bl	SX1278_standby
 608              	.LVL59:
 131:FML/Src/SX1278.c **** 
 609              		.loc 1 131 1 is_stmt 0 view .LVU134
 610 0102 03B0     		add	sp, sp, #12
 611              	.LCFI11:
 612              		.cfi_remember_state
 613              		.cfi_def_cfa_offset 12
 614              		@ sp needed
 615 0104 30BD     		pop	{r4, r5, pc}
 616              	.LVL60:
 617              	.L31:
 618              	.LCFI12:
 619              		.cfi_restore_state
 620              	.LBB2:
  96:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
 621              		.loc 1 96 3 is_stmt 1 view .LVU135
  97:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 622              		.loc 1 97 3 view .LVU136
  99:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x01)); //Implicit Enable CRC Enable(0x02) & Er
 623              		.loc 1 99 34 is_stmt 0 view .LVU137
 624 0106 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
  99:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x01)); //Implicit Enable CRC Enable(0x02) & Er
 625              		.loc 1 99 27 view .LVU138
 626 0108 1D4A     		ldr	r2, .L32+12
 627 010a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
  99:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x01)); //Implicit Enable CRC Enable(0x02) & Er
 628              		.loc 1 99 45 view .LVU139
 629 010c 1201     		lsls	r2, r2, #4
 630 010e D2B2     		uxtb	r2, r2
 100:FML/Src/SX1278.c **** 
 631              		.loc 1 100 34 view .LVU140
 632 0110 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 100:FML/Src/SX1278.c **** 
 633              		.loc 1 100 27 view .LVU141
 634 0112 1C49     		ldr	r1, .L32+16
 635 0114 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 100:FML/Src/SX1278.c **** 
 636              		.loc 1 100 45 view .LVU142
 637 0116 5B00     		lsls	r3, r3, #1
 638 0118 DBB2     		uxtb	r3, r3
 100:FML/Src/SX1278.c **** 
 639              		.loc 1 100 7 view .LVU143
 640 011a 1A44     		add	r2, r2, r3
 641 011c D2B2     		uxtb	r2, r2
  97:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 642              		.loc 1 97 3 view .LVU144
 643 011e 0132     		adds	r2, r2, #1
 644 0120 D2B2     		uxtb	r2, r2
 645 0122 1D21     		movs	r1, #29
 646 0124 2046     		mov	r0, r4
 647 0126 FFF7FEFF 		bl	SX1278_SPIWrite
 648              	.LVL61:
 102:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 649              		.loc 1 102 3 is_stmt 1 view .LVU145
 104:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x03));
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 16


 650              		.loc 1 104 33 is_stmt 0 view .LVU146
 651 012a 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 104:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x03));
 652              		.loc 1 104 26 view .LVU147
 653 012c 134A     		ldr	r2, .L32+8
 654 012e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 104:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x03));
 655              		.loc 1 104 44 view .LVU148
 656 0130 1201     		lsls	r2, r2, #4
 657 0132 D2B2     		uxtb	r2, r2
 105:FML/Src/SX1278.c **** 
 658              		.loc 1 105 31 view .LVU149
 659 0134 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 105:FML/Src/SX1278.c **** 
 660              		.loc 1 105 24 view .LVU150
 661 0136 1449     		ldr	r1, .L32+20
 662 0138 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 105:FML/Src/SX1278.c **** 
 663              		.loc 1 105 47 view .LVU151
 664 013a 9B00     		lsls	r3, r3, #2
 665 013c DBB2     		uxtb	r3, r3
 105:FML/Src/SX1278.c **** 
 666              		.loc 1 105 7 view .LVU152
 667 013e 1A44     		add	r2, r2, r3
 668 0140 D2B2     		uxtb	r2, r2
 102:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 669              		.loc 1 102 3 view .LVU153
 670 0142 0332     		adds	r2, r2, #3
 671 0144 D2B2     		uxtb	r2, r2
 672 0146 1E21     		movs	r1, #30
 673 0148 2046     		mov	r0, r4
 674 014a FFF7FEFF 		bl	SX1278_SPIWrite
 675              	.LVL62:
 107:FML/Src/SX1278.c **** 		tmp &= 0xF8;
 676              		.loc 1 107 3 is_stmt 1 view .LVU154
 107:FML/Src/SX1278.c **** 		tmp &= 0xF8;
 677              		.loc 1 107 9 is_stmt 0 view .LVU155
 678 014e 3121     		movs	r1, #49
 679 0150 2046     		mov	r0, r4
 680 0152 FFF7FEFF 		bl	SX1278_SPIRead
 681              	.LVL63:
 108:FML/Src/SX1278.c **** 		tmp |= 0x05;
 682              		.loc 1 108 3 is_stmt 1 view .LVU156
 108:FML/Src/SX1278.c **** 		tmp |= 0x05;
 683              		.loc 1 108 7 is_stmt 0 view .LVU157
 684 0156 00F0F802 		and	r2, r0, #248
 685              	.LVL64:
 109:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x31, tmp);
 686              		.loc 1 109 3 is_stmt 1 view .LVU158
 110:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x37, 0x0C);
 687              		.loc 1 110 3 view .LVU159
 688 015a 42F00502 		orr	r2, r2, #5
 689              	.LVL65:
 110:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x37, 0x0C);
 690              		.loc 1 110 3 is_stmt 0 view .LVU160
 691 015e 3121     		movs	r1, #49
 692 0160 2046     		mov	r0, r4
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 17


 693              	.LVL66:
 110:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x37, 0x0C);
 694              		.loc 1 110 3 view .LVU161
 695 0162 FFF7FEFF 		bl	SX1278_SPIWrite
 696              	.LVL67:
 111:FML/Src/SX1278.c **** 	} else {
 697              		.loc 1 111 3 is_stmt 1 view .LVU162
 698 0166 0C22     		movs	r2, #12
 699 0168 3721     		movs	r1, #55
 700 016a 2046     		mov	r0, r4
 701 016c FFF7FEFF 		bl	SX1278_SPIWrite
 702              	.LVL68:
 703              	.LBE2:
 704 0170 A8E7     		b	.L29
 705              	.L33:
 706 0172 00BF     		.align	2
 707              	.L32:
 708 0174 0048E801 		.word	32000000
 709 0178 00000000 		.word	SX1278_Power
 710 017c 00000000 		.word	SX1278_SpreadFactor
 711 0180 00000000 		.word	SX1278_LoRaBandwidth
 712 0184 00000000 		.word	SX1278_CodingRate
 713 0188 00000000 		.word	SX1278_CRC_Sum
 714              		.cfi_endproc
 715              	.LFE292:
 717              		.section	.text.SX1278_clearLoRaIrq,"ax",%progbits
 718              		.align	1
 719              		.global	SX1278_clearLoRaIrq
 720              		.syntax unified
 721              		.thumb
 722              		.thumb_func
 724              	SX1278_clearLoRaIrq:
 725              	.LVL69:
 726              	.LFB296:
 146:FML/Src/SX1278.c **** 
 147:FML/Src/SX1278.c **** void SX1278_clearLoRaIrq(SX1278_t *module) {
 727              		.loc 1 147 44 view -0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		.loc 1 147 44 is_stmt 0 view .LVU164
 732 0000 08B5     		push	{r3, lr}
 733              	.LCFI13:
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 3, -8
 736              		.cfi_offset 14, -4
 148:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegIrqFlags, 0xFF);
 737              		.loc 1 148 2 is_stmt 1 view .LVU165
 738 0002 FF22     		movs	r2, #255
 739 0004 1221     		movs	r1, #18
 740 0006 FFF7FEFF 		bl	SX1278_SPIWrite
 741              	.LVL70:
 149:FML/Src/SX1278.c **** }
 742              		.loc 1 149 1 is_stmt 0 view .LVU166
 743 000a 08BD     		pop	{r3, pc}
 744              		.cfi_endproc
 745              	.LFE296:
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 18


 747              		.section	.text.SX1278_LoRaEntryRx,"ax",%progbits
 748              		.align	1
 749              		.global	SX1278_LoRaEntryRx
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 754              	SX1278_LoRaEntryRx:
 755              	.LVL71:
 756              	.LFB297:
 150:FML/Src/SX1278.c **** 
 151:FML/Src/SX1278.c **** int SX1278_LoRaEntryRx(SX1278_t *module, uint8_t length, uint32_t timeout) {
 757              		.loc 1 151 76 is_stmt 1 view -0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              		.loc 1 151 76 is_stmt 0 view .LVU168
 762 0000 70B5     		push	{r4, r5, r6, lr}
 763              	.LCFI14:
 764              		.cfi_def_cfa_offset 16
 765              		.cfi_offset 4, -16
 766              		.cfi_offset 5, -12
 767              		.cfi_offset 6, -8
 768              		.cfi_offset 14, -4
 769 0002 0546     		mov	r5, r0
 770 0004 0E46     		mov	r6, r1
 771 0006 1446     		mov	r4, r2
 152:FML/Src/SX1278.c **** 	uint8_t addr;
 772              		.loc 1 152 2 is_stmt 1 view .LVU169
 153:FML/Src/SX1278.c **** 
 154:FML/Src/SX1278.c **** 	module->packetLength = length;
 773              		.loc 1 154 2 view .LVU170
 774              		.loc 1 154 23 is_stmt 0 view .LVU171
 775 0008 4175     		strb	r1, [r0, #21]
 155:FML/Src/SX1278.c **** 
 156:FML/Src/SX1278.c **** 	SX1278_config(module);		//Setting base parameter
 776              		.loc 1 156 2 is_stmt 1 view .LVU172
 777 000a FFF7FEFF 		bl	SX1278_config
 778              	.LVL72:
 157:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_PADAC, 0x84);	//Normal and RX
 779              		.loc 1 157 2 view .LVU173
 780 000e 8422     		movs	r2, #132
 781 0010 4D21     		movs	r1, #77
 782 0012 2846     		mov	r0, r5
 783 0014 FFF7FEFF 		bl	SX1278_SPIWrite
 784              	.LVL73:
 158:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegHopPeriod, 0xFF);	//No FHSS
 785              		.loc 1 158 2 view .LVU174
 786 0018 FF22     		movs	r2, #255
 787 001a 2421     		movs	r1, #36
 788 001c 2846     		mov	r0, r5
 789 001e FFF7FEFF 		bl	SX1278_SPIWrite
 790              	.LVL74:
 159:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_DIOMAPPING1, 0x01);//DIO=00,DIO1=00,DIO2=00, DIO3=01 (DIO0  RxDone)
 791              		.loc 1 159 2 view .LVU175
 792 0022 0122     		movs	r2, #1
 793 0024 4021     		movs	r1, #64
 794 0026 2846     		mov	r0, r5
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 19


 795 0028 FFF7FEFF 		bl	SX1278_SPIWrite
 796              	.LVL75:
 160:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegIrqFlagsMask, 0x3F);//Open RxDone interrupt & Timeout 0011 1111
 797              		.loc 1 160 2 view .LVU176
 798 002c 3F22     		movs	r2, #63
 799 002e 1121     		movs	r1, #17
 800 0030 2846     		mov	r0, r5
 801 0032 FFF7FEFF 		bl	SX1278_SPIWrite
 802              	.LVL76:
 161:FML/Src/SX1278.c **** 	SX1278_clearLoRaIrq(module);
 803              		.loc 1 161 2 view .LVU177
 804 0036 2846     		mov	r0, r5
 805 0038 FFF7FEFF 		bl	SX1278_clearLoRaIrq
 806              	.LVL77:
 162:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPayloadLength, length);//Payload Length 21byte(this register must di
 807              		.loc 1 162 2 view .LVU178
 808 003c 3246     		mov	r2, r6
 809 003e 2221     		movs	r1, #34
 810 0040 2846     		mov	r0, r5
 811 0042 FFF7FEFF 		bl	SX1278_SPIWrite
 812              	.LVL78:
 163:FML/Src/SX1278.c **** 	addr = SX1278_SPIRead(module, LR_RegFifoRxBaseAddr); //Read RxBaseAddr
 813              		.loc 1 163 2 view .LVU179
 814              		.loc 1 163 9 is_stmt 0 view .LVU180
 815 0046 0F21     		movs	r1, #15
 816 0048 2846     		mov	r0, r5
 817 004a FFF7FEFF 		bl	SX1278_SPIRead
 818              	.LVL79:
 819 004e 0246     		mov	r2, r0
 820              	.LVL80:
 164:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RxBaseAddr->FiFoAddrPtr
 821              		.loc 1 164 2 is_stmt 1 view .LVU181
 822 0050 0D21     		movs	r1, #13
 823 0052 2846     		mov	r0, r5
 824 0054 FFF7FEFF 		bl	SX1278_SPIWrite
 825              	.LVL81:
 165:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x8d);	//Mode//Low Frequency Mode
 826              		.loc 1 165 2 view .LVU182
 827 0058 8D22     		movs	r2, #141
 828 005a 0121     		movs	r1, #1
 829 005c 2846     		mov	r0, r5
 830 005e FFF7FEFF 		bl	SX1278_SPIWrite
 831              	.LVL82:
 166:FML/Src/SX1278.c **** 	//SX1278_SPIWrite(module, LR_RegOpMode,0x05);	//Continuous Rx Mode //High Frequency Mode
 167:FML/Src/SX1278.c **** 	module->readBytes = 0;
 832              		.loc 1 167 2 view .LVU183
 833              		.loc 1 167 20 is_stmt 0 view .LVU184
 834 0062 0023     		movs	r3, #0
 835 0064 85F81731 		strb	r3, [r5, #279]
 836 0068 06E0     		b	.L40
 837              	.L42:
 168:FML/Src/SX1278.c **** 
 169:FML/Src/SX1278.c **** 	while (1) {
 170:FML/Src/SX1278.c **** 		if ((SX1278_SPIRead(module, LR_RegModemStat) & 0x04) == 0x04) {	//Rx-on going RegModemStat
 171:FML/Src/SX1278.c **** 			module->status = RX;
 838              		.loc 1 171 4 is_stmt 1 view .LVU185
 839              		.loc 1 171 19 is_stmt 0 view .LVU186
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 20


 840 006a 0323     		movs	r3, #3
 841 006c AB75     		strb	r3, [r5, #22]
 172:FML/Src/SX1278.c **** 			return 1;
 842              		.loc 1 172 4 is_stmt 1 view .LVU187
 843              		.loc 1 172 11 is_stmt 0 view .LVU188
 844 006e 0120     		movs	r0, #1
 845              	.L36:
 173:FML/Src/SX1278.c **** 		}
 174:FML/Src/SX1278.c **** 		if (--timeout == 0) {
 175:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 176:FML/Src/SX1278.c **** 			SX1278_config(module);
 177:FML/Src/SX1278.c **** 			return 0;
 178:FML/Src/SX1278.c **** 		}
 179:FML/Src/SX1278.c **** 		SX1278_hw_DelayMs(1);
 180:FML/Src/SX1278.c **** 	}
 181:FML/Src/SX1278.c **** }
 846              		.loc 1 181 1 view .LVU189
 847 0070 70BD     		pop	{r4, r5, r6, pc}
 848              	.LVL83:
 849              	.L39:
 179:FML/Src/SX1278.c **** 	}
 850              		.loc 1 179 3 is_stmt 1 view .LVU190
 851 0072 0120     		movs	r0, #1
 852 0074 FFF7FEFF 		bl	SX1278_hw_DelayMs
 853              	.LVL84:
 169:FML/Src/SX1278.c **** 		if ((SX1278_SPIRead(module, LR_RegModemStat) & 0x04) == 0x04) {	//Rx-on going RegModemStat
 854              		.loc 1 169 8 view .LVU191
 855              	.L40:
 169:FML/Src/SX1278.c **** 		if ((SX1278_SPIRead(module, LR_RegModemStat) & 0x04) == 0x04) {	//Rx-on going RegModemStat
 856              		.loc 1 169 2 view .LVU192
 170:FML/Src/SX1278.c **** 			module->status = RX;
 857              		.loc 1 170 3 view .LVU193
 170:FML/Src/SX1278.c **** 			module->status = RX;
 858              		.loc 1 170 8 is_stmt 0 view .LVU194
 859 0078 1821     		movs	r1, #24
 860 007a 2846     		mov	r0, r5
 861 007c FFF7FEFF 		bl	SX1278_SPIRead
 862              	.LVL85:
 170:FML/Src/SX1278.c **** 			module->status = RX;
 863              		.loc 1 170 6 view .LVU195
 864 0080 10F0040F 		tst	r0, #4
 865 0084 F1D1     		bne	.L42
 174:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 866              		.loc 1 174 3 is_stmt 1 view .LVU196
 867              	.LVL86:
 174:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 868              		.loc 1 174 6 is_stmt 0 view .LVU197
 869 0086 013C     		subs	r4, r4, #1
 870              	.LVL87:
 174:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 871              		.loc 1 174 6 view .LVU198
 872 0088 F3D1     		bne	.L39
 175:FML/Src/SX1278.c **** 			SX1278_config(module);
 873              		.loc 1 175 4 is_stmt 1 view .LVU199
 874 008a 2868     		ldr	r0, [r5]
 875 008c FFF7FEFF 		bl	SX1278_hw_Reset
 876              	.LVL88:
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 21


 176:FML/Src/SX1278.c **** 			return 0;
 877              		.loc 1 176 4 view .LVU200
 878 0090 2846     		mov	r0, r5
 879 0092 FFF7FEFF 		bl	SX1278_config
 880              	.LVL89:
 177:FML/Src/SX1278.c **** 		}
 881              		.loc 1 177 4 view .LVU201
 177:FML/Src/SX1278.c **** 		}
 882              		.loc 1 177 11 is_stmt 0 view .LVU202
 883 0096 0020     		movs	r0, #0
 884 0098 EAE7     		b	.L36
 885              		.cfi_endproc
 886              	.LFE297:
 888              		.section	.rodata.SX1278_LoRaRxPacket.str1.4,"aMS",%progbits,1
 889              		.align	2
 890              	.LC0:
 891 0000 6C6F7261 		.ascii	"lora%d has received %dbytes\015\012\000"
 891      25642068 
 891      61732072 
 891      65636569 
 891      76656420 
 892              		.section	.text.SX1278_LoRaRxPacket,"ax",%progbits
 893              		.align	1
 894              		.global	SX1278_LoRaRxPacket
 895              		.syntax unified
 896              		.thumb
 897              		.thumb_func
 899              	SX1278_LoRaRxPacket:
 900              	.LVL90:
 901              	.LFB298:
 182:FML/Src/SX1278.c **** 
 183:FML/Src/SX1278.c **** /**
 184:FML/Src/SX1278.c ****  * @brief 将DIO0设置为RxDone中断，此函数作为DIO0连接引脚的中断回调函数
 185:FML/Src/SX1278.c ****  * 
 186:FML/Src/SX1278.c ****  * @param module 
 187:FML/Src/SX1278.c ****  * @return uint8_t 
 188:FML/Src/SX1278.c ****  */
 189:FML/Src/SX1278.c **** uint8_t SX1278_LoRaRxPacket(SX1278_t *module) {
 902              		.loc 1 189 47 is_stmt 1 view -0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906              		.loc 1 189 47 is_stmt 0 view .LVU204
 907 0000 70B5     		push	{r4, r5, r6, lr}
 908              	.LCFI15:
 909              		.cfi_def_cfa_offset 16
 910              		.cfi_offset 4, -16
 911              		.cfi_offset 5, -12
 912              		.cfi_offset 6, -8
 913              		.cfi_offset 14, -4
 914 0002 0446     		mov	r4, r0
 190:FML/Src/SX1278.c **** 	unsigned char addr;
 915              		.loc 1 190 2 is_stmt 1 view .LVU205
 191:FML/Src/SX1278.c **** 	unsigned char packet_size;
 916              		.loc 1 191 2 view .LVU206
 192:FML/Src/SX1278.c **** 
 193:FML/Src/SX1278.c **** 	if (SX1278_hw_GetDIO0(module->hw)) {
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 22


 917              		.loc 1 193 2 view .LVU207
 918              		.loc 1 193 6 is_stmt 0 view .LVU208
 919 0004 0068     		ldr	r0, [r0]
 920              	.LVL91:
 921              		.loc 1 193 6 view .LVU209
 922 0006 FFF7FEFF 		bl	SX1278_hw_GetDIO0
 923              	.LVL92:
 924              		.loc 1 193 5 view .LVU210
 925 000a C8B9     		cbnz	r0, .L48
 926              	.L44:
 194:FML/Src/SX1278.c **** 		memset(module->rxBuffer, 0x00, SX1278_MAX_PACKET);
 195:FML/Src/SX1278.c **** 
 196:FML/Src/SX1278.c **** 		addr = SX1278_SPIRead(module, LR_RegFifoRxCurrentaddr); //last packet addr
 197:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RxBaseAddr -> FiFoAddrPtr
 198:FML/Src/SX1278.c **** 
 199:FML/Src/SX1278.c **** 		if (module->LoRa_SF == SX1278_LORA_SF_6) { //When SpreadFactor is six,will used Implicit Header m
 200:FML/Src/SX1278.c **** 			packet_size = module->packetLength;
 201:FML/Src/SX1278.c **** 		} else {
 202:FML/Src/SX1278.c **** 			packet_size = SX1278_SPIRead(module, LR_RegRxNbBytes); //Number for received bytes
 203:FML/Src/SX1278.c **** 		}
 204:FML/Src/SX1278.c **** 
 205:FML/Src/SX1278.c **** 		SX1278_SPIBurstRead(module, 0x00, module->rxBuffer, packet_size);
 206:FML/Src/SX1278.c **** 		module->readBytes = packet_size;
 207:FML/Src/SX1278.c **** 		SX1278_clearLoRaIrq(module);
 208:FML/Src/SX1278.c **** 	}
 209:FML/Src/SX1278.c **** 	shellPrint(&shell,"lora%d has received %dbytes\r\n",(module- &Lora_dev[0])/sizeof(SX1278_t),module
 927              		.loc 1 209 2 is_stmt 1 view .LVU211
 928              		.loc 1 209 61 is_stmt 0 view .LVU212
 929 000c 1F4A     		ldr	r2, .L49
 930 000e A21A     		subs	r2, r4, r2
 931 0010 D210     		asrs	r2, r2, #3
 932 0012 1F4B     		ldr	r3, .L49+4
 933 0014 03FB02F2 		mul	r2, r3, r2
 934              		.loc 1 209 2 view .LVU213
 935 0018 D208     		lsrs	r2, r2, #3
 936 001a 1E4B     		ldr	r3, .L49+8
 937 001c A3FB0232 		umull	r3, r2, r3, r2
 938 0020 1D4D     		ldr	r5, .L49+12
 939 0022 94F81731 		ldrb	r3, [r4, #279]	@ zero_extendqisi2
 940 0026 5208     		lsrs	r2, r2, #1
 941 0028 1C49     		ldr	r1, .L49+16
 942 002a 2846     		mov	r0, r5
 943 002c FFF7FEFF 		bl	shellPrint
 944              	.LVL93:
 210:FML/Src/SX1278.c **** 	shellPrint(&shell,module->rxBuffer);
 945              		.loc 1 210 2 is_stmt 1 view .LVU214
 946 0030 04F11701 		add	r1, r4, #23
 947 0034 2846     		mov	r0, r5
 948 0036 FFF7FEFF 		bl	shellPrint
 949              	.LVL94:
 211:FML/Src/SX1278.c **** 	return module->readBytes;
 950              		.loc 1 211 2 view .LVU215
 212:FML/Src/SX1278.c **** }
 951              		.loc 1 212 1 is_stmt 0 view .LVU216
 952 003a 94F81701 		ldrb	r0, [r4, #279]	@ zero_extendqisi2
 953 003e 70BD     		pop	{r4, r5, r6, pc}
 954              	.LVL95:
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 23


 955              	.L48:
 194:FML/Src/SX1278.c **** 
 956              		.loc 1 194 3 is_stmt 1 view .LVU217
 194:FML/Src/SX1278.c **** 
 957              		.loc 1 194 16 is_stmt 0 view .LVU218
 958 0040 04F11706 		add	r6, r4, #23
 194:FML/Src/SX1278.c **** 
 959              		.loc 1 194 3 view .LVU219
 960 0044 4FF48072 		mov	r2, #256
 961 0048 0021     		movs	r1, #0
 962 004a 3046     		mov	r0, r6
 963 004c FFF7FEFF 		bl	memset
 964              	.LVL96:
 196:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RxBaseAddr -> FiFoAddrPtr
 965              		.loc 1 196 3 is_stmt 1 view .LVU220
 196:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RxBaseAddr -> FiFoAddrPtr
 966              		.loc 1 196 10 is_stmt 0 view .LVU221
 967 0050 1021     		movs	r1, #16
 968 0052 2046     		mov	r0, r4
 969 0054 FFF7FEFF 		bl	SX1278_SPIRead
 970              	.LVL97:
 971 0058 0246     		mov	r2, r0
 972              	.LVL98:
 197:FML/Src/SX1278.c **** 
 973              		.loc 1 197 3 is_stmt 1 view .LVU222
 974 005a 0D21     		movs	r1, #13
 975 005c 2046     		mov	r0, r4
 976 005e FFF7FEFF 		bl	SX1278_SPIWrite
 977              	.LVL99:
 199:FML/Src/SX1278.c **** 			packet_size = module->packetLength;
 978              		.loc 1 199 3 view .LVU223
 199:FML/Src/SX1278.c **** 			packet_size = module->packetLength;
 979              		.loc 1 199 13 is_stmt 0 view .LVU224
 980 0062 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 199:FML/Src/SX1278.c **** 			packet_size = module->packetLength;
 981              		.loc 1 199 6 view .LVU225
 982 0064 63B9     		cbnz	r3, .L45
 200:FML/Src/SX1278.c **** 		} else {
 983              		.loc 1 200 4 is_stmt 1 view .LVU226
 200:FML/Src/SX1278.c **** 		} else {
 984              		.loc 1 200 16 is_stmt 0 view .LVU227
 985 0066 657D     		ldrb	r5, [r4, #21]	@ zero_extendqisi2
 986              	.LVL100:
 987              	.L46:
 205:FML/Src/SX1278.c **** 		module->readBytes = packet_size;
 988              		.loc 1 205 3 is_stmt 1 view .LVU228
 989 0068 2B46     		mov	r3, r5
 990 006a 3246     		mov	r2, r6
 991 006c 0021     		movs	r1, #0
 992 006e 2046     		mov	r0, r4
 993 0070 FFF7FEFF 		bl	SX1278_SPIBurstRead
 994              	.LVL101:
 206:FML/Src/SX1278.c **** 		SX1278_clearLoRaIrq(module);
 995              		.loc 1 206 3 view .LVU229
 206:FML/Src/SX1278.c **** 		SX1278_clearLoRaIrq(module);
 996              		.loc 1 206 21 is_stmt 0 view .LVU230
 997 0074 84F81751 		strb	r5, [r4, #279]
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 24


 207:FML/Src/SX1278.c **** 	}
 998              		.loc 1 207 3 is_stmt 1 view .LVU231
 999 0078 2046     		mov	r0, r4
 1000 007a FFF7FEFF 		bl	SX1278_clearLoRaIrq
 1001              	.LVL102:
 1002 007e C5E7     		b	.L44
 1003              	.LVL103:
 1004              	.L45:
 202:FML/Src/SX1278.c **** 		}
 1005              		.loc 1 202 4 view .LVU232
 202:FML/Src/SX1278.c **** 		}
 1006              		.loc 1 202 18 is_stmt 0 view .LVU233
 1007 0080 1321     		movs	r1, #19
 1008 0082 2046     		mov	r0, r4
 1009 0084 FFF7FEFF 		bl	SX1278_SPIRead
 1010              	.LVL104:
 1011 0088 0546     		mov	r5, r0
 1012              	.LVL105:
 202:FML/Src/SX1278.c **** 		}
 1013              		.loc 1 202 18 view .LVU234
 1014 008a EDE7     		b	.L46
 1015              	.L50:
 1016              		.align	2
 1017              	.L49:
 1018 008c 00000000 		.word	Lora_dev
 1019 0090 8BAFF88A 		.word	-1963413621
 1020 0094 0FEAA00E 		.word	245426703
 1021 0098 00000000 		.word	shell
 1022 009c 00000000 		.word	.LC0
 1023              		.cfi_endproc
 1024              	.LFE298:
 1026              		.section	.text.SX1278_LoRaEntryTx,"ax",%progbits
 1027              		.align	1
 1028              		.global	SX1278_LoRaEntryTx
 1029              		.syntax unified
 1030              		.thumb
 1031              		.thumb_func
 1033              	SX1278_LoRaEntryTx:
 1034              	.LVL106:
 1035              	.LFB299:
 213:FML/Src/SX1278.c **** 
 214:FML/Src/SX1278.c **** int SX1278_LoRaEntryTx(SX1278_t *module, uint8_t length, uint32_t timeout) {
 1036              		.loc 1 214 76 is_stmt 1 view -0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 0
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              		.loc 1 214 76 is_stmt 0 view .LVU236
 1041 0000 70B5     		push	{r4, r5, r6, lr}
 1042              	.LCFI16:
 1043              		.cfi_def_cfa_offset 16
 1044              		.cfi_offset 4, -16
 1045              		.cfi_offset 5, -12
 1046              		.cfi_offset 6, -8
 1047              		.cfi_offset 14, -4
 1048 0002 0546     		mov	r5, r0
 1049 0004 0E46     		mov	r6, r1
 1050 0006 1446     		mov	r4, r2
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 25


 215:FML/Src/SX1278.c **** 	uint8_t addr;
 1051              		.loc 1 215 2 is_stmt 1 view .LVU237
 216:FML/Src/SX1278.c **** 	uint8_t temp;
 1052              		.loc 1 216 2 view .LVU238
 217:FML/Src/SX1278.c **** 
 218:FML/Src/SX1278.c **** 	module->packetLength = length;
 1053              		.loc 1 218 2 view .LVU239
 1054              		.loc 1 218 23 is_stmt 0 view .LVU240
 1055 0008 4175     		strb	r1, [r0, #21]
 219:FML/Src/SX1278.c **** 
 220:FML/Src/SX1278.c **** 	SX1278_config(module); //setting base parameter
 1056              		.loc 1 220 2 is_stmt 1 view .LVU241
 1057 000a FFF7FEFF 		bl	SX1278_config
 1058              	.LVL107:
 221:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_PADAC, 0x87);	//Tx for 20dBm
 1059              		.loc 1 221 2 view .LVU242
 1060 000e 8722     		movs	r2, #135
 1061 0010 4D21     		movs	r1, #77
 1062 0012 2846     		mov	r0, r5
 1063 0014 FFF7FEFF 		bl	SX1278_SPIWrite
 1064              	.LVL108:
 222:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegHopPeriod, 0x00); //RegHopPeriod NO FHSS
 1065              		.loc 1 222 2 view .LVU243
 1066 0018 0022     		movs	r2, #0
 1067 001a 2421     		movs	r1, #36
 1068 001c 2846     		mov	r0, r5
 1069 001e FFF7FEFF 		bl	SX1278_SPIWrite
 1070              	.LVL109:
 223:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_DIOMAPPING1, 0x41); //DIO0=01, DIO1=00,DIO2=00, DIO3=01
 1071              		.loc 1 223 2 view .LVU244
 1072 0022 4122     		movs	r2, #65
 1073 0024 4021     		movs	r1, #64
 1074 0026 2846     		mov	r0, r5
 1075 0028 FFF7FEFF 		bl	SX1278_SPIWrite
 1076              	.LVL110:
 224:FML/Src/SX1278.c **** 	SX1278_clearLoRaIrq(module);
 1077              		.loc 1 224 2 view .LVU245
 1078 002c 2846     		mov	r0, r5
 1079 002e FFF7FEFF 		bl	SX1278_clearLoRaIrq
 1080              	.LVL111:
 225:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegIrqFlagsMask, 0xF7); //Open TxDone interrupt
 1081              		.loc 1 225 2 view .LVU246
 1082 0032 F722     		movs	r2, #247
 1083 0034 1121     		movs	r1, #17
 1084 0036 2846     		mov	r0, r5
 1085 0038 FFF7FEFF 		bl	SX1278_SPIWrite
 1086              	.LVL112:
 226:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPayloadLength, length); //RegPayloadLength 21byte
 1087              		.loc 1 226 2 view .LVU247
 1088 003c 3246     		mov	r2, r6
 1089 003e 2221     		movs	r1, #34
 1090 0040 2846     		mov	r0, r5
 1091 0042 FFF7FEFF 		bl	SX1278_SPIWrite
 1092              	.LVL113:
 227:FML/Src/SX1278.c **** 	addr = SX1278_SPIRead(module, LR_RegFifoTxBaseAddr); //RegFiFoTxBaseAddr
 1093              		.loc 1 227 2 view .LVU248
 1094              		.loc 1 227 9 is_stmt 0 view .LVU249
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 26


 1095 0046 0E21     		movs	r1, #14
 1096 0048 2846     		mov	r0, r5
 1097 004a FFF7FEFF 		bl	SX1278_SPIRead
 1098              	.LVL114:
 1099 004e 0246     		mov	r2, r0
 1100              	.LVL115:
 228:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RegFifoAddrPtr
 1101              		.loc 1 228 2 is_stmt 1 view .LVU250
 1102 0050 0D21     		movs	r1, #13
 1103 0052 2846     		mov	r0, r5
 1104 0054 FFF7FEFF 		bl	SX1278_SPIWrite
 1105              	.LVL116:
 1106              	.L54:
 229:FML/Src/SX1278.c **** 
 230:FML/Src/SX1278.c **** 	while (1) {
 1107              		.loc 1 230 2 view .LVU251
 231:FML/Src/SX1278.c **** 		temp = SX1278_SPIRead(module, LR_RegPayloadLength);
 1108              		.loc 1 231 3 view .LVU252
 1109              		.loc 1 231 10 is_stmt 0 view .LVU253
 1110 0058 2221     		movs	r1, #34
 1111 005a 2846     		mov	r0, r5
 1112 005c FFF7FEFF 		bl	SX1278_SPIRead
 1113              	.LVL117:
 232:FML/Src/SX1278.c **** 		if (temp == length) {
 1114              		.loc 1 232 3 is_stmt 1 view .LVU254
 1115              		.loc 1 232 6 is_stmt 0 view .LVU255
 1116 0060 8642     		cmp	r6, r0
 1117 0062 09D0     		beq	.L56
 233:FML/Src/SX1278.c **** 			module->status = TX;
 234:FML/Src/SX1278.c **** 			return 1;
 235:FML/Src/SX1278.c **** 		}
 236:FML/Src/SX1278.c **** 
 237:FML/Src/SX1278.c **** 		if (--timeout == 0) {
 1118              		.loc 1 237 3 is_stmt 1 view .LVU256
 1119              	.LVL118:
 1120              		.loc 1 237 6 is_stmt 0 view .LVU257
 1121 0064 013C     		subs	r4, r4, #1
 1122              	.LVL119:
 1123              		.loc 1 237 6 view .LVU258
 1124 0066 F7D1     		bne	.L54
 238:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 1125              		.loc 1 238 4 is_stmt 1 view .LVU259
 1126 0068 2868     		ldr	r0, [r5]
 1127              	.LVL120:
 1128              		.loc 1 238 4 is_stmt 0 view .LVU260
 1129 006a FFF7FEFF 		bl	SX1278_hw_Reset
 1130              	.LVL121:
 239:FML/Src/SX1278.c **** 			SX1278_config(module);
 1131              		.loc 1 239 4 is_stmt 1 view .LVU261
 1132 006e 2846     		mov	r0, r5
 1133 0070 FFF7FEFF 		bl	SX1278_config
 1134              	.LVL122:
 240:FML/Src/SX1278.c **** 			return 0;
 1135              		.loc 1 240 4 view .LVU262
 1136              		.loc 1 240 11 is_stmt 0 view .LVU263
 1137 0074 0020     		movs	r0, #0
 1138 0076 02E0     		b	.L51
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 27


 1139              	.LVL123:
 1140              	.L56:
 233:FML/Src/SX1278.c **** 			return 1;
 1141              		.loc 1 233 4 is_stmt 1 view .LVU264
 233:FML/Src/SX1278.c **** 			return 1;
 1142              		.loc 1 233 19 is_stmt 0 view .LVU265
 1143 0078 0223     		movs	r3, #2
 1144 007a AB75     		strb	r3, [r5, #22]
 234:FML/Src/SX1278.c **** 		}
 1145              		.loc 1 234 4 is_stmt 1 view .LVU266
 234:FML/Src/SX1278.c **** 		}
 1146              		.loc 1 234 11 is_stmt 0 view .LVU267
 1147 007c 0120     		movs	r0, #1
 1148              	.LVL124:
 1149              	.L51:
 241:FML/Src/SX1278.c **** 		}
 242:FML/Src/SX1278.c **** 	}
 243:FML/Src/SX1278.c **** }
 1150              		.loc 1 243 1 view .LVU268
 1151 007e 70BD     		pop	{r4, r5, r6, pc}
 1152              		.loc 1 243 1 view .LVU269
 1153              		.cfi_endproc
 1154              	.LFE299:
 1156              		.section	.text.SX1278_LoRaTxPacket,"ax",%progbits
 1157              		.align	1
 1158              		.global	SX1278_LoRaTxPacket
 1159              		.syntax unified
 1160              		.thumb
 1161              		.thumb_func
 1163              	SX1278_LoRaTxPacket:
 1164              	.LVL125:
 1165              	.LFB300:
 244:FML/Src/SX1278.c **** 
 245:FML/Src/SX1278.c **** int SX1278_LoRaTxPacket(SX1278_t *module, uint8_t *txBuffer, uint8_t length,
 246:FML/Src/SX1278.c **** 		uint32_t timeout) {
 1166              		.loc 1 246 21 is_stmt 1 view -0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 0
 1169              		@ frame_needed = 0, uses_anonymous_args = 0
 1170              		.loc 1 246 21 is_stmt 0 view .LVU271
 1171 0000 70B5     		push	{r4, r5, r6, lr}
 1172              	.LCFI17:
 1173              		.cfi_def_cfa_offset 16
 1174              		.cfi_offset 4, -16
 1175              		.cfi_offset 5, -12
 1176              		.cfi_offset 6, -8
 1177              		.cfi_offset 14, -4
 1178 0002 0546     		mov	r5, r0
 1179 0004 1C46     		mov	r4, r3
 247:FML/Src/SX1278.c **** 	SX1278_SPIBurstWrite(module, 0x00, txBuffer, length);
 1180              		.loc 1 247 2 is_stmt 1 view .LVU272
 1181 0006 1346     		mov	r3, r2
 1182              	.LVL126:
 1183              		.loc 1 247 2 is_stmt 0 view .LVU273
 1184 0008 0A46     		mov	r2, r1
 1185              	.LVL127:
 1186              		.loc 1 247 2 view .LVU274
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 28


 1187 000a 0021     		movs	r1, #0
 1188              	.LVL128:
 1189              		.loc 1 247 2 view .LVU275
 1190 000c FFF7FEFF 		bl	SX1278_SPIBurstWrite
 1191              	.LVL129:
 248:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x8b);	//Tx Mode
 1192              		.loc 1 248 2 is_stmt 1 view .LVU276
 1193 0010 8B22     		movs	r2, #139
 1194 0012 0121     		movs	r1, #1
 1195 0014 2846     		mov	r0, r5
 1196 0016 FFF7FEFF 		bl	SX1278_SPIWrite
 1197              	.LVL130:
 1198 001a 0FE0     		b	.L61
 1199              	.L63:
 249:FML/Src/SX1278.c **** 	while (1) {
 250:FML/Src/SX1278.c **** 		if (SX1278_hw_GetDIO0(module->hw)) { //if(Get_NIRQ()) //Packet send over
 251:FML/Src/SX1278.c **** 			SX1278_SPIRead(module, LR_RegIrqFlags);
 1200              		.loc 1 251 4 view .LVU277
 1201 001c 1221     		movs	r1, #18
 1202 001e 2846     		mov	r0, r5
 1203 0020 FFF7FEFF 		bl	SX1278_SPIRead
 1204              	.LVL131:
 252:FML/Src/SX1278.c **** 			SX1278_clearLoRaIrq(module); //Clear irq
 1205              		.loc 1 252 4 view .LVU278
 1206 0024 2846     		mov	r0, r5
 1207 0026 FFF7FEFF 		bl	SX1278_clearLoRaIrq
 1208              	.LVL132:
 253:FML/Src/SX1278.c **** 			SX1278_standby(module); //Entry Standby mode
 1209              		.loc 1 253 4 view .LVU279
 1210 002a 2846     		mov	r0, r5
 1211 002c FFF7FEFF 		bl	SX1278_standby
 1212              	.LVL133:
 254:FML/Src/SX1278.c **** 			return 1;
 1213              		.loc 1 254 4 view .LVU280
 1214              		.loc 1 254 11 is_stmt 0 view .LVU281
 1215 0030 0126     		movs	r6, #1
 1216              	.L57:
 255:FML/Src/SX1278.c **** 		}
 256:FML/Src/SX1278.c **** 
 257:FML/Src/SX1278.c **** 		if (--timeout == 0) {
 258:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 259:FML/Src/SX1278.c **** 			SX1278_config(module);
 260:FML/Src/SX1278.c **** 			return 0;
 261:FML/Src/SX1278.c **** 		}
 262:FML/Src/SX1278.c **** 		SX1278_hw_DelayMs(1);
 263:FML/Src/SX1278.c **** 	}
 264:FML/Src/SX1278.c **** }
 1217              		.loc 1 264 1 view .LVU282
 1218 0032 3046     		mov	r0, r6
 1219 0034 70BD     		pop	{r4, r5, r6, pc}
 1220              	.LVL134:
 1221              	.L60:
 262:FML/Src/SX1278.c **** 	}
 1222              		.loc 1 262 3 is_stmt 1 view .LVU283
 1223 0036 0120     		movs	r0, #1
 1224 0038 FFF7FEFF 		bl	SX1278_hw_DelayMs
 1225              	.LVL135:
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 29


 249:FML/Src/SX1278.c **** 		if (SX1278_hw_GetDIO0(module->hw)) { //if(Get_NIRQ()) //Packet send over
 1226              		.loc 1 249 8 view .LVU284
 1227              	.L61:
 249:FML/Src/SX1278.c **** 		if (SX1278_hw_GetDIO0(module->hw)) { //if(Get_NIRQ()) //Packet send over
 1228              		.loc 1 249 2 view .LVU285
 250:FML/Src/SX1278.c **** 			SX1278_SPIRead(module, LR_RegIrqFlags);
 1229              		.loc 1 250 3 view .LVU286
 250:FML/Src/SX1278.c **** 			SX1278_SPIRead(module, LR_RegIrqFlags);
 1230              		.loc 1 250 7 is_stmt 0 view .LVU287
 1231 003c 2868     		ldr	r0, [r5]
 1232 003e FFF7FEFF 		bl	SX1278_hw_GetDIO0
 1233              	.LVL136:
 250:FML/Src/SX1278.c **** 			SX1278_SPIRead(module, LR_RegIrqFlags);
 1234              		.loc 1 250 6 view .LVU288
 1235 0042 0646     		mov	r6, r0
 1236 0044 0028     		cmp	r0, #0
 1237 0046 E9D1     		bne	.L63
 257:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 1238              		.loc 1 257 3 is_stmt 1 view .LVU289
 1239              	.LVL137:
 257:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 1240              		.loc 1 257 6 is_stmt 0 view .LVU290
 1241 0048 013C     		subs	r4, r4, #1
 1242              	.LVL138:
 257:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 1243              		.loc 1 257 6 view .LVU291
 1244 004a F4D1     		bne	.L60
 258:FML/Src/SX1278.c **** 			SX1278_config(module);
 1245              		.loc 1 258 4 is_stmt 1 view .LVU292
 1246 004c 2868     		ldr	r0, [r5]
 1247 004e FFF7FEFF 		bl	SX1278_hw_Reset
 1248              	.LVL139:
 259:FML/Src/SX1278.c **** 			return 0;
 1249              		.loc 1 259 4 view .LVU293
 1250 0052 2846     		mov	r0, r5
 1251 0054 FFF7FEFF 		bl	SX1278_config
 1252              	.LVL140:
 260:FML/Src/SX1278.c **** 		}
 1253              		.loc 1 260 4 view .LVU294
 260:FML/Src/SX1278.c **** 		}
 1254              		.loc 1 260 11 is_stmt 0 view .LVU295
 1255 0058 EBE7     		b	.L57
 1256              		.cfi_endproc
 1257              	.LFE300:
 1259              		.section	.text.SX1278_init,"ax",%progbits
 1260              		.align	1
 1261              		.global	SX1278_init
 1262              		.syntax unified
 1263              		.thumb
 1264              		.thumb_func
 1266              	SX1278_init:
 1267              	.LVL141:
 1268              	.LFB301:
 265:FML/Src/SX1278.c **** 
 266:FML/Src/SX1278.c **** void SX1278_init(SX1278_t *module, uint64_t frequency, uint8_t power,
 267:FML/Src/SX1278.c **** 		uint8_t LoRa_SF, uint8_t LoRa_BW, uint8_t LoRa_CR,
 268:FML/Src/SX1278.c **** 		uint8_t LoRa_CRC_sum, uint8_t packetLength) {
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 30


 1269              		.loc 1 268 47 is_stmt 1 view -0
 1270              		.cfi_startproc
 1271              		@ args = 24, pretend = 0, frame = 0
 1272              		@ frame_needed = 0, uses_anonymous_args = 0
 1273              		.loc 1 268 47 is_stmt 0 view .LVU297
 1274 0000 70B5     		push	{r4, r5, r6, lr}
 1275              	.LCFI18:
 1276              		.cfi_def_cfa_offset 16
 1277              		.cfi_offset 4, -16
 1278              		.cfi_offset 5, -12
 1279              		.cfi_offset 6, -8
 1280              		.cfi_offset 14, -4
 1281 0002 0446     		mov	r4, r0
 1282 0004 1646     		mov	r6, r2
 1283 0006 1D46     		mov	r5, r3
 269:FML/Src/SX1278.c **** 	SX1278_hw_init(module->hw);
 1284              		.loc 1 269 2 is_stmt 1 view .LVU298
 1285 0008 0068     		ldr	r0, [r0]
 1286              	.LVL142:
 1287              		.loc 1 269 2 is_stmt 0 view .LVU299
 1288 000a FFF7FEFF 		bl	SX1278_hw_init
 1289              	.LVL143:
 270:FML/Src/SX1278.c **** 	module->frequency = frequency;
 1290              		.loc 1 270 2 is_stmt 1 view .LVU300
 1291              		.loc 1 270 20 is_stmt 0 view .LVU301
 1292 000e A660     		str	r6, [r4, #8]
 1293 0010 E560     		str	r5, [r4, #12]
 271:FML/Src/SX1278.c **** 	module->power = power;
 1294              		.loc 1 271 2 is_stmt 1 view .LVU302
 1295              		.loc 1 271 16 is_stmt 0 view .LVU303
 1296 0012 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 1297 0016 2374     		strb	r3, [r4, #16]
 272:FML/Src/SX1278.c **** 	module->LoRa_SF = LoRa_SF;
 1298              		.loc 1 272 2 is_stmt 1 view .LVU304
 1299              		.loc 1 272 18 is_stmt 0 view .LVU305
 1300 0018 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 1301 001c 6374     		strb	r3, [r4, #17]
 273:FML/Src/SX1278.c **** 	module->LoRa_BW = LoRa_BW;
 1302              		.loc 1 273 2 is_stmt 1 view .LVU306
 1303              		.loc 1 273 18 is_stmt 0 view .LVU307
 1304 001e 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 1305 0022 A374     		strb	r3, [r4, #18]
 274:FML/Src/SX1278.c **** 	module->LoRa_CR = LoRa_CR;
 1306              		.loc 1 274 2 is_stmt 1 view .LVU308
 1307              		.loc 1 274 18 is_stmt 0 view .LVU309
 1308 0024 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 1309 0028 E374     		strb	r3, [r4, #19]
 275:FML/Src/SX1278.c **** 	module->LoRa_CRC_sum = LoRa_CRC_sum;
 1310              		.loc 1 275 2 is_stmt 1 view .LVU310
 1311              		.loc 1 275 23 is_stmt 0 view .LVU311
 1312 002a 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 1313 002e 2375     		strb	r3, [r4, #20]
 276:FML/Src/SX1278.c **** 	module->packetLength = packetLength;
 1314              		.loc 1 276 2 is_stmt 1 view .LVU312
 1315              		.loc 1 276 23 is_stmt 0 view .LVU313
 1316 0030 9DF82430 		ldrb	r3, [sp, #36]	@ zero_extendqisi2
 1317 0034 6375     		strb	r3, [r4, #21]
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 31


 277:FML/Src/SX1278.c **** 	SX1278_config(module);
 1318              		.loc 1 277 2 is_stmt 1 view .LVU314
 1319 0036 2046     		mov	r0, r4
 1320 0038 FFF7FEFF 		bl	SX1278_config
 1321              	.LVL144:
 278:FML/Src/SX1278.c **** }
 1322              		.loc 1 278 1 is_stmt 0 view .LVU315
 1323 003c 70BD     		pop	{r4, r5, r6, pc}
 1324              		.loc 1 278 1 view .LVU316
 1325              		.cfi_endproc
 1326              	.LFE301:
 1328              		.section	.text.SX1278_transmit,"ax",%progbits
 1329              		.align	1
 1330              		.global	SX1278_transmit
 1331              		.syntax unified
 1332              		.thumb
 1333              		.thumb_func
 1335              	SX1278_transmit:
 1336              	.LVL145:
 1337              	.LFB302:
 279:FML/Src/SX1278.c **** 
 280:FML/Src/SX1278.c **** int SX1278_transmit(SX1278_t *module, uint8_t *txBuf, uint8_t length,
 281:FML/Src/SX1278.c **** 		uint32_t timeout) {
 1338              		.loc 1 281 21 is_stmt 1 view -0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 0
 1341              		@ frame_needed = 0, uses_anonymous_args = 0
 1342              		.loc 1 281 21 is_stmt 0 view .LVU318
 1343 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1344              	.LCFI19:
 1345              		.cfi_def_cfa_offset 24
 1346              		.cfi_offset 3, -24
 1347              		.cfi_offset 4, -20
 1348              		.cfi_offset 5, -16
 1349              		.cfi_offset 6, -12
 1350              		.cfi_offset 7, -8
 1351              		.cfi_offset 14, -4
 1352 0002 0646     		mov	r6, r0
 1353 0004 0F46     		mov	r7, r1
 1354 0006 1446     		mov	r4, r2
 1355 0008 1D46     		mov	r5, r3
 282:FML/Src/SX1278.c **** 	if (SX1278_LoRaEntryTx(module, length, timeout)) {
 1356              		.loc 1 282 2 is_stmt 1 view .LVU319
 1357              		.loc 1 282 6 is_stmt 0 view .LVU320
 1358 000a 1A46     		mov	r2, r3
 1359              	.LVL146:
 1360              		.loc 1 282 6 view .LVU321
 1361 000c 2146     		mov	r1, r4
 1362              	.LVL147:
 1363              		.loc 1 282 6 view .LVU322
 1364 000e FFF7FEFF 		bl	SX1278_LoRaEntryTx
 1365              	.LVL148:
 1366              		.loc 1 282 5 view .LVU323
 1367 0012 00B9     		cbnz	r0, .L69
 1368              	.L66:
 283:FML/Src/SX1278.c **** 		return SX1278_LoRaTxPacket(module, txBuf, length, timeout);
 284:FML/Src/SX1278.c **** 	}
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 32


 285:FML/Src/SX1278.c **** 	return 0;
 286:FML/Src/SX1278.c **** }
 1369              		.loc 1 286 1 view .LVU324
 1370 0014 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1371              	.LVL149:
 1372              	.L69:
 283:FML/Src/SX1278.c **** 		return SX1278_LoRaTxPacket(module, txBuf, length, timeout);
 1373              		.loc 1 283 3 is_stmt 1 view .LVU325
 283:FML/Src/SX1278.c **** 		return SX1278_LoRaTxPacket(module, txBuf, length, timeout);
 1374              		.loc 1 283 10 is_stmt 0 view .LVU326
 1375 0016 2B46     		mov	r3, r5
 1376 0018 2246     		mov	r2, r4
 1377 001a 3946     		mov	r1, r7
 1378 001c 3046     		mov	r0, r6
 1379 001e FFF7FEFF 		bl	SX1278_LoRaTxPacket
 1380              	.LVL150:
 1381 0022 F7E7     		b	.L66
 1382              		.cfi_endproc
 1383              	.LFE302:
 1385              		.section	.text.SX1278_receive,"ax",%progbits
 1386              		.align	1
 1387              		.global	SX1278_receive
 1388              		.syntax unified
 1389              		.thumb
 1390              		.thumb_func
 1392              	SX1278_receive:
 1393              	.LVL151:
 1394              	.LFB303:
 287:FML/Src/SX1278.c **** 
 288:FML/Src/SX1278.c **** int SX1278_receive(SX1278_t *module, uint8_t length, uint32_t timeout) {
 1395              		.loc 1 288 72 is_stmt 1 view -0
 1396              		.cfi_startproc
 1397              		@ args = 0, pretend = 0, frame = 0
 1398              		@ frame_needed = 0, uses_anonymous_args = 0
 1399              		.loc 1 288 72 is_stmt 0 view .LVU328
 1400 0000 08B5     		push	{r3, lr}
 1401              	.LCFI20:
 1402              		.cfi_def_cfa_offset 8
 1403              		.cfi_offset 3, -8
 1404              		.cfi_offset 14, -4
 289:FML/Src/SX1278.c **** 	return SX1278_LoRaEntryRx(module, length, timeout);
 1405              		.loc 1 289 2 is_stmt 1 view .LVU329
 1406              		.loc 1 289 9 is_stmt 0 view .LVU330
 1407 0002 FFF7FEFF 		bl	SX1278_LoRaEntryRx
 1408              	.LVL152:
 290:FML/Src/SX1278.c **** }
 1409              		.loc 1 290 1 view .LVU331
 1410 0006 08BD     		pop	{r3, pc}
 1411              		.cfi_endproc
 1412              	.LFE303:
 1414              		.section	.rodata.LORA_Send.str1.4,"aMS",%progbits,1
 1415              		.align	2
 1416              	.LC1:
 1417 0000 6C6F7261 		.ascii	"lora %d transmit success\015\012\000"
 1417      20256420 
 1417      7472616E 
 1417      736D6974 
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 33


 1417      20737563 
 1418              		.section	.text.LORA_Send,"ax",%progbits
 1419              		.align	1
 1420              		.global	LORA_Send
 1421              		.syntax unified
 1422              		.thumb
 1423              		.thumb_func
 1425              	LORA_Send:
 1426              	.LVL153:
 1427              	.LFB308:
 291:FML/Src/SX1278.c **** 
 292:FML/Src/SX1278.c **** uint8_t SX1278_available(SX1278_t *module) {
 293:FML/Src/SX1278.c **** 	return SX1278_LoRaRxPacket(module);
 294:FML/Src/SX1278.c **** }
 295:FML/Src/SX1278.c **** 
 296:FML/Src/SX1278.c **** uint8_t SX1278_read(SX1278_t *module, uint8_t *rxBuf, uint8_t length) {
 297:FML/Src/SX1278.c **** 	if (length != module->readBytes)
 298:FML/Src/SX1278.c **** 		length = module->readBytes;
 299:FML/Src/SX1278.c **** 	memcpy(rxBuf, module->rxBuffer, length);
 300:FML/Src/SX1278.c **** 	rxBuf[length] = '\0';
 301:FML/Src/SX1278.c **** 	module->readBytes = 0;
 302:FML/Src/SX1278.c **** 	return length;
 303:FML/Src/SX1278.c **** }
 304:FML/Src/SX1278.c **** 
 305:FML/Src/SX1278.c **** uint8_t SX1278_RSSI_LoRa(SX1278_t *module) {
 306:FML/Src/SX1278.c **** 	uint32_t temp = 10;
 307:FML/Src/SX1278.c **** 	temp = SX1278_SPIRead(module, LR_RegRssiValue); //Read RegRssiValue, Rssi value
 308:FML/Src/SX1278.c **** 	temp = temp + 127 - 137; //127:Max RSSI, 137:RSSI offset
 309:FML/Src/SX1278.c **** 	return (uint8_t) temp;
 310:FML/Src/SX1278.c **** }
 311:FML/Src/SX1278.c **** 
 312:FML/Src/SX1278.c **** uint8_t SX1278_RSSI(SX1278_t *module) {
 313:FML/Src/SX1278.c **** 	uint8_t temp = 0xff;
 314:FML/Src/SX1278.c **** 	temp = SX1278_SPIRead(module, RegRssiValue);
 315:FML/Src/SX1278.c **** 	temp = 127 - (temp >> 1);	//127:Max RSSI
 316:FML/Src/SX1278.c **** 	return temp;
 317:FML/Src/SX1278.c **** }
 318:FML/Src/SX1278.c **** 
 319:FML/Src/SX1278.c **** /**
 320:FML/Src/SX1278.c ****  * @brief 
 321:FML/Src/SX1278.c ****  * 
 322:FML/Src/SX1278.c ****  * @param fd 
 323:FML/Src/SX1278.c ****  * @param tx_buff 
 324:FML/Src/SX1278.c ****  * @param expect_reply 
 325:FML/Src/SX1278.c ****  * @param timeout 
 326:FML/Src/SX1278.c ****  */
 327:FML/Src/SX1278.c **** void LORA_Send(char fd,char *tx_buff,uint32_t timeout)
 328:FML/Src/SX1278.c **** {
 1428              		.loc 1 328 1 is_stmt 1 view -0
 1429              		.cfi_startproc
 1430              		@ args = 0, pretend = 0, frame = 0
 1431              		@ frame_needed = 0, uses_anonymous_args = 0
 1432              		.loc 1 328 1 is_stmt 0 view .LVU333
 1433 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1434              	.LCFI21:
 1435              		.cfi_def_cfa_offset 24
 1436              		.cfi_offset 4, -24
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 34


 1437              		.cfi_offset 5, -20
 1438              		.cfi_offset 6, -16
 1439              		.cfi_offset 7, -12
 1440              		.cfi_offset 8, -8
 1441              		.cfi_offset 14, -4
 1442 0004 0746     		mov	r7, r0
 1443 0006 0D46     		mov	r5, r1
 1444 0008 9046     		mov	r8, r2
 329:FML/Src/SX1278.c ****     uint8_t *tx_data,len=0;
 1445              		.loc 1 329 5 is_stmt 1 view .LVU334
 1446              	.LVL154:
 330:FML/Src/SX1278.c ****     len = strlen(tx_buff);
 1447              		.loc 1 330 5 view .LVU335
 1448              		.loc 1 330 11 is_stmt 0 view .LVU336
 1449 000a 0846     		mov	r0, r1
 1450              	.LVL155:
 1451              		.loc 1 330 11 view .LVU337
 1452 000c FFF7FEFF 		bl	strlen
 1453              	.LVL156:
 1454              		.loc 1 330 9 view .LVU338
 1455 0010 C4B2     		uxtb	r4, r0
 1456              	.LVL157:
 331:FML/Src/SX1278.c **** 
 332:FML/Src/SX1278.c ****     tx_data = (char *)malloc((len)*sizeof(uint8_t));
 1457              		.loc 1 332 5 is_stmt 1 view .LVU339
 1458              		.loc 1 332 23 is_stmt 0 view .LVU340
 1459 0012 2046     		mov	r0, r4
 1460 0014 FFF7FEFF 		bl	malloc
 1461              	.LVL158:
 1462 0018 0646     		mov	r6, r0
 1463              	.LVL159:
 333:FML/Src/SX1278.c ****     memcpy(tx_data,tx_buff,len);
 1464              		.loc 1 333 5 is_stmt 1 view .LVU341
 1465 001a 2246     		mov	r2, r4
 1466 001c 2946     		mov	r1, r5
 1467 001e FFF7FEFF 		bl	memcpy
 1468              	.LVL160:
 334:FML/Src/SX1278.c **** 
 335:FML/Src/SX1278.c ****     if(SX1278_transmit(&Lora_dev[fd],tx_data,len,timeout))
 1469              		.loc 1 335 5 view .LVU342
 1470              		.loc 1 335 8 is_stmt 0 view .LVU343
 1471 0022 4FF48C73 		mov	r3, #280
 1472 0026 0D4D     		ldr	r5, .L76
 1473              	.LVL161:
 1474              		.loc 1 335 8 view .LVU344
 1475 0028 03FB0755 		mla	r5, r3, r7, r5
 1476 002c 4346     		mov	r3, r8
 1477 002e 2246     		mov	r2, r4
 1478 0030 3146     		mov	r1, r6
 1479 0032 2846     		mov	r0, r5
 1480 0034 FFF7FEFF 		bl	SX1278_transmit
 1481              	.LVL162:
 1482              		.loc 1 335 7 view .LVU345
 1483 0038 48B9     		cbnz	r0, .L75
 1484              	.L73:
 336:FML/Src/SX1278.c **** 		shellPrint(&shell,"lora %d transmit success\r\n",fd);
 337:FML/Src/SX1278.c ****     free(tx_data);
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 35


 1485              		.loc 1 337 5 is_stmt 1 view .LVU346
 1486 003a 3046     		mov	r0, r6
 1487 003c FFF7FEFF 		bl	free
 1488              	.LVL163:
 338:FML/Src/SX1278.c ****     tx_data = NULL;
 1489              		.loc 1 338 5 view .LVU347
 339:FML/Src/SX1278.c ****     SX1278_receive(&Lora_dev[fd],100,100);
 1490              		.loc 1 339 5 view .LVU348
 1491 0040 6422     		movs	r2, #100
 1492 0042 1146     		mov	r1, r2
 1493 0044 2846     		mov	r0, r5
 1494 0046 FFF7FEFF 		bl	SX1278_receive
 1495              	.LVL164:
 340:FML/Src/SX1278.c **** }
 1496              		.loc 1 340 1 is_stmt 0 view .LVU349
 1497 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1498              	.LVL165:
 1499              	.L75:
 336:FML/Src/SX1278.c ****     free(tx_data);
 1500              		.loc 1 336 3 is_stmt 1 view .LVU350
 1501 004e 3A46     		mov	r2, r7
 1502 0050 0349     		ldr	r1, .L76+4
 1503 0052 0448     		ldr	r0, .L76+8
 1504 0054 FFF7FEFF 		bl	shellPrint
 1505              	.LVL166:
 1506 0058 EFE7     		b	.L73
 1507              	.L77:
 1508 005a 00BF     		.align	2
 1509              	.L76:
 1510 005c 00000000 		.word	Lora_dev
 1511 0060 00000000 		.word	.LC1
 1512 0064 00000000 		.word	shell
 1513              		.cfi_endproc
 1514              	.LFE308:
 1516              		.section	.text.SX1278_available,"ax",%progbits
 1517              		.align	1
 1518              		.global	SX1278_available
 1519              		.syntax unified
 1520              		.thumb
 1521              		.thumb_func
 1523              	SX1278_available:
 1524              	.LVL167:
 1525              	.LFB304:
 292:FML/Src/SX1278.c **** 	return SX1278_LoRaRxPacket(module);
 1526              		.loc 1 292 44 view -0
 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 0
 1529              		@ frame_needed = 0, uses_anonymous_args = 0
 292:FML/Src/SX1278.c **** 	return SX1278_LoRaRxPacket(module);
 1530              		.loc 1 292 44 is_stmt 0 view .LVU352
 1531 0000 08B5     		push	{r3, lr}
 1532              	.LCFI22:
 1533              		.cfi_def_cfa_offset 8
 1534              		.cfi_offset 3, -8
 1535              		.cfi_offset 14, -4
 293:FML/Src/SX1278.c **** }
 1536              		.loc 1 293 2 is_stmt 1 view .LVU353
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 36


 293:FML/Src/SX1278.c **** }
 1537              		.loc 1 293 9 is_stmt 0 view .LVU354
 1538 0002 FFF7FEFF 		bl	SX1278_LoRaRxPacket
 1539              	.LVL168:
 294:FML/Src/SX1278.c **** 
 1540              		.loc 1 294 1 view .LVU355
 1541 0006 08BD     		pop	{r3, pc}
 1542              		.cfi_endproc
 1543              	.LFE304:
 1545              		.section	.text.SX1278_read,"ax",%progbits
 1546              		.align	1
 1547              		.global	SX1278_read
 1548              		.syntax unified
 1549              		.thumb
 1550              		.thumb_func
 1552              	SX1278_read:
 1553              	.LVL169:
 1554              	.LFB305:
 296:FML/Src/SX1278.c **** 	if (length != module->readBytes)
 1555              		.loc 1 296 71 is_stmt 1 view -0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 0
 1558              		@ frame_needed = 0, uses_anonymous_args = 0
 296:FML/Src/SX1278.c **** 	if (length != module->readBytes)
 1559              		.loc 1 296 71 is_stmt 0 view .LVU357
 1560 0000 70B5     		push	{r4, r5, r6, lr}
 1561              	.LCFI23:
 1562              		.cfi_def_cfa_offset 16
 1563              		.cfi_offset 4, -16
 1564              		.cfi_offset 5, -12
 1565              		.cfi_offset 6, -8
 1566              		.cfi_offset 14, -4
 1567 0002 0446     		mov	r4, r0
 1568 0004 0E46     		mov	r6, r1
 297:FML/Src/SX1278.c **** 		length = module->readBytes;
 1569              		.loc 1 297 2 is_stmt 1 view .LVU358
 297:FML/Src/SX1278.c **** 		length = module->readBytes;
 1570              		.loc 1 297 22 is_stmt 0 view .LVU359
 1571 0006 90F81751 		ldrb	r5, [r0, #279]	@ zero_extendqisi2
 297:FML/Src/SX1278.c **** 		length = module->readBytes;
 1572              		.loc 1 297 5 view .LVU360
 1573 000a 9542     		cmp	r5, r2
 1574 000c 0BD0     		beq	.L83
 1575              	.L81:
 1576              	.LVL170:
 299:FML/Src/SX1278.c **** 	rxBuf[length] = '\0';
 1577              		.loc 1 299 2 is_stmt 1 view .LVU361
 1578 000e 2A46     		mov	r2, r5
 1579 0010 04F11701 		add	r1, r4, #23
 1580              	.LVL171:
 299:FML/Src/SX1278.c **** 	rxBuf[length] = '\0';
 1581              		.loc 1 299 2 is_stmt 0 view .LVU362
 1582 0014 3046     		mov	r0, r6
 1583              	.LVL172:
 299:FML/Src/SX1278.c **** 	rxBuf[length] = '\0';
 1584              		.loc 1 299 2 view .LVU363
 1585 0016 FFF7FEFF 		bl	memcpy
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 37


 1586              	.LVL173:
 300:FML/Src/SX1278.c **** 	module->readBytes = 0;
 1587              		.loc 1 300 2 is_stmt 1 view .LVU364
 300:FML/Src/SX1278.c **** 	module->readBytes = 0;
 1588              		.loc 1 300 16 is_stmt 0 view .LVU365
 1589 001a 0023     		movs	r3, #0
 1590 001c 7355     		strb	r3, [r6, r5]
 301:FML/Src/SX1278.c **** 	return length;
 1591              		.loc 1 301 2 is_stmt 1 view .LVU366
 301:FML/Src/SX1278.c **** 	return length;
 1592              		.loc 1 301 20 is_stmt 0 view .LVU367
 1593 001e 84F81731 		strb	r3, [r4, #279]
 302:FML/Src/SX1278.c **** }
 1594              		.loc 1 302 2 is_stmt 1 view .LVU368
 303:FML/Src/SX1278.c **** 
 1595              		.loc 1 303 1 is_stmt 0 view .LVU369
 1596 0022 2846     		mov	r0, r5
 1597 0024 70BD     		pop	{r4, r5, r6, pc}
 1598              	.LVL174:
 1599              	.L83:
 297:FML/Src/SX1278.c **** 		length = module->readBytes;
 1600              		.loc 1 297 5 view .LVU370
 1601 0026 1546     		mov	r5, r2
 1602 0028 F1E7     		b	.L81
 1603              		.cfi_endproc
 1604              	.LFE305:
 1606              		.section	.text.SX1278_RSSI_LoRa,"ax",%progbits
 1607              		.align	1
 1608              		.global	SX1278_RSSI_LoRa
 1609              		.syntax unified
 1610              		.thumb
 1611              		.thumb_func
 1613              	SX1278_RSSI_LoRa:
 1614              	.LVL175:
 1615              	.LFB306:
 305:FML/Src/SX1278.c **** 	uint32_t temp = 10;
 1616              		.loc 1 305 44 is_stmt 1 view -0
 1617              		.cfi_startproc
 1618              		@ args = 0, pretend = 0, frame = 0
 1619              		@ frame_needed = 0, uses_anonymous_args = 0
 305:FML/Src/SX1278.c **** 	uint32_t temp = 10;
 1620              		.loc 1 305 44 is_stmt 0 view .LVU372
 1621 0000 08B5     		push	{r3, lr}
 1622              	.LCFI24:
 1623              		.cfi_def_cfa_offset 8
 1624              		.cfi_offset 3, -8
 1625              		.cfi_offset 14, -4
 306:FML/Src/SX1278.c **** 	temp = SX1278_SPIRead(module, LR_RegRssiValue); //Read RegRssiValue, Rssi value
 1626              		.loc 1 306 2 is_stmt 1 view .LVU373
 1627              	.LVL176:
 307:FML/Src/SX1278.c **** 	temp = temp + 127 - 137; //127:Max RSSI, 137:RSSI offset
 1628              		.loc 1 307 2 view .LVU374
 307:FML/Src/SX1278.c **** 	temp = temp + 127 - 137; //127:Max RSSI, 137:RSSI offset
 1629              		.loc 1 307 9 is_stmt 0 view .LVU375
 1630 0002 1B21     		movs	r1, #27
 1631 0004 FFF7FEFF 		bl	SX1278_SPIRead
 1632              	.LVL177:
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 38


 308:FML/Src/SX1278.c **** 	return (uint8_t) temp;
 1633              		.loc 1 308 2 is_stmt 1 view .LVU376
 309:FML/Src/SX1278.c **** }
 1634              		.loc 1 309 2 view .LVU377
 309:FML/Src/SX1278.c **** }
 1635              		.loc 1 309 9 is_stmt 0 view .LVU378
 1636 0008 0A38     		subs	r0, r0, #10
 1637              	.LVL178:
 310:FML/Src/SX1278.c **** 
 1638              		.loc 1 310 1 view .LVU379
 1639 000a C0B2     		uxtb	r0, r0
 1640 000c 08BD     		pop	{r3, pc}
 1641              		.cfi_endproc
 1642              	.LFE306:
 1644              		.section	.text.SX1278_RSSI,"ax",%progbits
 1645              		.align	1
 1646              		.global	SX1278_RSSI
 1647              		.syntax unified
 1648              		.thumb
 1649              		.thumb_func
 1651              	SX1278_RSSI:
 1652              	.LVL179:
 1653              	.LFB307:
 312:FML/Src/SX1278.c **** 	uint8_t temp = 0xff;
 1654              		.loc 1 312 39 is_stmt 1 view -0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 0
 1657              		@ frame_needed = 0, uses_anonymous_args = 0
 312:FML/Src/SX1278.c **** 	uint8_t temp = 0xff;
 1658              		.loc 1 312 39 is_stmt 0 view .LVU381
 1659 0000 08B5     		push	{r3, lr}
 1660              	.LCFI25:
 1661              		.cfi_def_cfa_offset 8
 1662              		.cfi_offset 3, -8
 1663              		.cfi_offset 14, -4
 313:FML/Src/SX1278.c **** 	temp = SX1278_SPIRead(module, RegRssiValue);
 1664              		.loc 1 313 2 is_stmt 1 view .LVU382
 1665              	.LVL180:
 314:FML/Src/SX1278.c **** 	temp = 127 - (temp >> 1);	//127:Max RSSI
 1666              		.loc 1 314 2 view .LVU383
 314:FML/Src/SX1278.c **** 	temp = 127 - (temp >> 1);	//127:Max RSSI
 1667              		.loc 1 314 9 is_stmt 0 view .LVU384
 1668 0002 1121     		movs	r1, #17
 1669 0004 FFF7FEFF 		bl	SX1278_SPIRead
 1670              	.LVL181:
 315:FML/Src/SX1278.c **** 	return temp;
 1671              		.loc 1 315 2 is_stmt 1 view .LVU385
 315:FML/Src/SX1278.c **** 	return temp;
 1672              		.loc 1 315 13 is_stmt 0 view .LVU386
 1673 0008 C0F34700 		ubfx	r0, r0, #1, #8
 1674              	.LVL182:
 315:FML/Src/SX1278.c **** 	return temp;
 1675              		.loc 1 315 7 view .LVU387
 1676 000c C0F17F00 		rsb	r0, r0, #127
 1677              	.LVL183:
 316:FML/Src/SX1278.c **** }
 1678              		.loc 1 316 2 is_stmt 1 view .LVU388
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 39


 317:FML/Src/SX1278.c **** 
 1679              		.loc 1 317 1 is_stmt 0 view .LVU389
 1680 0010 C0B2     		uxtb	r0, r0
 317:FML/Src/SX1278.c **** 
 1681              		.loc 1 317 1 view .LVU390
 1682 0012 08BD     		pop	{r3, pc}
 1683              		.cfi_endproc
 1684              	.LFE307:
 1686              		.global	shellCommandlora_send
 1687              		.section	shellCommand,"a"
 1690              	shellCommandlora_send:
 1691 0000 00210000 		.4byte	8448
 1692 0004 00000000 		.4byte	shellCmdlora_send
 1693 0008 00000000 		.4byte	LORA_Send
 1694 000c 00000000 		.4byte	shellDesclora_send
 1695              		.global	shellDesclora_send
 1696              		.section	.rodata.shellDesclora_send,"a"
 1697              		.align	2
 1700              	shellDesclora_send:
 1701 0000 65633278 		.ascii	"ec2x test\000"
 1701      20746573 
 1701      7400
 1702              		.global	shellCmdlora_send
 1703              		.section	.rodata.shellCmdlora_send,"a"
 1704              		.align	2
 1707              	shellCmdlora_send:
 1708 0000 6C6F7261 		.ascii	"lora_send\000"
 1708      5F73656E 
 1708      6400
 1709              		.global	Lora_dev
 1710              		.section	.data.Lora_dev,"aw"
 1711              		.align	3
 1714              	Lora_dev:
 1715 0000 00000000 		.word	lora_dev_hw
 1716 0004 00000000 		.space	4
 1717 0008 40170C1A 		.word	437000000
 1718 000c 00000000 		.word	0
 1719 0010 14       		.byte	20
 1720 0011 05       		.byte	5
 1721 0012 02       		.byte	2
 1722 0013 01       		.byte	1
 1723 0014 00       		.byte	0
 1724 0015 00       		.byte	0
 1725 0016 00000000 		.space	257
 1725      00000000 
 1725      00000000 
 1725      00000000 
 1725      00000000 
 1726 0117 00       		.byte	0
 1727              		.section	.rodata.SX1278_CRC_Sum,"a"
 1728              		.align	2
 1731              	SX1278_CRC_Sum:
 1732 0000 0100     		.ascii	"\001\000"
 1733              		.section	.rodata.SX1278_CodingRate,"a"
 1734              		.align	2
 1737              	SX1278_CodingRate:
 1738 0000 01020304 		.ascii	"\001\002\003\004"
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 40


 1739              		.section	.rodata.SX1278_LoRaBandwidth,"a"
 1740              		.align	2
 1743              	SX1278_LoRaBandwidth:
 1744 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011"
 1744      04050607 
 1744      0809
 1745              		.section	.rodata.SX1278_SpreadFactor,"a"
 1746              		.align	2
 1749              	SX1278_SpreadFactor:
 1750 0000 06070809 		.ascii	"\006\007\010\011\012\013\014"
 1750      0A0B0C
 1751              		.section	.rodata.SX1278_Power,"a"
 1752              		.align	2
 1755              	SX1278_Power:
 1756 0000 FFFCF9F6 		.ascii	"\377\374\371\366"
 1757              		.text
 1758              	.Letext0:
 1759              		.file 2 "/Applications/ArmGNUToolchain/12.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 1760              		.file 3 "/Applications/ArmGNUToolchain/12.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 1761              		.file 4 "HAL/Inc/SX1278_hw.h"
 1762              		.file 5 "FML/Inc/SX1278.h"
 1763              		.file 6 "/Applications/ArmGNUToolchain/12.3.rel1/arm-none-eabi/lib/gcc/arm-none-eabi/12.3.1/includ
 1764              		.file 7 "ThirdParty/Letter-shell/Inc/shell.h"
 1765              		.file 8 "ThirdParty/Letter-shell/Inc/shell_port.h"
 1766              		.file 9 "/Applications/ArmGNUToolchain/12.3.rel1/arm-none-eabi/arm-none-eabi/include/string.h"
 1767              		.file 10 "<built-in>"
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 41


DEFINED SYMBOLS
                            *ABS*:00000000 SX1278.c
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:21     .text.SX1278_SPIRead:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:27     .text.SX1278_SPIRead:00000000 SX1278_SPIRead
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:71     .text.SX1278_SPIWrite:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:77     .text.SX1278_SPIWrite:00000000 SX1278_SPIWrite
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:126    .text.SX1278_SPIBurstRead:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:132    .text.SX1278_SPIBurstRead:00000000 SX1278_SPIBurstRead
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:219    .text.SX1278_SPIBurstWrite:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:225    .text.SX1278_SPIBurstWrite:00000000 SX1278_SPIBurstWrite
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:310    .text.SX1278_standby:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:316    .text.SX1278_standby:00000000 SX1278_standby
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:346    .text.SX1278_sleep:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:352    .text.SX1278_sleep:00000000 SX1278_sleep
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:382    .text.SX1278_entryLoRa:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:388    .text.SX1278_entryLoRa:00000000 SX1278_entryLoRa
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:413    .text.SX1278_config:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:419    .text.SX1278_config:00000000 SX1278_config
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:708    .text.SX1278_config:00000174 $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1755   .rodata.SX1278_Power:00000000 SX1278_Power
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1749   .rodata.SX1278_SpreadFactor:00000000 SX1278_SpreadFactor
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1743   .rodata.SX1278_LoRaBandwidth:00000000 SX1278_LoRaBandwidth
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1737   .rodata.SX1278_CodingRate:00000000 SX1278_CodingRate
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1731   .rodata.SX1278_CRC_Sum:00000000 SX1278_CRC_Sum
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:718    .text.SX1278_clearLoRaIrq:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:724    .text.SX1278_clearLoRaIrq:00000000 SX1278_clearLoRaIrq
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:748    .text.SX1278_LoRaEntryRx:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:754    .text.SX1278_LoRaEntryRx:00000000 SX1278_LoRaEntryRx
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:889    .rodata.SX1278_LoRaRxPacket.str1.4:00000000 $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:893    .text.SX1278_LoRaRxPacket:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:899    .text.SX1278_LoRaRxPacket:00000000 SX1278_LoRaRxPacket
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1018   .text.SX1278_LoRaRxPacket:0000008c $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1714   .data.Lora_dev:00000000 Lora_dev
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1027   .text.SX1278_LoRaEntryTx:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1033   .text.SX1278_LoRaEntryTx:00000000 SX1278_LoRaEntryTx
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1157   .text.SX1278_LoRaTxPacket:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1163   .text.SX1278_LoRaTxPacket:00000000 SX1278_LoRaTxPacket
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1260   .text.SX1278_init:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1266   .text.SX1278_init:00000000 SX1278_init
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1329   .text.SX1278_transmit:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1335   .text.SX1278_transmit:00000000 SX1278_transmit
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1386   .text.SX1278_receive:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1392   .text.SX1278_receive:00000000 SX1278_receive
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1415   .rodata.LORA_Send.str1.4:00000000 $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1419   .text.LORA_Send:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1425   .text.LORA_Send:00000000 LORA_Send
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1510   .text.LORA_Send:0000005c $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1517   .text.SX1278_available:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1523   .text.SX1278_available:00000000 SX1278_available
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1546   .text.SX1278_read:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1552   .text.SX1278_read:00000000 SX1278_read
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1607   .text.SX1278_RSSI_LoRa:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1613   .text.SX1278_RSSI_LoRa:00000000 SX1278_RSSI_LoRa
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1645   .text.SX1278_RSSI:00000000 $t
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1651   .text.SX1278_RSSI:00000000 SX1278_RSSI
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1690   shellCommand:00000000 shellCommandlora_send
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1707   .rodata.shellCmdlora_send:00000000 shellCmdlora_send
ARM GAS  /var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s 			page 42


/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1700   .rodata.shellDesclora_send:00000000 shellDesclora_send
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1697   .rodata.shellDesclora_send:00000000 $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1704   .rodata.shellCmdlora_send:00000000 $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1711   .data.Lora_dev:00000000 $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1728   .rodata.SX1278_CRC_Sum:00000000 $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1734   .rodata.SX1278_CodingRate:00000000 $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1740   .rodata.SX1278_LoRaBandwidth:00000000 $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1746   .rodata.SX1278_SpreadFactor:00000000 $d
/var/folders/h7/llxr0vxd5sd9z74__7r6nx9r0000gn/T//ccblFEJN.s:1752   .rodata.SX1278_Power:00000000 $d

UNDEFINED SYMBOLS
SX1278_hw_SPICommand
SX1278_hw_SPIReadByte
SX1278_hw_SetNSS
__aeabi_uldivmod
SX1278_hw_DelayMs
SX1278_hw_Reset
SX1278_hw_GetDIO0
shellPrint
memset
shell
SX1278_hw_init
strlen
malloc
memcpy
free
lora_dev_hw
