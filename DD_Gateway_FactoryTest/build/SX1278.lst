ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"SX1278.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SX1278_SPIRead,"ax",%progbits
  20              		.align	1
  21              		.global	SX1278_SPIRead
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	SX1278_SPIRead:
  27              	.LVL0:
  28              	.LFB288:
  29              		.file 1 "FML/Src/SX1278.c"
   1:FML/Src/SX1278.c **** /**
   2:FML/Src/SX1278.c ****  * Author Wojciech Domski <Wojciech.Domski@gmail.com>
   3:FML/Src/SX1278.c ****  * www: www.Domski.pl
   4:FML/Src/SX1278.c ****  *
   5:FML/Src/SX1278.c ****  * work based on DORJI.COM sample code and
   6:FML/Src/SX1278.c ****  * https://github.com/realspinner/SX1278_LoRa
   7:FML/Src/SX1278.c ****  */
   8:FML/Src/SX1278.c **** 
   9:FML/Src/SX1278.c **** #include "SX1278.h"
  10:FML/Src/SX1278.c **** #include <string.h>
  11:FML/Src/SX1278.c **** #include "spi.h"
  12:FML/Src/SX1278.c **** #include "shell_port.h"
  13:FML/Src/SX1278.c **** 
  14:FML/Src/SX1278.c **** 
  15:FML/Src/SX1278.c **** SX1278_t Lora_dev[]={
  16:FML/Src/SX1278.c **** 	{
  17:FML/Src/SX1278.c **** 	 .hw = &lora_dev_hw[0],
  18:FML/Src/SX1278.c **** 	 .frequency = 437000000,
  19:FML/Src/SX1278.c **** 	 .power = 20,
  20:FML/Src/SX1278.c **** 	 .LoRa_SF = 5,
  21:FML/Src/SX1278.c **** 	 .LoRa_BW = 2,
  22:FML/Src/SX1278.c **** 	 .LoRa_CR = 1,
  23:FML/Src/SX1278.c **** 	 .LoRa_CRC_sum = 0,
  24:FML/Src/SX1278.c **** 	 .packetLength = 0, 
  25:FML/Src/SX1278.c **** 	 .readBytes = 0,
  26:FML/Src/SX1278.c **** 	},
  27:FML/Src/SX1278.c **** 	{
  28:FML/Src/SX1278.c **** 	 .hw = &lora_dev_hw[1],
  29:FML/Src/SX1278.c **** 	 .frequency = 437000000,
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 2


  30:FML/Src/SX1278.c **** 	 .power = 20,
  31:FML/Src/SX1278.c **** 	 .LoRa_SF = 5,
  32:FML/Src/SX1278.c **** 	 .LoRa_BW = 2,
  33:FML/Src/SX1278.c **** 	 .LoRa_CR = 1,
  34:FML/Src/SX1278.c **** 	 .LoRa_CRC_sum = 0,
  35:FML/Src/SX1278.c **** 	 .packetLength = 0, 
  36:FML/Src/SX1278.c **** 	 .readBytes = 0,
  37:FML/Src/SX1278.c **** 	}
  38:FML/Src/SX1278.c **** };
  39:FML/Src/SX1278.c **** 
  40:FML/Src/SX1278.c **** uint8_t SX1278_SPIRead(SX1278_t *module, uint8_t addr) {
  30              		.loc 1 40 56 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 40 56 is_stmt 0 view .LVU1
  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 3, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  42 0002 0446     		mov	r4, r0
  41:FML/Src/SX1278.c **** 	uint8_t tmp;
  43              		.loc 1 41 2 is_stmt 1 view .LVU2
  42:FML/Src/SX1278.c **** 	SX1278_hw_SPICommand(module->hw, addr);
  44              		.loc 1 42 2 view .LVU3
  45 0004 0068     		ldr	r0, [r0]
  46              	.LVL1:
  47              		.loc 1 42 2 is_stmt 0 view .LVU4
  48 0006 FFF7FEFF 		bl	SX1278_hw_SPICommand
  49              	.LVL2:
  43:FML/Src/SX1278.c **** 	tmp = SX1278_hw_SPIReadByte(module->hw);
  50              		.loc 1 43 2 is_stmt 1 view .LVU5
  51              		.loc 1 43 8 is_stmt 0 view .LVU6
  52 000a 2068     		ldr	r0, [r4]
  53 000c FFF7FEFF 		bl	SX1278_hw_SPIReadByte
  54              	.LVL3:
  55 0010 0546     		mov	r5, r0
  56              	.LVL4:
  44:FML/Src/SX1278.c **** 	SX1278_hw_SetNSS(module->hw, 1);
  57              		.loc 1 44 2 is_stmt 1 view .LVU7
  58 0012 0121     		movs	r1, #1
  59 0014 2068     		ldr	r0, [r4]
  60 0016 FFF7FEFF 		bl	SX1278_hw_SetNSS
  61              	.LVL5:
  45:FML/Src/SX1278.c **** 	return tmp;
  62              		.loc 1 45 2 view .LVU8
  46:FML/Src/SX1278.c **** }
  63              		.loc 1 46 1 is_stmt 0 view .LVU9
  64 001a 2846     		mov	r0, r5
  65 001c 38BD     		pop	{r3, r4, r5, pc}
  66              		.loc 1 46 1 view .LVU10
  67              		.cfi_endproc
  68              	.LFE288:
  70              		.section	.text.SX1278_SPIWrite,"ax",%progbits
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 3


  71              		.align	1
  72              		.global	SX1278_SPIWrite
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  77              	SX1278_SPIWrite:
  78              	.LVL6:
  79              	.LFB289:
  47:FML/Src/SX1278.c **** 
  48:FML/Src/SX1278.c **** void SX1278_SPIWrite(SX1278_t *module, uint8_t addr, uint8_t cmd) {
  80              		.loc 1 48 67 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		.loc 1 48 67 is_stmt 0 view .LVU12
  85 0000 70B5     		push	{r4, r5, r6, lr}
  86              	.LCFI1:
  87              		.cfi_def_cfa_offset 16
  88              		.cfi_offset 4, -16
  89              		.cfi_offset 5, -12
  90              		.cfi_offset 6, -8
  91              		.cfi_offset 14, -4
  92 0002 0446     		mov	r4, r0
  93 0004 0E46     		mov	r6, r1
  94 0006 1546     		mov	r5, r2
  49:FML/Src/SX1278.c **** 	SX1278_hw_SetNSS(module->hw, 0);
  95              		.loc 1 49 2 is_stmt 1 view .LVU13
  96 0008 0021     		movs	r1, #0
  97              	.LVL7:
  98              		.loc 1 49 2 is_stmt 0 view .LVU14
  99 000a 0068     		ldr	r0, [r0]
 100              	.LVL8:
 101              		.loc 1 49 2 view .LVU15
 102 000c FFF7FEFF 		bl	SX1278_hw_SetNSS
 103              	.LVL9:
  50:FML/Src/SX1278.c **** 	SX1278_hw_SPICommand(module->hw, addr | 0x80);
 104              		.loc 1 50 2 is_stmt 1 view .LVU16
 105 0010 46F08001 		orr	r1, r6, #128
 106 0014 2068     		ldr	r0, [r4]
 107 0016 FFF7FEFF 		bl	SX1278_hw_SPICommand
 108              	.LVL10:
  51:FML/Src/SX1278.c **** 	SX1278_hw_SPICommand(module->hw, cmd);
 109              		.loc 1 51 2 view .LVU17
 110 001a 2946     		mov	r1, r5
 111 001c 2068     		ldr	r0, [r4]
 112 001e FFF7FEFF 		bl	SX1278_hw_SPICommand
 113              	.LVL11:
  52:FML/Src/SX1278.c **** 	SX1278_hw_SetNSS(module->hw, 1);
 114              		.loc 1 52 2 view .LVU18
 115 0022 0121     		movs	r1, #1
 116 0024 2068     		ldr	r0, [r4]
 117 0026 FFF7FEFF 		bl	SX1278_hw_SetNSS
 118              	.LVL12:
  53:FML/Src/SX1278.c **** }
 119              		.loc 1 53 1 is_stmt 0 view .LVU19
 120 002a 70BD     		pop	{r4, r5, r6, pc}
 121              		.loc 1 53 1 view .LVU20
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 4


 122              		.cfi_endproc
 123              	.LFE289:
 125              		.section	.text.SX1278_SPIBurstRead,"ax",%progbits
 126              		.align	1
 127              		.global	SX1278_SPIBurstRead
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 132              	SX1278_SPIBurstRead:
 133              	.LVL13:
 134              	.LFB290:
  54:FML/Src/SX1278.c **** 
  55:FML/Src/SX1278.c **** void SX1278_SPIBurstRead(SX1278_t *module, uint8_t addr, uint8_t *rxBuf,
  56:FML/Src/SX1278.c **** 		uint8_t length) {
 135              		.loc 1 56 19 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
  57:FML/Src/SX1278.c **** 	uint8_t i;
 139              		.loc 1 57 2 view .LVU22
  58:FML/Src/SX1278.c **** 	if (length <= 1) {
 140              		.loc 1 58 2 view .LVU23
 141              		.loc 1 58 5 is_stmt 0 view .LVU24
 142 0000 012B     		cmp	r3, #1
 143 0002 1BD9     		bls	.L10
  56:FML/Src/SX1278.c **** 	uint8_t i;
 144              		.loc 1 56 19 view .LVU25
 145 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 24
 148              		.cfi_offset 3, -24
 149              		.cfi_offset 4, -20
 150              		.cfi_offset 5, -16
 151              		.cfi_offset 6, -12
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0006 0546     		mov	r5, r0
 155 0008 0C46     		mov	r4, r1
 156 000a 1746     		mov	r7, r2
 157 000c 1E46     		mov	r6, r3
  59:FML/Src/SX1278.c **** 		return;
  60:FML/Src/SX1278.c **** 	} else {
  61:FML/Src/SX1278.c **** 		SX1278_hw_SetNSS(module->hw, 0);
 158              		.loc 1 61 3 is_stmt 1 view .LVU26
 159 000e 0021     		movs	r1, #0
 160              	.LVL14:
 161              		.loc 1 61 3 is_stmt 0 view .LVU27
 162 0010 0068     		ldr	r0, [r0]
 163              	.LVL15:
 164              		.loc 1 61 3 view .LVU28
 165 0012 FFF7FEFF 		bl	SX1278_hw_SetNSS
 166              	.LVL16:
  62:FML/Src/SX1278.c **** 		SX1278_hw_SPICommand(module->hw, addr);
 167              		.loc 1 62 3 is_stmt 1 view .LVU29
 168 0016 2146     		mov	r1, r4
 169 0018 2868     		ldr	r0, [r5]
 170 001a FFF7FEFF 		bl	SX1278_hw_SPICommand
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 5


 171              	.LVL17:
  63:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 172              		.loc 1 63 3 view .LVU30
 173              		.loc 1 63 10 is_stmt 0 view .LVU31
 174 001e 0024     		movs	r4, #0
 175              		.loc 1 63 3 view .LVU32
 176 0020 05E0     		b	.L7
 177              	.LVL18:
 178              	.L8:
  64:FML/Src/SX1278.c **** 			*(rxBuf + i) = SX1278_hw_SPIReadByte(module->hw);
 179              		.loc 1 64 4 is_stmt 1 discriminator 3 view .LVU33
 180              		.loc 1 64 19 is_stmt 0 discriminator 3 view .LVU34
 181 0022 2868     		ldr	r0, [r5]
 182 0024 FFF7FEFF 		bl	SX1278_hw_SPIReadByte
 183              	.LVL19:
 184              		.loc 1 64 17 discriminator 3 view .LVU35
 185 0028 3855     		strb	r0, [r7, r4]
  63:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 186              		.loc 1 63 27 is_stmt 1 discriminator 3 view .LVU36
  63:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 187              		.loc 1 63 28 is_stmt 0 discriminator 3 view .LVU37
 188 002a 0134     		adds	r4, r4, #1
 189              	.LVL20:
  63:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 190              		.loc 1 63 28 discriminator 3 view .LVU38
 191 002c E4B2     		uxtb	r4, r4
 192              	.LVL21:
 193              	.L7:
  63:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 194              		.loc 1 63 15 is_stmt 1 discriminator 1 view .LVU39
  63:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 195              		.loc 1 63 3 is_stmt 0 discriminator 1 view .LVU40
 196 002e B442     		cmp	r4, r6
 197 0030 F7D3     		bcc	.L8
  65:FML/Src/SX1278.c **** 		}
  66:FML/Src/SX1278.c **** 		SX1278_hw_SetNSS(module->hw, 1);
 198              		.loc 1 66 3 is_stmt 1 view .LVU41
 199 0032 0121     		movs	r1, #1
 200 0034 2868     		ldr	r0, [r5]
 201 0036 FFF7FEFF 		bl	SX1278_hw_SetNSS
 202              	.LVL22:
  67:FML/Src/SX1278.c **** 	}
  68:FML/Src/SX1278.c **** }
 203              		.loc 1 68 1 is_stmt 0 view .LVU42
 204 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 205              	.LVL23:
 206              	.L10:
 207              	.LCFI3:
 208              		.cfi_def_cfa_offset 0
 209              		.cfi_restore 3
 210              		.cfi_restore 4
 211              		.cfi_restore 5
 212              		.cfi_restore 6
 213              		.cfi_restore 7
 214              		.cfi_restore 14
 215              		.loc 1 68 1 view .LVU43
 216 003c 7047     		bx	lr
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 6


 217              		.cfi_endproc
 218              	.LFE290:
 220              		.section	.text.SX1278_SPIBurstWrite,"ax",%progbits
 221              		.align	1
 222              		.global	SX1278_SPIBurstWrite
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 227              	SX1278_SPIBurstWrite:
 228              	.LVL24:
 229              	.LFB291:
  69:FML/Src/SX1278.c **** 
  70:FML/Src/SX1278.c **** void SX1278_SPIBurstWrite(SX1278_t *module, uint8_t addr, uint8_t *txBuf,
  71:FML/Src/SX1278.c **** 		uint8_t length) {
 230              		.loc 1 71 19 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
  72:FML/Src/SX1278.c **** 	unsigned char i;
 234              		.loc 1 72 2 view .LVU45
  73:FML/Src/SX1278.c **** 	if (length <= 1) {
 235              		.loc 1 73 2 view .LVU46
 236              		.loc 1 73 5 is_stmt 0 view .LVU47
 237 0000 012B     		cmp	r3, #1
 238 0002 1CD9     		bls	.L18
  71:FML/Src/SX1278.c **** 	unsigned char i;
 239              		.loc 1 71 19 view .LVU48
 240 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 241              	.LCFI4:
 242              		.cfi_def_cfa_offset 24
 243              		.cfi_offset 3, -24
 244              		.cfi_offset 4, -20
 245              		.cfi_offset 5, -16
 246              		.cfi_offset 6, -12
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0006 0546     		mov	r5, r0
 250 0008 0C46     		mov	r4, r1
 251 000a 1746     		mov	r7, r2
 252 000c 1E46     		mov	r6, r3
  74:FML/Src/SX1278.c **** 		return;
  75:FML/Src/SX1278.c **** 	} else {
  76:FML/Src/SX1278.c **** 		SX1278_hw_SetNSS(module->hw, 0);
 253              		.loc 1 76 3 is_stmt 1 view .LVU49
 254 000e 0021     		movs	r1, #0
 255              	.LVL25:
 256              		.loc 1 76 3 is_stmt 0 view .LVU50
 257 0010 0068     		ldr	r0, [r0]
 258              	.LVL26:
 259              		.loc 1 76 3 view .LVU51
 260 0012 FFF7FEFF 		bl	SX1278_hw_SetNSS
 261              	.LVL27:
  77:FML/Src/SX1278.c **** 		SX1278_hw_SPICommand(module->hw, addr | 0x80);
 262              		.loc 1 77 3 is_stmt 1 view .LVU52
 263 0016 44F08001 		orr	r1, r4, #128
 264 001a 2868     		ldr	r0, [r5]
 265 001c FFF7FEFF 		bl	SX1278_hw_SPICommand
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 7


 266              	.LVL28:
  78:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 267              		.loc 1 78 3 view .LVU53
 268              		.loc 1 78 10 is_stmt 0 view .LVU54
 269 0020 0024     		movs	r4, #0
 270              		.loc 1 78 3 view .LVU55
 271 0022 05E0     		b	.L15
 272              	.LVL29:
 273              	.L16:
  79:FML/Src/SX1278.c **** 			SX1278_hw_SPICommand(module->hw, *(txBuf + i));
 274              		.loc 1 79 4 is_stmt 1 discriminator 3 view .LVU56
 275 0024 395D     		ldrb	r1, [r7, r4]	@ zero_extendqisi2
 276 0026 2868     		ldr	r0, [r5]
 277 0028 FFF7FEFF 		bl	SX1278_hw_SPICommand
 278              	.LVL30:
  78:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 279              		.loc 1 78 27 discriminator 3 view .LVU57
  78:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 280              		.loc 1 78 28 is_stmt 0 discriminator 3 view .LVU58
 281 002c 0134     		adds	r4, r4, #1
 282              	.LVL31:
  78:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 283              		.loc 1 78 28 discriminator 3 view .LVU59
 284 002e E4B2     		uxtb	r4, r4
 285              	.LVL32:
 286              	.L15:
  78:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 287              		.loc 1 78 15 is_stmt 1 discriminator 1 view .LVU60
  78:FML/Src/SX1278.c **** 		for (i = 0; i < length; i++) {
 288              		.loc 1 78 3 is_stmt 0 discriminator 1 view .LVU61
 289 0030 B442     		cmp	r4, r6
 290 0032 F7D3     		bcc	.L16
  80:FML/Src/SX1278.c **** 		}
  81:FML/Src/SX1278.c **** 		SX1278_hw_SetNSS(module->hw, 1);
 291              		.loc 1 81 3 is_stmt 1 view .LVU62
 292 0034 0121     		movs	r1, #1
 293 0036 2868     		ldr	r0, [r5]
 294 0038 FFF7FEFF 		bl	SX1278_hw_SetNSS
 295              	.LVL33:
  82:FML/Src/SX1278.c **** 	}
  83:FML/Src/SX1278.c **** }
 296              		.loc 1 83 1 is_stmt 0 view .LVU63
 297 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 298              	.LVL34:
 299              	.L18:
 300              	.LCFI5:
 301              		.cfi_def_cfa_offset 0
 302              		.cfi_restore 3
 303              		.cfi_restore 4
 304              		.cfi_restore 5
 305              		.cfi_restore 6
 306              		.cfi_restore 7
 307              		.cfi_restore 14
 308              		.loc 1 83 1 view .LVU64
 309 003e 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE291:
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 8


 313              		.section	.text.SX1278_standby,"ax",%progbits
 314              		.align	1
 315              		.global	SX1278_standby
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 320              	SX1278_standby:
 321              	.LVL35:
 322              	.LFB293:
  84:FML/Src/SX1278.c **** 
  85:FML/Src/SX1278.c **** void SX1278_config(SX1278_t *module) {
  86:FML/Src/SX1278.c **** 	SX1278_sleep(module); //Change modem mode Must in Sleep mode
  87:FML/Src/SX1278.c **** 	SX1278_hw_DelayMs(15);
  88:FML/Src/SX1278.c **** 
  89:FML/Src/SX1278.c **** 	SX1278_entryLoRa(module);
  90:FML/Src/SX1278.c **** 	//SX1278_SPIWrite(module, 0x5904); //?? Change digital regulator form 1.6V to 1.47V: see errata no
  91:FML/Src/SX1278.c **** 
  92:FML/Src/SX1278.c **** 	uint64_t freq = ((uint64_t) module->frequency << 19) / 32000000;
  93:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
  94:FML/Src/SX1278.c **** 	freq_reg[0] = (uint8_t) (freq >> 16);
  95:FML/Src/SX1278.c **** 	freq_reg[1] = (uint8_t) (freq >> 8);
  96:FML/Src/SX1278.c **** 	freq_reg[2] = (uint8_t) (freq >> 0);
  97:FML/Src/SX1278.c **** 	SX1278_SPIBurstWrite(module, LR_RegFrMsb, (uint8_t*) freq_reg, 3); //setting  frequency parameter
  98:FML/Src/SX1278.c **** 
  99:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, RegSyncWord, 0x34);
 100:FML/Src/SX1278.c **** 
 101:FML/Src/SX1278.c **** 	//setting base parameter
 102:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPaConfig, SX1278_Power[module->power]); //Setting output power param
 103:FML/Src/SX1278.c **** 
 104:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOcp, 0x0B);			//RegOcp,Close Ocp
 105:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegLna, 0x23);		//RegLNA,High & LNA Enable
 106:FML/Src/SX1278.c **** 	if (SX1278_SpreadFactor[module->LoRa_SF] == 6) {	//SFactor=6
 107:FML/Src/SX1278.c **** 		uint8_t tmp;
 108:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
 109:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 110:FML/Src/SX1278.c **** 				((SX1278_LoRaBandwidth[module->LoRa_BW] << 4)
 111:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x01)); //Implicit Enable CRC Enable(0x02) & Er
 112:FML/Src/SX1278.c **** 
 113:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
 114:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 115:FML/Src/SX1278.c **** 				((SX1278_SpreadFactor[module->LoRa_SF] << 4)
 116:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x03));
 117:FML/Src/SX1278.c **** 
 118:FML/Src/SX1278.c **** 		tmp = SX1278_SPIRead(module, 0x31);
 119:FML/Src/SX1278.c **** 		tmp &= 0xF8;
 120:FML/Src/SX1278.c **** 		tmp |= 0x05;
 121:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x31, tmp);
 122:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x37, 0x0C);
 123:FML/Src/SX1278.c **** 	} else {
 124:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
 125:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 126:FML/Src/SX1278.c **** 				((SX1278_LoRaBandwidth[module->LoRa_BW] << 4)
 127:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x00)); //Explicit Enable CRC Enable(0x02) & Er
 128:FML/Src/SX1278.c **** 
 129:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
 130:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 131:FML/Src/SX1278.c **** 				((SX1278_SpreadFactor[module->LoRa_SF] << 4)
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 9


 132:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x00)); //SFactor &  LNA gain set by the inte
 133:FML/Src/SX1278.c **** 	}
 134:FML/Src/SX1278.c **** 
 135:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegModemConfig3, 0x04);
 136:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegSymbTimeoutLsb, 0x08); //RegSymbTimeoutLsb Timeout = 0x3FF(Max)
 137:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPreambleMsb, 0x00); //RegPreambleMsb
 138:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPreambleLsb, 8); //RegPreambleLsb 8+4=12byte Preamble
 139:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_DIOMAPPING2, 0x01); //RegDioMapping2 DIO5=00, DIO4=01
 140:FML/Src/SX1278.c **** 	module->readBytes = 0;
 141:FML/Src/SX1278.c **** 	SX1278_standby(module); //Entry standby mode
 142:FML/Src/SX1278.c **** }
 143:FML/Src/SX1278.c **** 
 144:FML/Src/SX1278.c **** void SX1278_standby(SX1278_t *module) {
 323              		.loc 1 144 39 is_stmt 1 view -0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		.loc 1 144 39 is_stmt 0 view .LVU66
 328 0000 10B5     		push	{r4, lr}
 329              	.LCFI6:
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 4, -8
 332              		.cfi_offset 14, -4
 333 0002 0446     		mov	r4, r0
 145:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x09);
 334              		.loc 1 145 2 is_stmt 1 view .LVU67
 335 0004 0922     		movs	r2, #9
 336 0006 0121     		movs	r1, #1
 337 0008 FFF7FEFF 		bl	SX1278_SPIWrite
 338              	.LVL36:
 146:FML/Src/SX1278.c **** 	module->status = STANDBY;
 339              		.loc 1 146 2 view .LVU68
 340              		.loc 1 146 17 is_stmt 0 view .LVU69
 341 000c 0123     		movs	r3, #1
 342 000e A375     		strb	r3, [r4, #22]
 147:FML/Src/SX1278.c **** }
 343              		.loc 1 147 1 view .LVU70
 344 0010 10BD     		pop	{r4, pc}
 345              		.loc 1 147 1 view .LVU71
 346              		.cfi_endproc
 347              	.LFE293:
 349              		.section	.text.SX1278_sleep,"ax",%progbits
 350              		.align	1
 351              		.global	SX1278_sleep
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 356              	SX1278_sleep:
 357              	.LVL37:
 358              	.LFB294:
 148:FML/Src/SX1278.c **** 
 149:FML/Src/SX1278.c **** void SX1278_sleep(SX1278_t *module) {
 359              		.loc 1 149 37 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		.loc 1 149 37 is_stmt 0 view .LVU73
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 10


 364 0000 10B5     		push	{r4, lr}
 365              	.LCFI7:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 4, -8
 368              		.cfi_offset 14, -4
 369 0002 0446     		mov	r4, r0
 150:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x08);
 370              		.loc 1 150 2 is_stmt 1 view .LVU74
 371 0004 0822     		movs	r2, #8
 372 0006 0121     		movs	r1, #1
 373 0008 FFF7FEFF 		bl	SX1278_SPIWrite
 374              	.LVL38:
 151:FML/Src/SX1278.c **** 	module->status = SLEEP;
 375              		.loc 1 151 2 view .LVU75
 376              		.loc 1 151 17 is_stmt 0 view .LVU76
 377 000c 0023     		movs	r3, #0
 378 000e A375     		strb	r3, [r4, #22]
 152:FML/Src/SX1278.c **** }
 379              		.loc 1 152 1 view .LVU77
 380 0010 10BD     		pop	{r4, pc}
 381              		.loc 1 152 1 view .LVU78
 382              		.cfi_endproc
 383              	.LFE294:
 385              		.section	.text.SX1278_entryLoRa,"ax",%progbits
 386              		.align	1
 387              		.global	SX1278_entryLoRa
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 392              	SX1278_entryLoRa:
 393              	.LVL39:
 394              	.LFB295:
 153:FML/Src/SX1278.c **** 
 154:FML/Src/SX1278.c **** void SX1278_entryLoRa(SX1278_t *module) {
 395              		.loc 1 154 41 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		.loc 1 154 41 is_stmt 0 view .LVU80
 400 0000 08B5     		push	{r3, lr}
 401              	.LCFI8:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 3, -8
 404              		.cfi_offset 14, -4
 155:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x88);
 405              		.loc 1 155 2 is_stmt 1 view .LVU81
 406 0002 8822     		movs	r2, #136
 407 0004 0121     		movs	r1, #1
 408 0006 FFF7FEFF 		bl	SX1278_SPIWrite
 409              	.LVL40:
 156:FML/Src/SX1278.c **** }
 410              		.loc 1 156 1 is_stmt 0 view .LVU82
 411 000a 08BD     		pop	{r3, pc}
 412              		.cfi_endproc
 413              	.LFE295:
 415              		.global	__aeabi_uldivmod
 416              		.section	.text.SX1278_config,"ax",%progbits
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 11


 417              		.align	1
 418              		.global	SX1278_config
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 423              	SX1278_config:
 424              	.LVL41:
 425              	.LFB292:
  85:FML/Src/SX1278.c **** 	SX1278_sleep(module); //Change modem mode Must in Sleep mode
 426              		.loc 1 85 38 is_stmt 1 view -0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 8
 429              		@ frame_needed = 0, uses_anonymous_args = 0
  85:FML/Src/SX1278.c **** 	SX1278_sleep(module); //Change modem mode Must in Sleep mode
 430              		.loc 1 85 38 is_stmt 0 view .LVU84
 431 0000 30B5     		push	{r4, r5, lr}
 432              	.LCFI9:
 433              		.cfi_def_cfa_offset 12
 434              		.cfi_offset 4, -12
 435              		.cfi_offset 5, -8
 436              		.cfi_offset 14, -4
 437 0002 83B0     		sub	sp, sp, #12
 438              	.LCFI10:
 439              		.cfi_def_cfa_offset 24
 440 0004 0446     		mov	r4, r0
  86:FML/Src/SX1278.c **** 	SX1278_hw_DelayMs(15);
 441              		.loc 1 86 2 is_stmt 1 view .LVU85
 442 0006 FFF7FEFF 		bl	SX1278_sleep
 443              	.LVL42:
  87:FML/Src/SX1278.c **** 
 444              		.loc 1 87 2 view .LVU86
 445 000a 0F20     		movs	r0, #15
 446 000c FFF7FEFF 		bl	SX1278_hw_DelayMs
 447              	.LVL43:
  89:FML/Src/SX1278.c **** 	//SX1278_SPIWrite(module, 0x5904); //?? Change digital regulator form 1.6V to 1.47V: see errata no
 448              		.loc 1 89 2 view .LVU87
 449 0010 2046     		mov	r0, r4
 450 0012 FFF7FEFF 		bl	SX1278_entryLoRa
 451              	.LVL44:
  92:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
 452              		.loc 1 92 2 view .LVU88
  92:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
 453              		.loc 1 92 36 is_stmt 0 view .LVU89
 454 0016 A568     		ldr	r5, [r4, #8]
 455 0018 E368     		ldr	r3, [r4, #12]
  92:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
 456              		.loc 1 92 48 view .LVU90
 457 001a D904     		lsls	r1, r3, #19
  92:FML/Src/SX1278.c **** 	uint8_t freq_reg[3];
 458              		.loc 1 92 11 view .LVU91
 459 001c 554A     		ldr	r2, .L32
 460 001e 0023     		movs	r3, #0
 461 0020 E804     		lsls	r0, r5, #19
 462 0022 41EA5531 		orr	r1, r1, r5, lsr #13
 463 0026 FFF7FEFF 		bl	__aeabi_uldivmod
 464              	.LVL45:
  93:FML/Src/SX1278.c **** 	freq_reg[0] = (uint8_t) (freq >> 16);
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 12


 465              		.loc 1 93 2 is_stmt 1 view .LVU92
  94:FML/Src/SX1278.c **** 	freq_reg[1] = (uint8_t) (freq >> 8);
 466              		.loc 1 94 2 view .LVU93
  94:FML/Src/SX1278.c **** 	freq_reg[1] = (uint8_t) (freq >> 8);
 467              		.loc 1 94 16 is_stmt 0 view .LVU94
 468 002a C0F30743 		ubfx	r3, r0, #16, #8
  94:FML/Src/SX1278.c **** 	freq_reg[1] = (uint8_t) (freq >> 8);
 469              		.loc 1 94 14 view .LVU95
 470 002e 8DF80430 		strb	r3, [sp, #4]
  95:FML/Src/SX1278.c **** 	freq_reg[2] = (uint8_t) (freq >> 0);
 471              		.loc 1 95 2 is_stmt 1 view .LVU96
  95:FML/Src/SX1278.c **** 	freq_reg[2] = (uint8_t) (freq >> 0);
 472              		.loc 1 95 16 is_stmt 0 view .LVU97
 473 0032 C0F30723 		ubfx	r3, r0, #8, #8
  95:FML/Src/SX1278.c **** 	freq_reg[2] = (uint8_t) (freq >> 0);
 474              		.loc 1 95 14 view .LVU98
 475 0036 8DF80530 		strb	r3, [sp, #5]
  96:FML/Src/SX1278.c **** 	SX1278_SPIBurstWrite(module, LR_RegFrMsb, (uint8_t*) freq_reg, 3); //setting  frequency parameter
 476              		.loc 1 96 2 is_stmt 1 view .LVU99
  96:FML/Src/SX1278.c **** 	SX1278_SPIBurstWrite(module, LR_RegFrMsb, (uint8_t*) freq_reg, 3); //setting  frequency parameter
 477              		.loc 1 96 14 is_stmt 0 view .LVU100
 478 003a 8DF80600 		strb	r0, [sp, #6]
  97:FML/Src/SX1278.c **** 
 479              		.loc 1 97 2 is_stmt 1 view .LVU101
 480 003e 0323     		movs	r3, #3
 481 0040 01AA     		add	r2, sp, #4
 482 0042 0621     		movs	r1, #6
 483              	.LVL46:
  97:FML/Src/SX1278.c **** 
 484              		.loc 1 97 2 is_stmt 0 view .LVU102
 485 0044 2046     		mov	r0, r4
  97:FML/Src/SX1278.c **** 
 486              		.loc 1 97 2 view .LVU103
 487 0046 FFF7FEFF 		bl	SX1278_SPIBurstWrite
 488              	.LVL47:
  99:FML/Src/SX1278.c **** 
 489              		.loc 1 99 2 is_stmt 1 view .LVU104
 490 004a 3422     		movs	r2, #52
 491 004c 3921     		movs	r1, #57
 492 004e 2046     		mov	r0, r4
 493 0050 FFF7FEFF 		bl	SX1278_SPIWrite
 494              	.LVL48:
 102:FML/Src/SX1278.c **** 
 495              		.loc 1 102 2 view .LVU105
 102:FML/Src/SX1278.c **** 
 496              		.loc 1 102 61 is_stmt 0 view .LVU106
 497 0054 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 102:FML/Src/SX1278.c **** 
 498              		.loc 1 102 2 view .LVU107
 499 0056 484A     		ldr	r2, .L32+4
 500 0058 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 501 005a 0921     		movs	r1, #9
 502 005c 2046     		mov	r0, r4
 503 005e FFF7FEFF 		bl	SX1278_SPIWrite
 504              	.LVL49:
 104:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegLna, 0x23);		//RegLNA,High & LNA Enable
 505              		.loc 1 104 2 is_stmt 1 view .LVU108
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 13


 506 0062 0B22     		movs	r2, #11
 507 0064 1146     		mov	r1, r2
 508 0066 2046     		mov	r0, r4
 509 0068 FFF7FEFF 		bl	SX1278_SPIWrite
 510              	.LVL50:
 105:FML/Src/SX1278.c **** 	if (SX1278_SpreadFactor[module->LoRa_SF] == 6) {	//SFactor=6
 511              		.loc 1 105 2 view .LVU109
 512 006c 2322     		movs	r2, #35
 513 006e 0C21     		movs	r1, #12
 514 0070 2046     		mov	r0, r4
 515 0072 FFF7FEFF 		bl	SX1278_SPIWrite
 516              	.LVL51:
 106:FML/Src/SX1278.c **** 		uint8_t tmp;
 517              		.loc 1 106 2 view .LVU110
 106:FML/Src/SX1278.c **** 		uint8_t tmp;
 518              		.loc 1 106 32 is_stmt 0 view .LVU111
 519 0076 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 106:FML/Src/SX1278.c **** 		uint8_t tmp;
 520              		.loc 1 106 25 view .LVU112
 521 0078 404A     		ldr	r2, .L32+8
 522 007a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 106:FML/Src/SX1278.c **** 		uint8_t tmp;
 523              		.loc 1 106 5 view .LVU113
 524 007c 062B     		cmp	r3, #6
 525 007e 42D0     		beq	.L31
 124:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 526              		.loc 1 124 3 is_stmt 1 view .LVU114
 126:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x00)); //Explicit Enable CRC Enable(0x02) & Er
 527              		.loc 1 126 34 is_stmt 0 view .LVU115
 528 0080 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 126:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x00)); //Explicit Enable CRC Enable(0x02) & Er
 529              		.loc 1 126 27 view .LVU116
 530 0082 3F4A     		ldr	r2, .L32+12
 531 0084 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 126:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x00)); //Explicit Enable CRC Enable(0x02) & Er
 532              		.loc 1 126 45 view .LVU117
 533 0086 1201     		lsls	r2, r2, #4
 534 0088 D2B2     		uxtb	r2, r2
 127:FML/Src/SX1278.c **** 
 535              		.loc 1 127 34 view .LVU118
 536 008a E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 127:FML/Src/SX1278.c **** 
 537              		.loc 1 127 27 view .LVU119
 538 008c 3D49     		ldr	r1, .L32+16
 539 008e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 127:FML/Src/SX1278.c **** 
 540              		.loc 1 127 45 view .LVU120
 541 0090 5B00     		lsls	r3, r3, #1
 542 0092 DBB2     		uxtb	r3, r3
 124:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 543              		.loc 1 124 3 view .LVU121
 544 0094 1A44     		add	r2, r2, r3
 545 0096 02F0FE02 		and	r2, r2, #254
 546 009a 1D21     		movs	r1, #29
 547 009c 2046     		mov	r0, r4
 548 009e FFF7FEFF 		bl	SX1278_SPIWrite
 549              	.LVL52:
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 14


 129:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 550              		.loc 1 129 3 is_stmt 1 view .LVU122
 131:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x00)); //SFactor &  LNA gain set by the inte
 551              		.loc 1 131 33 is_stmt 0 view .LVU123
 552 00a2 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 131:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x00)); //SFactor &  LNA gain set by the inte
 553              		.loc 1 131 26 view .LVU124
 554 00a4 354A     		ldr	r2, .L32+8
 555 00a6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 131:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x00)); //SFactor &  LNA gain set by the inte
 556              		.loc 1 131 44 view .LVU125
 557 00a8 1201     		lsls	r2, r2, #4
 558 00aa D2B2     		uxtb	r2, r2
 132:FML/Src/SX1278.c **** 	}
 559              		.loc 1 132 31 view .LVU126
 560 00ac 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 132:FML/Src/SX1278.c **** 	}
 561              		.loc 1 132 24 view .LVU127
 562 00ae 3649     		ldr	r1, .L32+20
 563 00b0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 132:FML/Src/SX1278.c **** 	}
 564              		.loc 1 132 47 view .LVU128
 565 00b2 9B00     		lsls	r3, r3, #2
 566 00b4 DBB2     		uxtb	r3, r3
 129:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 567              		.loc 1 129 3 view .LVU129
 568 00b6 1A44     		add	r2, r2, r3
 569 00b8 02F0FC02 		and	r2, r2, #252
 570 00bc 1E21     		movs	r1, #30
 571 00be 2046     		mov	r0, r4
 572 00c0 FFF7FEFF 		bl	SX1278_SPIWrite
 573              	.LVL53:
 574              	.L29:
 135:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegSymbTimeoutLsb, 0x08); //RegSymbTimeoutLsb Timeout = 0x3FF(Max)
 575              		.loc 1 135 2 is_stmt 1 view .LVU130
 576 00c4 0422     		movs	r2, #4
 577 00c6 2621     		movs	r1, #38
 578 00c8 2046     		mov	r0, r4
 579 00ca FFF7FEFF 		bl	SX1278_SPIWrite
 580              	.LVL54:
 136:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPreambleMsb, 0x00); //RegPreambleMsb
 581              		.loc 1 136 2 view .LVU131
 582 00ce 0822     		movs	r2, #8
 583 00d0 1F21     		movs	r1, #31
 584 00d2 2046     		mov	r0, r4
 585 00d4 FFF7FEFF 		bl	SX1278_SPIWrite
 586              	.LVL55:
 137:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPreambleLsb, 8); //RegPreambleLsb 8+4=12byte Preamble
 587              		.loc 1 137 2 view .LVU132
 588 00d8 0022     		movs	r2, #0
 589 00da 2021     		movs	r1, #32
 590 00dc 2046     		mov	r0, r4
 591 00de FFF7FEFF 		bl	SX1278_SPIWrite
 592              	.LVL56:
 138:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_DIOMAPPING2, 0x01); //RegDioMapping2 DIO5=00, DIO4=01
 593              		.loc 1 138 2 view .LVU133
 594 00e2 0822     		movs	r2, #8
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 15


 595 00e4 2121     		movs	r1, #33
 596 00e6 2046     		mov	r0, r4
 597 00e8 FFF7FEFF 		bl	SX1278_SPIWrite
 598              	.LVL57:
 139:FML/Src/SX1278.c **** 	module->readBytes = 0;
 599              		.loc 1 139 2 view .LVU134
 600 00ec 0122     		movs	r2, #1
 601 00ee 4121     		movs	r1, #65
 602 00f0 2046     		mov	r0, r4
 603 00f2 FFF7FEFF 		bl	SX1278_SPIWrite
 604              	.LVL58:
 140:FML/Src/SX1278.c **** 	SX1278_standby(module); //Entry standby mode
 605              		.loc 1 140 2 view .LVU135
 140:FML/Src/SX1278.c **** 	SX1278_standby(module); //Entry standby mode
 606              		.loc 1 140 20 is_stmt 0 view .LVU136
 607 00f6 0023     		movs	r3, #0
 608 00f8 84F81731 		strb	r3, [r4, #279]
 141:FML/Src/SX1278.c **** }
 609              		.loc 1 141 2 is_stmt 1 view .LVU137
 610 00fc 2046     		mov	r0, r4
 611 00fe FFF7FEFF 		bl	SX1278_standby
 612              	.LVL59:
 142:FML/Src/SX1278.c **** 
 613              		.loc 1 142 1 is_stmt 0 view .LVU138
 614 0102 03B0     		add	sp, sp, #12
 615              	.LCFI11:
 616              		.cfi_remember_state
 617              		.cfi_def_cfa_offset 12
 618              		@ sp needed
 619 0104 30BD     		pop	{r4, r5, pc}
 620              	.LVL60:
 621              	.L31:
 622              	.LCFI12:
 623              		.cfi_restore_state
 624              	.LBB2:
 107:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module,
 625              		.loc 1 107 3 is_stmt 1 view .LVU139
 108:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 626              		.loc 1 108 3 view .LVU140
 110:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x01)); //Implicit Enable CRC Enable(0x02) & Er
 627              		.loc 1 110 34 is_stmt 0 view .LVU141
 628 0106 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 110:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x01)); //Implicit Enable CRC Enable(0x02) & Er
 629              		.loc 1 110 27 view .LVU142
 630 0108 1D4A     		ldr	r2, .L32+12
 631 010a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 110:FML/Src/SX1278.c **** 						+ (SX1278_CodingRate[module->LoRa_CR] << 1) + 0x01)); //Implicit Enable CRC Enable(0x02) & Er
 632              		.loc 1 110 45 view .LVU143
 633 010c 1201     		lsls	r2, r2, #4
 634 010e D2B2     		uxtb	r2, r2
 111:FML/Src/SX1278.c **** 
 635              		.loc 1 111 34 view .LVU144
 636 0110 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 111:FML/Src/SX1278.c **** 
 637              		.loc 1 111 27 view .LVU145
 638 0112 1C49     		ldr	r1, .L32+16
 639 0114 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 16


 111:FML/Src/SX1278.c **** 
 640              		.loc 1 111 45 view .LVU146
 641 0116 5B00     		lsls	r3, r3, #1
 642 0118 DBB2     		uxtb	r3, r3
 111:FML/Src/SX1278.c **** 
 643              		.loc 1 111 7 view .LVU147
 644 011a 1A44     		add	r2, r2, r3
 645 011c D2B2     		uxtb	r2, r2
 108:FML/Src/SX1278.c **** 		LR_RegModemConfig1,
 646              		.loc 1 108 3 view .LVU148
 647 011e 0132     		adds	r2, r2, #1
 648 0120 D2B2     		uxtb	r2, r2
 649 0122 1D21     		movs	r1, #29
 650 0124 2046     		mov	r0, r4
 651 0126 FFF7FEFF 		bl	SX1278_SPIWrite
 652              	.LVL61:
 113:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 653              		.loc 1 113 3 is_stmt 1 view .LVU149
 115:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x03));
 654              		.loc 1 115 33 is_stmt 0 view .LVU150
 655 012a 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 115:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x03));
 656              		.loc 1 115 26 view .LVU151
 657 012c 134A     		ldr	r2, .L32+8
 658 012e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 115:FML/Src/SX1278.c **** 						+ (SX1278_CRC_Sum[module->LoRa_CRC_sum] << 2) + 0x03));
 659              		.loc 1 115 44 view .LVU152
 660 0130 1201     		lsls	r2, r2, #4
 661 0132 D2B2     		uxtb	r2, r2
 116:FML/Src/SX1278.c **** 
 662              		.loc 1 116 31 view .LVU153
 663 0134 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 116:FML/Src/SX1278.c **** 
 664              		.loc 1 116 24 view .LVU154
 665 0136 1449     		ldr	r1, .L32+20
 666 0138 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 116:FML/Src/SX1278.c **** 
 667              		.loc 1 116 47 view .LVU155
 668 013a 9B00     		lsls	r3, r3, #2
 669 013c DBB2     		uxtb	r3, r3
 116:FML/Src/SX1278.c **** 
 670              		.loc 1 116 7 view .LVU156
 671 013e 1A44     		add	r2, r2, r3
 672 0140 D2B2     		uxtb	r2, r2
 113:FML/Src/SX1278.c **** 		LR_RegModemConfig2,
 673              		.loc 1 113 3 view .LVU157
 674 0142 0332     		adds	r2, r2, #3
 675 0144 D2B2     		uxtb	r2, r2
 676 0146 1E21     		movs	r1, #30
 677 0148 2046     		mov	r0, r4
 678 014a FFF7FEFF 		bl	SX1278_SPIWrite
 679              	.LVL62:
 118:FML/Src/SX1278.c **** 		tmp &= 0xF8;
 680              		.loc 1 118 3 is_stmt 1 view .LVU158
 118:FML/Src/SX1278.c **** 		tmp &= 0xF8;
 681              		.loc 1 118 9 is_stmt 0 view .LVU159
 682 014e 3121     		movs	r1, #49
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 17


 683 0150 2046     		mov	r0, r4
 684 0152 FFF7FEFF 		bl	SX1278_SPIRead
 685              	.LVL63:
 119:FML/Src/SX1278.c **** 		tmp |= 0x05;
 686              		.loc 1 119 3 is_stmt 1 view .LVU160
 119:FML/Src/SX1278.c **** 		tmp |= 0x05;
 687              		.loc 1 119 7 is_stmt 0 view .LVU161
 688 0156 00F0F802 		and	r2, r0, #248
 689              	.LVL64:
 120:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x31, tmp);
 690              		.loc 1 120 3 is_stmt 1 view .LVU162
 121:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x37, 0x0C);
 691              		.loc 1 121 3 view .LVU163
 692 015a 42F00502 		orr	r2, r2, #5
 693              	.LVL65:
 121:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x37, 0x0C);
 694              		.loc 1 121 3 is_stmt 0 view .LVU164
 695 015e 3121     		movs	r1, #49
 696 0160 2046     		mov	r0, r4
 697              	.LVL66:
 121:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, 0x37, 0x0C);
 698              		.loc 1 121 3 view .LVU165
 699 0162 FFF7FEFF 		bl	SX1278_SPIWrite
 700              	.LVL67:
 122:FML/Src/SX1278.c **** 	} else {
 701              		.loc 1 122 3 is_stmt 1 view .LVU166
 702 0166 0C22     		movs	r2, #12
 703 0168 3721     		movs	r1, #55
 704 016a 2046     		mov	r0, r4
 705 016c FFF7FEFF 		bl	SX1278_SPIWrite
 706              	.LVL68:
 707              	.LBE2:
 708 0170 A8E7     		b	.L29
 709              	.L33:
 710 0172 00BF     		.align	2
 711              	.L32:
 712 0174 0048E801 		.word	32000000
 713 0178 00000000 		.word	.LANCHOR0
 714 017c 00000000 		.word	.LANCHOR1
 715 0180 00000000 		.word	.LANCHOR2
 716 0184 00000000 		.word	.LANCHOR3
 717 0188 00000000 		.word	.LANCHOR4
 718              		.cfi_endproc
 719              	.LFE292:
 721              		.section	.text.SX1278_clearLoRaIrq,"ax",%progbits
 722              		.align	1
 723              		.global	SX1278_clearLoRaIrq
 724              		.syntax unified
 725              		.thumb
 726              		.thumb_func
 728              	SX1278_clearLoRaIrq:
 729              	.LVL69:
 730              	.LFB296:
 157:FML/Src/SX1278.c **** 
 158:FML/Src/SX1278.c **** void SX1278_clearLoRaIrq(SX1278_t *module) {
 731              		.loc 1 158 44 view -0
 732              		.cfi_startproc
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 18


 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              		.loc 1 158 44 is_stmt 0 view .LVU168
 736 0000 08B5     		push	{r3, lr}
 737              	.LCFI13:
 738              		.cfi_def_cfa_offset 8
 739              		.cfi_offset 3, -8
 740              		.cfi_offset 14, -4
 159:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegIrqFlags, 0xFF);
 741              		.loc 1 159 2 is_stmt 1 view .LVU169
 742 0002 FF22     		movs	r2, #255
 743 0004 1221     		movs	r1, #18
 744 0006 FFF7FEFF 		bl	SX1278_SPIWrite
 745              	.LVL70:
 160:FML/Src/SX1278.c **** }
 746              		.loc 1 160 1 is_stmt 0 view .LVU170
 747 000a 08BD     		pop	{r3, pc}
 748              		.cfi_endproc
 749              	.LFE296:
 751              		.section	.text.SX1278_LoRaEntryRx,"ax",%progbits
 752              		.align	1
 753              		.global	SX1278_LoRaEntryRx
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 758              	SX1278_LoRaEntryRx:
 759              	.LVL71:
 760              	.LFB297:
 161:FML/Src/SX1278.c **** 
 162:FML/Src/SX1278.c **** int SX1278_LoRaEntryRx(SX1278_t *module, uint8_t length, uint32_t timeout) {
 761              		.loc 1 162 76 is_stmt 1 view -0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              		.loc 1 162 76 is_stmt 0 view .LVU172
 766 0000 70B5     		push	{r4, r5, r6, lr}
 767              	.LCFI14:
 768              		.cfi_def_cfa_offset 16
 769              		.cfi_offset 4, -16
 770              		.cfi_offset 5, -12
 771              		.cfi_offset 6, -8
 772              		.cfi_offset 14, -4
 773 0002 0546     		mov	r5, r0
 774 0004 0E46     		mov	r6, r1
 775 0006 1446     		mov	r4, r2
 163:FML/Src/SX1278.c **** 	uint8_t addr;
 776              		.loc 1 163 2 is_stmt 1 view .LVU173
 164:FML/Src/SX1278.c **** 
 165:FML/Src/SX1278.c **** 	module->packetLength = length;
 777              		.loc 1 165 2 view .LVU174
 778              		.loc 1 165 23 is_stmt 0 view .LVU175
 779 0008 4175     		strb	r1, [r0, #21]
 166:FML/Src/SX1278.c **** 
 167:FML/Src/SX1278.c **** 	SX1278_config(module);		//Setting base parameter
 780              		.loc 1 167 2 is_stmt 1 view .LVU176
 781 000a FFF7FEFF 		bl	SX1278_config
 782              	.LVL72:
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 19


 168:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_PADAC, 0x84);	//Normal and RX
 783              		.loc 1 168 2 view .LVU177
 784 000e 8422     		movs	r2, #132
 785 0010 4D21     		movs	r1, #77
 786 0012 2846     		mov	r0, r5
 787 0014 FFF7FEFF 		bl	SX1278_SPIWrite
 788              	.LVL73:
 169:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegHopPeriod, 0xFF);	//No FHSS
 789              		.loc 1 169 2 view .LVU178
 790 0018 FF22     		movs	r2, #255
 791 001a 2421     		movs	r1, #36
 792 001c 2846     		mov	r0, r5
 793 001e FFF7FEFF 		bl	SX1278_SPIWrite
 794              	.LVL74:
 170:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_DIOMAPPING1, 0x01);//DIO=00,DIO1=00,DIO2=00, DIO3=01 (DIO0  RxDone)
 795              		.loc 1 170 2 view .LVU179
 796 0022 0122     		movs	r2, #1
 797 0024 4021     		movs	r1, #64
 798 0026 2846     		mov	r0, r5
 799 0028 FFF7FEFF 		bl	SX1278_SPIWrite
 800              	.LVL75:
 171:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegIrqFlagsMask, 0x3F);//Open RxDone interrupt & Timeout 0011 1111
 801              		.loc 1 171 2 view .LVU180
 802 002c 3F22     		movs	r2, #63
 803 002e 1121     		movs	r1, #17
 804 0030 2846     		mov	r0, r5
 805 0032 FFF7FEFF 		bl	SX1278_SPIWrite
 806              	.LVL76:
 172:FML/Src/SX1278.c **** 	SX1278_clearLoRaIrq(module);
 807              		.loc 1 172 2 view .LVU181
 808 0036 2846     		mov	r0, r5
 809 0038 FFF7FEFF 		bl	SX1278_clearLoRaIrq
 810              	.LVL77:
 173:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPayloadLength, length);//Payload Length 21byte(this register must di
 811              		.loc 1 173 2 view .LVU182
 812 003c 3246     		mov	r2, r6
 813 003e 2221     		movs	r1, #34
 814 0040 2846     		mov	r0, r5
 815 0042 FFF7FEFF 		bl	SX1278_SPIWrite
 816              	.LVL78:
 174:FML/Src/SX1278.c **** 	addr = SX1278_SPIRead(module, LR_RegFifoRxBaseAddr); //Read RxBaseAddr
 817              		.loc 1 174 2 view .LVU183
 818              		.loc 1 174 9 is_stmt 0 view .LVU184
 819 0046 0F21     		movs	r1, #15
 820 0048 2846     		mov	r0, r5
 821 004a FFF7FEFF 		bl	SX1278_SPIRead
 822              	.LVL79:
 823 004e 0246     		mov	r2, r0
 824              	.LVL80:
 175:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RxBaseAddr->FiFoAddrPtr
 825              		.loc 1 175 2 is_stmt 1 view .LVU185
 826 0050 0D21     		movs	r1, #13
 827 0052 2846     		mov	r0, r5
 828 0054 FFF7FEFF 		bl	SX1278_SPIWrite
 829              	.LVL81:
 176:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x8d);	//Mode//Low Frequency Mode
 830              		.loc 1 176 2 view .LVU186
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 20


 831 0058 8D22     		movs	r2, #141
 832 005a 0121     		movs	r1, #1
 833 005c 2846     		mov	r0, r5
 834 005e FFF7FEFF 		bl	SX1278_SPIWrite
 835              	.LVL82:
 177:FML/Src/SX1278.c **** 	//SX1278_SPIWrite(module, LR_RegOpMode,0x05);	//Continuous Rx Mode //High Frequency Mode
 178:FML/Src/SX1278.c **** 	module->readBytes = 0;
 836              		.loc 1 178 2 view .LVU187
 837              		.loc 1 178 20 is_stmt 0 view .LVU188
 838 0062 0023     		movs	r3, #0
 839 0064 85F81731 		strb	r3, [r5, #279]
 840 0068 06E0     		b	.L40
 841              	.L42:
 179:FML/Src/SX1278.c **** 
 180:FML/Src/SX1278.c **** 	while (1) {
 181:FML/Src/SX1278.c **** 		if ((SX1278_SPIRead(module, LR_RegModemStat) & 0x04) == 0x04) {	//Rx-on going RegModemStat
 182:FML/Src/SX1278.c **** 			module->status = RX;
 842              		.loc 1 182 4 is_stmt 1 view .LVU189
 843              		.loc 1 182 19 is_stmt 0 view .LVU190
 844 006a 0323     		movs	r3, #3
 845 006c AB75     		strb	r3, [r5, #22]
 183:FML/Src/SX1278.c **** 			return 1;
 846              		.loc 1 183 4 is_stmt 1 view .LVU191
 847              		.loc 1 183 11 is_stmt 0 view .LVU192
 848 006e 0120     		movs	r0, #1
 849              	.L36:
 184:FML/Src/SX1278.c **** 		}
 185:FML/Src/SX1278.c **** 		if (--timeout == 0) {
 186:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 187:FML/Src/SX1278.c **** 			SX1278_config(module);
 188:FML/Src/SX1278.c **** 			return 0;
 189:FML/Src/SX1278.c **** 		}
 190:FML/Src/SX1278.c **** 		SX1278_hw_DelayMs(1);
 191:FML/Src/SX1278.c **** 	}
 192:FML/Src/SX1278.c **** }
 850              		.loc 1 192 1 view .LVU193
 851 0070 70BD     		pop	{r4, r5, r6, pc}
 852              	.LVL83:
 853              	.L39:
 190:FML/Src/SX1278.c **** 	}
 854              		.loc 1 190 3 is_stmt 1 view .LVU194
 855 0072 0120     		movs	r0, #1
 856 0074 FFF7FEFF 		bl	SX1278_hw_DelayMs
 857              	.LVL84:
 180:FML/Src/SX1278.c **** 		if ((SX1278_SPIRead(module, LR_RegModemStat) & 0x04) == 0x04) {	//Rx-on going RegModemStat
 858              		.loc 1 180 8 view .LVU195
 859              	.L40:
 180:FML/Src/SX1278.c **** 		if ((SX1278_SPIRead(module, LR_RegModemStat) & 0x04) == 0x04) {	//Rx-on going RegModemStat
 860              		.loc 1 180 2 view .LVU196
 181:FML/Src/SX1278.c **** 			module->status = RX;
 861              		.loc 1 181 3 view .LVU197
 181:FML/Src/SX1278.c **** 			module->status = RX;
 862              		.loc 1 181 8 is_stmt 0 view .LVU198
 863 0078 1821     		movs	r1, #24
 864 007a 2846     		mov	r0, r5
 865 007c FFF7FEFF 		bl	SX1278_SPIRead
 866              	.LVL85:
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 21


 181:FML/Src/SX1278.c **** 			module->status = RX;
 867              		.loc 1 181 6 view .LVU199
 868 0080 10F0040F 		tst	r0, #4
 869 0084 F1D1     		bne	.L42
 185:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 870              		.loc 1 185 3 is_stmt 1 view .LVU200
 871              	.LVL86:
 185:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 872              		.loc 1 185 6 is_stmt 0 view .LVU201
 873 0086 013C     		subs	r4, r4, #1
 874              	.LVL87:
 185:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 875              		.loc 1 185 6 view .LVU202
 876 0088 F3D1     		bne	.L39
 186:FML/Src/SX1278.c **** 			SX1278_config(module);
 877              		.loc 1 186 4 is_stmt 1 view .LVU203
 878 008a 2868     		ldr	r0, [r5]
 879 008c FFF7FEFF 		bl	SX1278_hw_Reset
 880              	.LVL88:
 187:FML/Src/SX1278.c **** 			return 0;
 881              		.loc 1 187 4 view .LVU204
 882 0090 2846     		mov	r0, r5
 883 0092 FFF7FEFF 		bl	SX1278_config
 884              	.LVL89:
 188:FML/Src/SX1278.c **** 		}
 885              		.loc 1 188 4 view .LVU205
 188:FML/Src/SX1278.c **** 		}
 886              		.loc 1 188 11 is_stmt 0 view .LVU206
 887 0096 0020     		movs	r0, #0
 888 0098 EAE7     		b	.L36
 889              		.cfi_endproc
 890              	.LFE297:
 892              		.section	.rodata.SX1278_LoRaRxPacket.str1.4,"aMS",%progbits,1
 893              		.align	2
 894              	.LC0:
 895 0000 6C6F7261 		.ascii	"lora%d has received %dbytes\015\012\000"
 895      25642068 
 895      61732072 
 895      65636569 
 895      76656420 
 896              		.section	.text.SX1278_LoRaRxPacket,"ax",%progbits
 897              		.align	1
 898              		.global	SX1278_LoRaRxPacket
 899              		.syntax unified
 900              		.thumb
 901              		.thumb_func
 903              	SX1278_LoRaRxPacket:
 904              	.LVL90:
 905              	.LFB298:
 193:FML/Src/SX1278.c **** 
 194:FML/Src/SX1278.c **** /**
 195:FML/Src/SX1278.c ****  * @brief 将DIO0设置为RxDone中断，此函数作为DIO0连接引脚的中断回调函数
 196:FML/Src/SX1278.c ****  * 
 197:FML/Src/SX1278.c ****  * @param module 
 198:FML/Src/SX1278.c ****  * @return uint8_t 
 199:FML/Src/SX1278.c ****  */
 200:FML/Src/SX1278.c **** uint8_t SX1278_LoRaRxPacket(SX1278_t *module) {
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 22


 906              		.loc 1 200 47 is_stmt 1 view -0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 0
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 910              		.loc 1 200 47 is_stmt 0 view .LVU208
 911 0000 70B5     		push	{r4, r5, r6, lr}
 912              	.LCFI15:
 913              		.cfi_def_cfa_offset 16
 914              		.cfi_offset 4, -16
 915              		.cfi_offset 5, -12
 916              		.cfi_offset 6, -8
 917              		.cfi_offset 14, -4
 918 0002 0446     		mov	r4, r0
 201:FML/Src/SX1278.c **** 	unsigned char addr;
 919              		.loc 1 201 2 is_stmt 1 view .LVU209
 202:FML/Src/SX1278.c **** 	unsigned char packet_size;
 920              		.loc 1 202 2 view .LVU210
 203:FML/Src/SX1278.c **** 
 204:FML/Src/SX1278.c **** 	if (SX1278_hw_GetDIO0(module->hw)) {
 921              		.loc 1 204 2 view .LVU211
 922              		.loc 1 204 6 is_stmt 0 view .LVU212
 923 0004 0068     		ldr	r0, [r0]
 924              	.LVL91:
 925              		.loc 1 204 6 view .LVU213
 926 0006 FFF7FEFF 		bl	SX1278_hw_GetDIO0
 927              	.LVL92:
 928              		.loc 1 204 5 view .LVU214
 929 000a A8B9     		cbnz	r0, .L48
 930              	.L44:
 205:FML/Src/SX1278.c **** 		memset(module->rxBuffer, 0x00, SX1278_MAX_PACKET);
 206:FML/Src/SX1278.c **** 
 207:FML/Src/SX1278.c **** 		addr = SX1278_SPIRead(module, LR_RegFifoRxCurrentaddr); //last packet addr
 208:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RxBaseAddr -> FiFoAddrPtr
 209:FML/Src/SX1278.c **** 
 210:FML/Src/SX1278.c **** 		if (module->LoRa_SF == SX1278_LORA_SF_6) { //When SpreadFactor is six,will used Implicit Header m
 211:FML/Src/SX1278.c **** 			packet_size = module->packetLength;
 212:FML/Src/SX1278.c **** 		} else {
 213:FML/Src/SX1278.c **** 			packet_size = SX1278_SPIRead(module, LR_RegRxNbBytes); //Number for received bytes
 214:FML/Src/SX1278.c **** 		}
 215:FML/Src/SX1278.c **** 
 216:FML/Src/SX1278.c **** 		SX1278_SPIBurstRead(module, 0x00, module->rxBuffer, packet_size);
 217:FML/Src/SX1278.c **** 		module->readBytes = packet_size;
 218:FML/Src/SX1278.c **** 		SX1278_clearLoRaIrq(module);
 219:FML/Src/SX1278.c **** 	}
 220:FML/Src/SX1278.c **** 
 221:FML/Src/SX1278.c **** 	shellPrint(&shell,"lora%d has received %dbytes\r\n",((uint32_t)module - (uint32_t)&Lora_dev[0])/((
 931              		.loc 1 221 2 is_stmt 1 view .LVU215
 932              		.loc 1 221 74 is_stmt 0 view .LVU216
 933 000c 1D4A     		ldr	r2, .L49
 934              		.loc 1 221 72 view .LVU217
 935 000e A21A     		subs	r2, r4, r2
 936              		.loc 1 221 2 view .LVU218
 937 0010 D208     		lsrs	r2, r2, #3
 938 0012 1D4B     		ldr	r3, .L49+4
 939 0014 A3FB0232 		umull	r3, r2, r3, r2
 940 0018 1C4D     		ldr	r5, .L49+8
 941 001a 94F81731 		ldrb	r3, [r4, #279]	@ zero_extendqisi2
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 23


 942 001e 5208     		lsrs	r2, r2, #1
 943 0020 1B49     		ldr	r1, .L49+12
 944 0022 2846     		mov	r0, r5
 945 0024 FFF7FEFF 		bl	shellPrint
 946              	.LVL93:
 222:FML/Src/SX1278.c **** 	shellPrint(&shell,module->rxBuffer);
 947              		.loc 1 222 2 is_stmt 1 view .LVU219
 948 0028 04F11701 		add	r1, r4, #23
 949 002c 2846     		mov	r0, r5
 950 002e FFF7FEFF 		bl	shellPrint
 951              	.LVL94:
 223:FML/Src/SX1278.c **** 	return module->readBytes;
 952              		.loc 1 223 2 view .LVU220
 224:FML/Src/SX1278.c **** }
 953              		.loc 1 224 1 is_stmt 0 view .LVU221
 954 0032 94F81701 		ldrb	r0, [r4, #279]	@ zero_extendqisi2
 955 0036 70BD     		pop	{r4, r5, r6, pc}
 956              	.LVL95:
 957              	.L48:
 205:FML/Src/SX1278.c **** 
 958              		.loc 1 205 3 is_stmt 1 view .LVU222
 205:FML/Src/SX1278.c **** 
 959              		.loc 1 205 16 is_stmt 0 view .LVU223
 960 0038 04F11706 		add	r6, r4, #23
 205:FML/Src/SX1278.c **** 
 961              		.loc 1 205 3 view .LVU224
 962 003c 4FF48072 		mov	r2, #256
 963 0040 0021     		movs	r1, #0
 964 0042 3046     		mov	r0, r6
 965 0044 FFF7FEFF 		bl	memset
 966              	.LVL96:
 207:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RxBaseAddr -> FiFoAddrPtr
 967              		.loc 1 207 3 is_stmt 1 view .LVU225
 207:FML/Src/SX1278.c **** 		SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RxBaseAddr -> FiFoAddrPtr
 968              		.loc 1 207 10 is_stmt 0 view .LVU226
 969 0048 1021     		movs	r1, #16
 970 004a 2046     		mov	r0, r4
 971 004c FFF7FEFF 		bl	SX1278_SPIRead
 972              	.LVL97:
 973 0050 0246     		mov	r2, r0
 974              	.LVL98:
 208:FML/Src/SX1278.c **** 
 975              		.loc 1 208 3 is_stmt 1 view .LVU227
 976 0052 0D21     		movs	r1, #13
 977 0054 2046     		mov	r0, r4
 978 0056 FFF7FEFF 		bl	SX1278_SPIWrite
 979              	.LVL99:
 210:FML/Src/SX1278.c **** 			packet_size = module->packetLength;
 980              		.loc 1 210 3 view .LVU228
 210:FML/Src/SX1278.c **** 			packet_size = module->packetLength;
 981              		.loc 1 210 13 is_stmt 0 view .LVU229
 982 005a 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 210:FML/Src/SX1278.c **** 			packet_size = module->packetLength;
 983              		.loc 1 210 6 view .LVU230
 984 005c 63B9     		cbnz	r3, .L45
 211:FML/Src/SX1278.c **** 		} else {
 985              		.loc 1 211 4 is_stmt 1 view .LVU231
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 24


 211:FML/Src/SX1278.c **** 		} else {
 986              		.loc 1 211 16 is_stmt 0 view .LVU232
 987 005e 657D     		ldrb	r5, [r4, #21]	@ zero_extendqisi2
 988              	.LVL100:
 989              	.L46:
 216:FML/Src/SX1278.c **** 		module->readBytes = packet_size;
 990              		.loc 1 216 3 is_stmt 1 view .LVU233
 991 0060 2B46     		mov	r3, r5
 992 0062 3246     		mov	r2, r6
 993 0064 0021     		movs	r1, #0
 994 0066 2046     		mov	r0, r4
 995 0068 FFF7FEFF 		bl	SX1278_SPIBurstRead
 996              	.LVL101:
 217:FML/Src/SX1278.c **** 		SX1278_clearLoRaIrq(module);
 997              		.loc 1 217 3 view .LVU234
 217:FML/Src/SX1278.c **** 		SX1278_clearLoRaIrq(module);
 998              		.loc 1 217 21 is_stmt 0 view .LVU235
 999 006c 84F81751 		strb	r5, [r4, #279]
 218:FML/Src/SX1278.c **** 	}
 1000              		.loc 1 218 3 is_stmt 1 view .LVU236
 1001 0070 2046     		mov	r0, r4
 1002 0072 FFF7FEFF 		bl	SX1278_clearLoRaIrq
 1003              	.LVL102:
 1004 0076 C9E7     		b	.L44
 1005              	.LVL103:
 1006              	.L45:
 213:FML/Src/SX1278.c **** 		}
 1007              		.loc 1 213 4 view .LVU237
 213:FML/Src/SX1278.c **** 		}
 1008              		.loc 1 213 18 is_stmt 0 view .LVU238
 1009 0078 1321     		movs	r1, #19
 1010 007a 2046     		mov	r0, r4
 1011 007c FFF7FEFF 		bl	SX1278_SPIRead
 1012              	.LVL104:
 1013 0080 0546     		mov	r5, r0
 1014              	.LVL105:
 213:FML/Src/SX1278.c **** 		}
 1015              		.loc 1 213 18 view .LVU239
 1016 0082 EDE7     		b	.L46
 1017              	.L50:
 1018              		.align	2
 1019              	.L49:
 1020 0084 00000000 		.word	.LANCHOR5
 1021 0088 0FEAA00E 		.word	245426703
 1022 008c 00000000 		.word	shell
 1023 0090 00000000 		.word	.LC0
 1024              		.cfi_endproc
 1025              	.LFE298:
 1027              		.section	.text.SX1278_LoRaEntryTx,"ax",%progbits
 1028              		.align	1
 1029              		.global	SX1278_LoRaEntryTx
 1030              		.syntax unified
 1031              		.thumb
 1032              		.thumb_func
 1034              	SX1278_LoRaEntryTx:
 1035              	.LVL106:
 1036              	.LFB299:
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 25


 225:FML/Src/SX1278.c **** 
 226:FML/Src/SX1278.c **** int SX1278_LoRaEntryTx(SX1278_t *module, uint8_t length, uint32_t timeout) {
 1037              		.loc 1 226 76 is_stmt 1 view -0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 0
 1040              		@ frame_needed = 0, uses_anonymous_args = 0
 1041              		.loc 1 226 76 is_stmt 0 view .LVU241
 1042 0000 70B5     		push	{r4, r5, r6, lr}
 1043              	.LCFI16:
 1044              		.cfi_def_cfa_offset 16
 1045              		.cfi_offset 4, -16
 1046              		.cfi_offset 5, -12
 1047              		.cfi_offset 6, -8
 1048              		.cfi_offset 14, -4
 1049 0002 0546     		mov	r5, r0
 1050 0004 0E46     		mov	r6, r1
 1051 0006 1446     		mov	r4, r2
 227:FML/Src/SX1278.c **** 	uint8_t addr;
 1052              		.loc 1 227 2 is_stmt 1 view .LVU242
 228:FML/Src/SX1278.c **** 	uint8_t temp;
 1053              		.loc 1 228 2 view .LVU243
 229:FML/Src/SX1278.c **** 
 230:FML/Src/SX1278.c **** 	module->packetLength = length;
 1054              		.loc 1 230 2 view .LVU244
 1055              		.loc 1 230 23 is_stmt 0 view .LVU245
 1056 0008 4175     		strb	r1, [r0, #21]
 231:FML/Src/SX1278.c **** 
 232:FML/Src/SX1278.c **** 	SX1278_config(module); //setting base parameter
 1057              		.loc 1 232 2 is_stmt 1 view .LVU246
 1058 000a FFF7FEFF 		bl	SX1278_config
 1059              	.LVL107:
 233:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_PADAC, 0x87);	//Tx for 20dBm
 1060              		.loc 1 233 2 view .LVU247
 1061 000e 8722     		movs	r2, #135
 1062 0010 4D21     		movs	r1, #77
 1063 0012 2846     		mov	r0, r5
 1064 0014 FFF7FEFF 		bl	SX1278_SPIWrite
 1065              	.LVL108:
 234:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegHopPeriod, 0x00); //RegHopPeriod NO FHSS
 1066              		.loc 1 234 2 view .LVU248
 1067 0018 0022     		movs	r2, #0
 1068 001a 2421     		movs	r1, #36
 1069 001c 2846     		mov	r0, r5
 1070 001e FFF7FEFF 		bl	SX1278_SPIWrite
 1071              	.LVL109:
 235:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, REG_LR_DIOMAPPING1, 0x41); //DIO0=01, DIO1=00,DIO2=00, DIO3=01
 1072              		.loc 1 235 2 view .LVU249
 1073 0022 4122     		movs	r2, #65
 1074 0024 4021     		movs	r1, #64
 1075 0026 2846     		mov	r0, r5
 1076 0028 FFF7FEFF 		bl	SX1278_SPIWrite
 1077              	.LVL110:
 236:FML/Src/SX1278.c **** 	SX1278_clearLoRaIrq(module);
 1078              		.loc 1 236 2 view .LVU250
 1079 002c 2846     		mov	r0, r5
 1080 002e FFF7FEFF 		bl	SX1278_clearLoRaIrq
 1081              	.LVL111:
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 26


 237:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegIrqFlagsMask, 0xF7); //Open TxDone interrupt
 1082              		.loc 1 237 2 view .LVU251
 1083 0032 F722     		movs	r2, #247
 1084 0034 1121     		movs	r1, #17
 1085 0036 2846     		mov	r0, r5
 1086 0038 FFF7FEFF 		bl	SX1278_SPIWrite
 1087              	.LVL112:
 238:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegPayloadLength, length); //RegPayloadLength 21byte
 1088              		.loc 1 238 2 view .LVU252
 1089 003c 3246     		mov	r2, r6
 1090 003e 2221     		movs	r1, #34
 1091 0040 2846     		mov	r0, r5
 1092 0042 FFF7FEFF 		bl	SX1278_SPIWrite
 1093              	.LVL113:
 239:FML/Src/SX1278.c **** 	addr = SX1278_SPIRead(module, LR_RegFifoTxBaseAddr); //RegFiFoTxBaseAddr
 1094              		.loc 1 239 2 view .LVU253
 1095              		.loc 1 239 9 is_stmt 0 view .LVU254
 1096 0046 0E21     		movs	r1, #14
 1097 0048 2846     		mov	r0, r5
 1098 004a FFF7FEFF 		bl	SX1278_SPIRead
 1099              	.LVL114:
 1100 004e 0246     		mov	r2, r0
 1101              	.LVL115:
 240:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegFifoAddrPtr, addr); //RegFifoAddrPtr
 1102              		.loc 1 240 2 is_stmt 1 view .LVU255
 1103 0050 0D21     		movs	r1, #13
 1104 0052 2846     		mov	r0, r5
 1105 0054 FFF7FEFF 		bl	SX1278_SPIWrite
 1106              	.LVL116:
 1107              	.L54:
 241:FML/Src/SX1278.c **** 
 242:FML/Src/SX1278.c **** 	while (1) {
 1108              		.loc 1 242 2 view .LVU256
 243:FML/Src/SX1278.c **** 		temp = SX1278_SPIRead(module, LR_RegPayloadLength);
 1109              		.loc 1 243 3 view .LVU257
 1110              		.loc 1 243 10 is_stmt 0 view .LVU258
 1111 0058 2221     		movs	r1, #34
 1112 005a 2846     		mov	r0, r5
 1113 005c FFF7FEFF 		bl	SX1278_SPIRead
 1114              	.LVL117:
 244:FML/Src/SX1278.c **** 		if (temp == length) {
 1115              		.loc 1 244 3 is_stmt 1 view .LVU259
 1116              		.loc 1 244 6 is_stmt 0 view .LVU260
 1117 0060 8642     		cmp	r6, r0
 1118 0062 09D0     		beq	.L56
 245:FML/Src/SX1278.c **** 			module->status = TX;
 246:FML/Src/SX1278.c **** 			return 1;
 247:FML/Src/SX1278.c **** 		}
 248:FML/Src/SX1278.c **** 
 249:FML/Src/SX1278.c **** 		if (--timeout == 0) {
 1119              		.loc 1 249 3 is_stmt 1 view .LVU261
 1120              	.LVL118:
 1121              		.loc 1 249 6 is_stmt 0 view .LVU262
 1122 0064 013C     		subs	r4, r4, #1
 1123              	.LVL119:
 1124              		.loc 1 249 6 view .LVU263
 1125 0066 F7D1     		bne	.L54
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 27


 250:FML/Src/SX1278.c **** 			SX1278_hw_Reset(module->hw);
 1126              		.loc 1 250 4 is_stmt 1 view .LVU264
 1127 0068 2868     		ldr	r0, [r5]
 1128              	.LVL120:
 1129              		.loc 1 250 4 is_stmt 0 view .LVU265
 1130 006a FFF7FEFF 		bl	SX1278_hw_Reset
 1131              	.LVL121:
 251:FML/Src/SX1278.c **** 			SX1278_config(module);
 1132              		.loc 1 251 4 is_stmt 1 view .LVU266
 1133 006e 2846     		mov	r0, r5
 1134 0070 FFF7FEFF 		bl	SX1278_config
 1135              	.LVL122:
 252:FML/Src/SX1278.c **** 			return 0;
 1136              		.loc 1 252 4 view .LVU267
 1137              		.loc 1 252 11 is_stmt 0 view .LVU268
 1138 0074 0020     		movs	r0, #0
 1139 0076 02E0     		b	.L51
 1140              	.LVL123:
 1141              	.L56:
 245:FML/Src/SX1278.c **** 			return 1;
 1142              		.loc 1 245 4 is_stmt 1 view .LVU269
 245:FML/Src/SX1278.c **** 			return 1;
 1143              		.loc 1 245 19 is_stmt 0 view .LVU270
 1144 0078 0223     		movs	r3, #2
 1145 007a AB75     		strb	r3, [r5, #22]
 246:FML/Src/SX1278.c **** 		}
 1146              		.loc 1 246 4 is_stmt 1 view .LVU271
 246:FML/Src/SX1278.c **** 		}
 1147              		.loc 1 246 11 is_stmt 0 view .LVU272
 1148 007c 0120     		movs	r0, #1
 1149              	.LVL124:
 1150              	.L51:
 253:FML/Src/SX1278.c **** 		}
 254:FML/Src/SX1278.c **** 	}
 255:FML/Src/SX1278.c **** }
 1151              		.loc 1 255 1 view .LVU273
 1152 007e 70BD     		pop	{r4, r5, r6, pc}
 1153              		.loc 1 255 1 view .LVU274
 1154              		.cfi_endproc
 1155              	.LFE299:
 1157              		.section	.text.SX1278_LoRaTxPacket,"ax",%progbits
 1158              		.align	1
 1159              		.global	SX1278_LoRaTxPacket
 1160              		.syntax unified
 1161              		.thumb
 1162              		.thumb_func
 1164              	SX1278_LoRaTxPacket:
 1165              	.LVL125:
 1166              	.LFB300:
 256:FML/Src/SX1278.c **** 
 257:FML/Src/SX1278.c **** int SX1278_LoRaTxPacket(SX1278_t *module, uint8_t *txBuffer, uint8_t length,
 258:FML/Src/SX1278.c **** 		uint32_t timeout) {
 1167              		.loc 1 258 21 is_stmt 1 view -0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              		.loc 1 258 21 is_stmt 0 view .LVU276
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 28


 1172 0000 70B5     		push	{r4, r5, r6, lr}
 1173              	.LCFI17:
 1174              		.cfi_def_cfa_offset 16
 1175              		.cfi_offset 4, -16
 1176              		.cfi_offset 5, -12
 1177              		.cfi_offset 6, -8
 1178              		.cfi_offset 14, -4
 1179 0002 0546     		mov	r5, r0
 1180 0004 1C46     		mov	r4, r3
 259:FML/Src/SX1278.c **** 	SX1278_SPIBurstWrite(module, 0x00, txBuffer, length);
 1181              		.loc 1 259 2 is_stmt 1 view .LVU277
 1182 0006 1346     		mov	r3, r2
 1183              	.LVL126:
 1184              		.loc 1 259 2 is_stmt 0 view .LVU278
 1185 0008 0A46     		mov	r2, r1
 1186              	.LVL127:
 1187              		.loc 1 259 2 view .LVU279
 1188 000a 0021     		movs	r1, #0
 1189              	.LVL128:
 1190              		.loc 1 259 2 view .LVU280
 1191 000c FFF7FEFF 		bl	SX1278_SPIBurstWrite
 1192              	.LVL129:
 260:FML/Src/SX1278.c **** 	SX1278_SPIWrite(module, LR_RegOpMode, 0x8b);	//Tx Mode
 1193              		.loc 1 260 2 is_stmt 1 view .LVU281
 1194 0010 8B22     		movs	r2, #139
 1195 0012 0121     		movs	r1, #1
 1196 0014 2846     		mov	r0, r5
 1197 0016 FFF7FEFF 		bl	SX1278_SPIWrite
 1198              	.LVL130:
 261:FML/Src/SX1278.c **** 	SX1278_hw_DelayMs(1000);
 1199              		.loc 1 261 2 view .LVU282
 1200 001a 4FF47A70 		mov	r0, #1000
 1201 001e FFF7FEFF 		bl	SX1278_hw_DelayMs
 1202              	.LVL131:
 1203 0022 0FE0     		b	.L61
 1204              	.L63:
 262:FML/Src/SX1278.c **** 	while (1) {
 263:FML/Src/SX1278.c **** 		if (SX1278_hw_GetDIO0(module->hw)) { //if(Get_NIRQ()) //Packet send over
 264:FML/Src/SX1278.c **** 			SX1278_SPIRead(module, LR_RegIrqFlags);
 1205              		.loc 1 264 4 view .LVU283
 1206 0024 1221     		movs	r1, #18
 1207 0026 2846     		mov	r0, r5
 1208 0028 FFF7FEFF 		bl	SX1278_SPIRead
 1209              	.LVL132:
 265:FML/Src/SX1278.c **** 			SX1278_clearLoRaIrq(module); //Clear irq
 1210              		.loc 1 265 4 view .LVU284
 1211 002c 2846     		mov	r0, r5
 1212 002e FFF7FEFF 		bl	SX1278_clearLoRaIrq
 1213              	.LVL133:
 266:FML/Src/SX1278.c **** 			SX1278_standby(module); //Entry Standby mode
 1214              		.loc 1 266 4 view .LVU285
 1215 0032 2846     		mov	r0, r5
 1216 0034 FFF7FEFF 		bl	SX1278_standby
 1217              	.LVL134:
 267:FML/Src/SX1278.c **** 			return 1;
 1218              		.loc 1 267 4 view .LVU286
 1219              		.loc 1 267 11 is_stmt 0 view .LVU287
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 29


 1220 0038 0126     		movs	r6, #1
 1221              	.L57:
 268:FML/Src/SX1278.c **** 		}
 269:FML/Src/SX1278.c **** 
 270:FML/Src/SX1278.c **** 		if (--timeout == 0) {
 271:FML/Src/SX1278.c **** 			// SX1278_hw_Reset(module->hw);
 272:FML/Src/SX1278.c **** 			// SX1278_config(module);
 273:FML/Src/SX1278.c **** 			SX1278_SPIRead(module, LR_RegIrqFlags);
 274:FML/Src/SX1278.c **** 			SX1278_clearLoRaIrq(module); //Clear irq
 275:FML/Src/SX1278.c **** 			SX1278_standby(module); //Entry Standby mode
 276:FML/Src/SX1278.c **** 			return 0;
 277:FML/Src/SX1278.c **** 		}
 278:FML/Src/SX1278.c **** 		SX1278_hw_DelayMs(1);
 279:FML/Src/SX1278.c **** 	}
 280:FML/Src/SX1278.c **** }
 1222              		.loc 1 280 1 view .LVU288
 1223 003a 3046     		mov	r0, r6
 1224 003c 70BD     		pop	{r4, r5, r6, pc}
 1225              	.LVL135:
 1226              	.L60:
 278:FML/Src/SX1278.c **** 	}
 1227              		.loc 1 278 3 is_stmt 1 view .LVU289
 1228 003e 0120     		movs	r0, #1
 1229 0040 FFF7FEFF 		bl	SX1278_hw_DelayMs
 1230              	.LVL136:
 262:FML/Src/SX1278.c **** 		if (SX1278_hw_GetDIO0(module->hw)) { //if(Get_NIRQ()) //Packet send over
 1231              		.loc 1 262 8 view .LVU290
 1232              	.L61:
 262:FML/Src/SX1278.c **** 		if (SX1278_hw_GetDIO0(module->hw)) { //if(Get_NIRQ()) //Packet send over
 1233              		.loc 1 262 2 view .LVU291
 263:FML/Src/SX1278.c **** 			SX1278_SPIRead(module, LR_RegIrqFlags);
 1234              		.loc 1 263 3 view .LVU292
 263:FML/Src/SX1278.c **** 			SX1278_SPIRead(module, LR_RegIrqFlags);
 1235              		.loc 1 263 7 is_stmt 0 view .LVU293
 1236 0044 2868     		ldr	r0, [r5]
 1237 0046 FFF7FEFF 		bl	SX1278_hw_GetDIO0
 1238              	.LVL137:
 263:FML/Src/SX1278.c **** 			SX1278_SPIRead(module, LR_RegIrqFlags);
 1239              		.loc 1 263 6 view .LVU294
 1240 004a 0646     		mov	r6, r0
 1241 004c 0028     		cmp	r0, #0
 1242 004e E9D1     		bne	.L63
 270:FML/Src/SX1278.c **** 			// SX1278_hw_Reset(module->hw);
 1243              		.loc 1 270 3 is_stmt 1 view .LVU295
 1244              	.LVL138:
 270:FML/Src/SX1278.c **** 			// SX1278_hw_Reset(module->hw);
 1245              		.loc 1 270 6 is_stmt 0 view .LVU296
 1246 0050 013C     		subs	r4, r4, #1
 1247              	.LVL139:
 270:FML/Src/SX1278.c **** 			// SX1278_hw_Reset(module->hw);
 1248              		.loc 1 270 6 view .LVU297
 1249 0052 F4D1     		bne	.L60
 273:FML/Src/SX1278.c **** 			SX1278_clearLoRaIrq(module); //Clear irq
 1250              		.loc 1 273 4 is_stmt 1 view .LVU298
 1251 0054 1221     		movs	r1, #18
 1252 0056 2846     		mov	r0, r5
 1253 0058 FFF7FEFF 		bl	SX1278_SPIRead
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 30


 1254              	.LVL140:
 274:FML/Src/SX1278.c **** 			SX1278_standby(module); //Entry Standby mode
 1255              		.loc 1 274 4 view .LVU299
 1256 005c 2846     		mov	r0, r5
 1257 005e FFF7FEFF 		bl	SX1278_clearLoRaIrq
 1258              	.LVL141:
 275:FML/Src/SX1278.c **** 			return 0;
 1259              		.loc 1 275 4 view .LVU300
 1260 0062 2846     		mov	r0, r5
 1261 0064 FFF7FEFF 		bl	SX1278_standby
 1262              	.LVL142:
 276:FML/Src/SX1278.c **** 		}
 1263              		.loc 1 276 4 view .LVU301
 276:FML/Src/SX1278.c **** 		}
 1264              		.loc 1 276 11 is_stmt 0 view .LVU302
 1265 0068 E7E7     		b	.L57
 1266              		.cfi_endproc
 1267              	.LFE300:
 1269              		.section	.text.SX1278_init,"ax",%progbits
 1270              		.align	1
 1271              		.global	SX1278_init
 1272              		.syntax unified
 1273              		.thumb
 1274              		.thumb_func
 1276              	SX1278_init:
 1277              	.LVL143:
 1278              	.LFB301:
 281:FML/Src/SX1278.c **** 
 282:FML/Src/SX1278.c **** void SX1278_init(SX1278_t *module, uint64_t frequency, uint8_t power,
 283:FML/Src/SX1278.c **** 		uint8_t LoRa_SF, uint8_t LoRa_BW, uint8_t LoRa_CR,
 284:FML/Src/SX1278.c **** 		uint8_t LoRa_CRC_sum, uint8_t packetLength) {
 1279              		.loc 1 284 47 is_stmt 1 view -0
 1280              		.cfi_startproc
 1281              		@ args = 24, pretend = 0, frame = 0
 1282              		@ frame_needed = 0, uses_anonymous_args = 0
 1283              		.loc 1 284 47 is_stmt 0 view .LVU304
 1284 0000 70B5     		push	{r4, r5, r6, lr}
 1285              	.LCFI18:
 1286              		.cfi_def_cfa_offset 16
 1287              		.cfi_offset 4, -16
 1288              		.cfi_offset 5, -12
 1289              		.cfi_offset 6, -8
 1290              		.cfi_offset 14, -4
 1291 0002 0446     		mov	r4, r0
 1292 0004 1646     		mov	r6, r2
 1293 0006 1D46     		mov	r5, r3
 285:FML/Src/SX1278.c **** 	SX1278_hw_init(module->hw);
 1294              		.loc 1 285 2 is_stmt 1 view .LVU305
 1295 0008 0068     		ldr	r0, [r0]
 1296              	.LVL144:
 1297              		.loc 1 285 2 is_stmt 0 view .LVU306
 1298 000a FFF7FEFF 		bl	SX1278_hw_init
 1299              	.LVL145:
 286:FML/Src/SX1278.c **** 	module->frequency = frequency;
 1300              		.loc 1 286 2 is_stmt 1 view .LVU307
 1301              		.loc 1 286 20 is_stmt 0 view .LVU308
 1302 000e A660     		str	r6, [r4, #8]
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 31


 1303 0010 E560     		str	r5, [r4, #12]
 287:FML/Src/SX1278.c **** 	module->power = power;
 1304              		.loc 1 287 2 is_stmt 1 view .LVU309
 1305              		.loc 1 287 16 is_stmt 0 view .LVU310
 1306 0012 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 1307 0016 2374     		strb	r3, [r4, #16]
 288:FML/Src/SX1278.c **** 	module->LoRa_SF = LoRa_SF;
 1308              		.loc 1 288 2 is_stmt 1 view .LVU311
 1309              		.loc 1 288 18 is_stmt 0 view .LVU312
 1310 0018 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 1311 001c 6374     		strb	r3, [r4, #17]
 289:FML/Src/SX1278.c **** 	module->LoRa_BW = LoRa_BW;
 1312              		.loc 1 289 2 is_stmt 1 view .LVU313
 1313              		.loc 1 289 18 is_stmt 0 view .LVU314
 1314 001e 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 1315 0022 A374     		strb	r3, [r4, #18]
 290:FML/Src/SX1278.c **** 	module->LoRa_CR = LoRa_CR;
 1316              		.loc 1 290 2 is_stmt 1 view .LVU315
 1317              		.loc 1 290 18 is_stmt 0 view .LVU316
 1318 0024 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 1319 0028 E374     		strb	r3, [r4, #19]
 291:FML/Src/SX1278.c **** 	module->LoRa_CRC_sum = LoRa_CRC_sum;
 1320              		.loc 1 291 2 is_stmt 1 view .LVU317
 1321              		.loc 1 291 23 is_stmt 0 view .LVU318
 1322 002a 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 1323 002e 2375     		strb	r3, [r4, #20]
 292:FML/Src/SX1278.c **** 	module->packetLength = packetLength;
 1324              		.loc 1 292 2 is_stmt 1 view .LVU319
 1325              		.loc 1 292 23 is_stmt 0 view .LVU320
 1326 0030 9DF82430 		ldrb	r3, [sp, #36]	@ zero_extendqisi2
 1327 0034 6375     		strb	r3, [r4, #21]
 293:FML/Src/SX1278.c **** 	SX1278_config(module);
 1328              		.loc 1 293 2 is_stmt 1 view .LVU321
 1329 0036 2046     		mov	r0, r4
 1330 0038 FFF7FEFF 		bl	SX1278_config
 1331              	.LVL146:
 294:FML/Src/SX1278.c **** }
 1332              		.loc 1 294 1 is_stmt 0 view .LVU322
 1333 003c 70BD     		pop	{r4, r5, r6, pc}
 1334              		.loc 1 294 1 view .LVU323
 1335              		.cfi_endproc
 1336              	.LFE301:
 1338              		.section	.text.SX1278_transmit,"ax",%progbits
 1339              		.align	1
 1340              		.global	SX1278_transmit
 1341              		.syntax unified
 1342              		.thumb
 1343              		.thumb_func
 1345              	SX1278_transmit:
 1346              	.LVL147:
 1347              	.LFB302:
 295:FML/Src/SX1278.c **** 
 296:FML/Src/SX1278.c **** int SX1278_transmit(SX1278_t *module, uint8_t *txBuf, uint8_t length,
 297:FML/Src/SX1278.c **** 		uint32_t timeout) {
 1348              		.loc 1 297 21 is_stmt 1 view -0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 32


 1351              		@ frame_needed = 0, uses_anonymous_args = 0
 1352              		.loc 1 297 21 is_stmt 0 view .LVU325
 1353 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1354              	.LCFI19:
 1355              		.cfi_def_cfa_offset 24
 1356              		.cfi_offset 3, -24
 1357              		.cfi_offset 4, -20
 1358              		.cfi_offset 5, -16
 1359              		.cfi_offset 6, -12
 1360              		.cfi_offset 7, -8
 1361              		.cfi_offset 14, -4
 1362 0002 0646     		mov	r6, r0
 1363 0004 0F46     		mov	r7, r1
 1364 0006 1446     		mov	r4, r2
 1365 0008 1D46     		mov	r5, r3
 298:FML/Src/SX1278.c **** 	if (SX1278_LoRaEntryTx(module, length, timeout)) {
 1366              		.loc 1 298 2 is_stmt 1 view .LVU326
 1367              		.loc 1 298 6 is_stmt 0 view .LVU327
 1368 000a 1A46     		mov	r2, r3
 1369              	.LVL148:
 1370              		.loc 1 298 6 view .LVU328
 1371 000c 2146     		mov	r1, r4
 1372              	.LVL149:
 1373              		.loc 1 298 6 view .LVU329
 1374 000e FFF7FEFF 		bl	SX1278_LoRaEntryTx
 1375              	.LVL150:
 1376              		.loc 1 298 5 view .LVU330
 1377 0012 00B9     		cbnz	r0, .L69
 1378              	.L66:
 299:FML/Src/SX1278.c **** 		return SX1278_LoRaTxPacket(module, txBuf, length, timeout);
 300:FML/Src/SX1278.c **** 	}
 301:FML/Src/SX1278.c **** 	return 0;
 302:FML/Src/SX1278.c **** }
 1379              		.loc 1 302 1 view .LVU331
 1380 0014 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1381              	.LVL151:
 1382              	.L69:
 299:FML/Src/SX1278.c **** 		return SX1278_LoRaTxPacket(module, txBuf, length, timeout);
 1383              		.loc 1 299 3 is_stmt 1 view .LVU332
 299:FML/Src/SX1278.c **** 		return SX1278_LoRaTxPacket(module, txBuf, length, timeout);
 1384              		.loc 1 299 10 is_stmt 0 view .LVU333
 1385 0016 2B46     		mov	r3, r5
 1386 0018 2246     		mov	r2, r4
 1387 001a 3946     		mov	r1, r7
 1388 001c 3046     		mov	r0, r6
 1389 001e FFF7FEFF 		bl	SX1278_LoRaTxPacket
 1390              	.LVL152:
 1391 0022 F7E7     		b	.L66
 1392              		.cfi_endproc
 1393              	.LFE302:
 1395              		.section	.text.SX1278_receive,"ax",%progbits
 1396              		.align	1
 1397              		.global	SX1278_receive
 1398              		.syntax unified
 1399              		.thumb
 1400              		.thumb_func
 1402              	SX1278_receive:
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 33


 1403              	.LVL153:
 1404              	.LFB303:
 303:FML/Src/SX1278.c **** 
 304:FML/Src/SX1278.c **** int SX1278_receive(SX1278_t *module, uint8_t length, uint32_t timeout) {
 1405              		.loc 1 304 72 is_stmt 1 view -0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 0
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409              		.loc 1 304 72 is_stmt 0 view .LVU335
 1410 0000 08B5     		push	{r3, lr}
 1411              	.LCFI20:
 1412              		.cfi_def_cfa_offset 8
 1413              		.cfi_offset 3, -8
 1414              		.cfi_offset 14, -4
 305:FML/Src/SX1278.c **** 	return SX1278_LoRaEntryRx(module, length, timeout);
 1415              		.loc 1 305 2 is_stmt 1 view .LVU336
 1416              		.loc 1 305 9 is_stmt 0 view .LVU337
 1417 0002 FFF7FEFF 		bl	SX1278_LoRaEntryRx
 1418              	.LVL154:
 306:FML/Src/SX1278.c **** }
 1419              		.loc 1 306 1 view .LVU338
 1420 0006 08BD     		pop	{r3, pc}
 1421              		.cfi_endproc
 1422              	.LFE303:
 1424              		.section	.rodata.LORA_Send.str1.4,"aMS",%progbits,1
 1425              		.align	2
 1426              	.LC1:
 1427 0000 6C6F7261 		.ascii	"lora %d transmit success\015\012\000"
 1427      20256420 
 1427      7472616E 
 1427      736D6974 
 1427      20737563 
 1428              		.section	.text.LORA_Send,"ax",%progbits
 1429              		.align	1
 1430              		.global	LORA_Send
 1431              		.syntax unified
 1432              		.thumb
 1433              		.thumb_func
 1435              	LORA_Send:
 1436              	.LVL155:
 1437              	.LFB308:
 307:FML/Src/SX1278.c **** 
 308:FML/Src/SX1278.c **** uint8_t SX1278_available(SX1278_t *module) {
 309:FML/Src/SX1278.c **** 	return SX1278_LoRaRxPacket(module);
 310:FML/Src/SX1278.c **** }
 311:FML/Src/SX1278.c **** 
 312:FML/Src/SX1278.c **** uint8_t SX1278_read(SX1278_t *module, uint8_t *rxBuf, uint8_t length) {
 313:FML/Src/SX1278.c **** 	if (length != module->readBytes)
 314:FML/Src/SX1278.c **** 		length = module->readBytes;
 315:FML/Src/SX1278.c **** 	memcpy(rxBuf, module->rxBuffer, length);
 316:FML/Src/SX1278.c **** 	rxBuf[length] = '\0';
 317:FML/Src/SX1278.c **** 	module->readBytes = 0;
 318:FML/Src/SX1278.c **** 	return length;
 319:FML/Src/SX1278.c **** }
 320:FML/Src/SX1278.c **** 
 321:FML/Src/SX1278.c **** uint8_t SX1278_RSSI_LoRa(SX1278_t *module) {
 322:FML/Src/SX1278.c **** 	uint32_t temp = 10;
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 34


 323:FML/Src/SX1278.c **** 	temp = SX1278_SPIRead(module, LR_RegRssiValue); //Read RegRssiValue, Rssi value
 324:FML/Src/SX1278.c **** 	temp = temp + 127 - 137; //127:Max RSSI, 137:RSSI offset
 325:FML/Src/SX1278.c **** 	return (uint8_t) temp;
 326:FML/Src/SX1278.c **** }
 327:FML/Src/SX1278.c **** 
 328:FML/Src/SX1278.c **** uint8_t SX1278_RSSI(SX1278_t *module) {
 329:FML/Src/SX1278.c **** 	uint8_t temp = 0xff;
 330:FML/Src/SX1278.c **** 	temp = SX1278_SPIRead(module, RegRssiValue);
 331:FML/Src/SX1278.c **** 	temp = 127 - (temp >> 1);	//127:Max RSSI
 332:FML/Src/SX1278.c **** 	return temp;
 333:FML/Src/SX1278.c **** }
 334:FML/Src/SX1278.c **** 
 335:FML/Src/SX1278.c **** /**
 336:FML/Src/SX1278.c ****  * @brief 
 337:FML/Src/SX1278.c ****  * 
 338:FML/Src/SX1278.c ****  * @param fd 
 339:FML/Src/SX1278.c ****  * @param tx_buff 
 340:FML/Src/SX1278.c ****  * @param expect_reply 
 341:FML/Src/SX1278.c ****  * @param timeout 
 342:FML/Src/SX1278.c ****  */
 343:FML/Src/SX1278.c **** void LORA_Send(char fd,char *tx_buff,uint32_t timeout)
 344:FML/Src/SX1278.c **** {
 1438              		.loc 1 344 1 is_stmt 1 view -0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 0
 1441              		@ frame_needed = 0, uses_anonymous_args = 0
 1442              		.loc 1 344 1 is_stmt 0 view .LVU340
 1443 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1444              	.LCFI21:
 1445              		.cfi_def_cfa_offset 24
 1446              		.cfi_offset 4, -24
 1447              		.cfi_offset 5, -20
 1448              		.cfi_offset 6, -16
 1449              		.cfi_offset 7, -12
 1450              		.cfi_offset 8, -8
 1451              		.cfi_offset 14, -4
 1452 0004 0746     		mov	r7, r0
 1453 0006 0D46     		mov	r5, r1
 1454 0008 9046     		mov	r8, r2
 345:FML/Src/SX1278.c ****     uint8_t *tx_data,len=0;
 1455              		.loc 1 345 5 is_stmt 1 view .LVU341
 1456              	.LVL156:
 346:FML/Src/SX1278.c ****     len = strlen(tx_buff);
 1457              		.loc 1 346 5 view .LVU342
 1458              		.loc 1 346 11 is_stmt 0 view .LVU343
 1459 000a 0846     		mov	r0, r1
 1460              	.LVL157:
 1461              		.loc 1 346 11 view .LVU344
 1462 000c FFF7FEFF 		bl	strlen
 1463              	.LVL158:
 1464              		.loc 1 346 9 view .LVU345
 1465 0010 C4B2     		uxtb	r4, r0
 1466              	.LVL159:
 347:FML/Src/SX1278.c **** 
 348:FML/Src/SX1278.c ****     tx_data = (char *)malloc((len)*sizeof(uint8_t));
 1467              		.loc 1 348 5 is_stmt 1 view .LVU346
 1468              		.loc 1 348 23 is_stmt 0 view .LVU347
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 35


 1469 0012 2046     		mov	r0, r4
 1470 0014 FFF7FEFF 		bl	malloc
 1471              	.LVL160:
 1472 0018 0646     		mov	r6, r0
 1473              	.LVL161:
 349:FML/Src/SX1278.c ****     memcpy(tx_data,tx_buff,len);
 1474              		.loc 1 349 5 is_stmt 1 view .LVU348
 1475 001a 2246     		mov	r2, r4
 1476 001c 2946     		mov	r1, r5
 1477 001e FFF7FEFF 		bl	memcpy
 1478              	.LVL162:
 350:FML/Src/SX1278.c **** 	
 351:FML/Src/SX1278.c **** 
 352:FML/Src/SX1278.c ****     if(SX1278_transmit(&Lora_dev[fd],tx_data,len,timeout))
 1479              		.loc 1 352 5 view .LVU349
 1480              		.loc 1 352 8 is_stmt 0 view .LVU350
 1481 0022 0E4D     		ldr	r5, .L76
 1482              	.LVL163:
 1483              		.loc 1 352 8 view .LVU351
 1484 0024 4FF48C73 		mov	r3, #280
 1485 0028 03FB0755 		mla	r5, r3, r7, r5
 1486 002c 4346     		mov	r3, r8
 1487 002e 2246     		mov	r2, r4
 1488 0030 3146     		mov	r1, r6
 1489 0032 2846     		mov	r0, r5
 1490 0034 FFF7FEFF 		bl	SX1278_transmit
 1491              	.LVL164:
 1492              		.loc 1 352 7 view .LVU352
 1493 0038 48B9     		cbnz	r0, .L75
 1494              	.L73:
 353:FML/Src/SX1278.c **** 		shellPrint(&shell,"lora %d transmit success\r\n",fd);
 354:FML/Src/SX1278.c ****     free(tx_data);
 1495              		.loc 1 354 5 is_stmt 1 view .LVU353
 1496 003a 3046     		mov	r0, r6
 1497 003c FFF7FEFF 		bl	free
 1498              	.LVL165:
 355:FML/Src/SX1278.c ****     tx_data = NULL;
 1499              		.loc 1 355 5 view .LVU354
 356:FML/Src/SX1278.c ****     SX1278_receive(&Lora_dev[fd],100,100);
 1500              		.loc 1 356 5 view .LVU355
 1501 0040 6422     		movs	r2, #100
 1502 0042 1146     		mov	r1, r2
 1503 0044 2846     		mov	r0, r5
 1504 0046 FFF7FEFF 		bl	SX1278_receive
 1505              	.LVL166:
 357:FML/Src/SX1278.c **** }
 1506              		.loc 1 357 1 is_stmt 0 view .LVU356
 1507 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1508              	.LVL167:
 1509              	.L75:
 353:FML/Src/SX1278.c ****     free(tx_data);
 1510              		.loc 1 353 3 is_stmt 1 view .LVU357
 1511 004e 3A46     		mov	r2, r7
 1512 0050 0349     		ldr	r1, .L76+4
 1513 0052 0448     		ldr	r0, .L76+8
 1514 0054 FFF7FEFF 		bl	shellPrint
 1515              	.LVL168:
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 36


 1516 0058 EFE7     		b	.L73
 1517              	.L77:
 1518 005a 00BF     		.align	2
 1519              	.L76:
 1520 005c 00000000 		.word	.LANCHOR5
 1521 0060 00000000 		.word	.LC1
 1522 0064 00000000 		.word	shell
 1523              		.cfi_endproc
 1524              	.LFE308:
 1526              		.section	.text.SX1278_available,"ax",%progbits
 1527              		.align	1
 1528              		.global	SX1278_available
 1529              		.syntax unified
 1530              		.thumb
 1531              		.thumb_func
 1533              	SX1278_available:
 1534              	.LVL169:
 1535              	.LFB304:
 308:FML/Src/SX1278.c **** 	return SX1278_LoRaRxPacket(module);
 1536              		.loc 1 308 44 view -0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 0
 1539              		@ frame_needed = 0, uses_anonymous_args = 0
 308:FML/Src/SX1278.c **** 	return SX1278_LoRaRxPacket(module);
 1540              		.loc 1 308 44 is_stmt 0 view .LVU359
 1541 0000 08B5     		push	{r3, lr}
 1542              	.LCFI22:
 1543              		.cfi_def_cfa_offset 8
 1544              		.cfi_offset 3, -8
 1545              		.cfi_offset 14, -4
 309:FML/Src/SX1278.c **** }
 1546              		.loc 1 309 2 is_stmt 1 view .LVU360
 309:FML/Src/SX1278.c **** }
 1547              		.loc 1 309 9 is_stmt 0 view .LVU361
 1548 0002 FFF7FEFF 		bl	SX1278_LoRaRxPacket
 1549              	.LVL170:
 310:FML/Src/SX1278.c **** 
 1550              		.loc 1 310 1 view .LVU362
 1551 0006 08BD     		pop	{r3, pc}
 1552              		.cfi_endproc
 1553              	.LFE304:
 1555              		.section	.text.SX1278_read,"ax",%progbits
 1556              		.align	1
 1557              		.global	SX1278_read
 1558              		.syntax unified
 1559              		.thumb
 1560              		.thumb_func
 1562              	SX1278_read:
 1563              	.LVL171:
 1564              	.LFB305:
 312:FML/Src/SX1278.c **** 	if (length != module->readBytes)
 1565              		.loc 1 312 71 is_stmt 1 view -0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 0
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 312:FML/Src/SX1278.c **** 	if (length != module->readBytes)
 1569              		.loc 1 312 71 is_stmt 0 view .LVU364
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 37


 1570 0000 70B5     		push	{r4, r5, r6, lr}
 1571              	.LCFI23:
 1572              		.cfi_def_cfa_offset 16
 1573              		.cfi_offset 4, -16
 1574              		.cfi_offset 5, -12
 1575              		.cfi_offset 6, -8
 1576              		.cfi_offset 14, -4
 1577 0002 0446     		mov	r4, r0
 1578 0004 0E46     		mov	r6, r1
 313:FML/Src/SX1278.c **** 		length = module->readBytes;
 1579              		.loc 1 313 2 is_stmt 1 view .LVU365
 313:FML/Src/SX1278.c **** 		length = module->readBytes;
 1580              		.loc 1 313 22 is_stmt 0 view .LVU366
 1581 0006 90F81751 		ldrb	r5, [r0, #279]	@ zero_extendqisi2
 313:FML/Src/SX1278.c **** 		length = module->readBytes;
 1582              		.loc 1 313 5 view .LVU367
 1583 000a 9542     		cmp	r5, r2
 1584 000c 0BD0     		beq	.L83
 1585              	.L81:
 1586              	.LVL172:
 315:FML/Src/SX1278.c **** 	rxBuf[length] = '\0';
 1587              		.loc 1 315 2 is_stmt 1 view .LVU368
 1588 000e 2A46     		mov	r2, r5
 1589 0010 04F11701 		add	r1, r4, #23
 1590              	.LVL173:
 315:FML/Src/SX1278.c **** 	rxBuf[length] = '\0';
 1591              		.loc 1 315 2 is_stmt 0 view .LVU369
 1592 0014 3046     		mov	r0, r6
 1593              	.LVL174:
 315:FML/Src/SX1278.c **** 	rxBuf[length] = '\0';
 1594              		.loc 1 315 2 view .LVU370
 1595 0016 FFF7FEFF 		bl	memcpy
 1596              	.LVL175:
 316:FML/Src/SX1278.c **** 	module->readBytes = 0;
 1597              		.loc 1 316 2 is_stmt 1 view .LVU371
 316:FML/Src/SX1278.c **** 	module->readBytes = 0;
 1598              		.loc 1 316 16 is_stmt 0 view .LVU372
 1599 001a 0023     		movs	r3, #0
 1600 001c 7355     		strb	r3, [r6, r5]
 317:FML/Src/SX1278.c **** 	return length;
 1601              		.loc 1 317 2 is_stmt 1 view .LVU373
 317:FML/Src/SX1278.c **** 	return length;
 1602              		.loc 1 317 20 is_stmt 0 view .LVU374
 1603 001e 84F81731 		strb	r3, [r4, #279]
 318:FML/Src/SX1278.c **** }
 1604              		.loc 1 318 2 is_stmt 1 view .LVU375
 319:FML/Src/SX1278.c **** 
 1605              		.loc 1 319 1 is_stmt 0 view .LVU376
 1606 0022 2846     		mov	r0, r5
 1607 0024 70BD     		pop	{r4, r5, r6, pc}
 1608              	.LVL176:
 1609              	.L83:
 313:FML/Src/SX1278.c **** 		length = module->readBytes;
 1610              		.loc 1 313 5 view .LVU377
 1611 0026 1546     		mov	r5, r2
 1612 0028 F1E7     		b	.L81
 1613              		.cfi_endproc
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 38


 1614              	.LFE305:
 1616              		.section	.text.SX1278_RSSI_LoRa,"ax",%progbits
 1617              		.align	1
 1618              		.global	SX1278_RSSI_LoRa
 1619              		.syntax unified
 1620              		.thumb
 1621              		.thumb_func
 1623              	SX1278_RSSI_LoRa:
 1624              	.LVL177:
 1625              	.LFB306:
 321:FML/Src/SX1278.c **** 	uint32_t temp = 10;
 1626              		.loc 1 321 44 is_stmt 1 view -0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 0
 1629              		@ frame_needed = 0, uses_anonymous_args = 0
 321:FML/Src/SX1278.c **** 	uint32_t temp = 10;
 1630              		.loc 1 321 44 is_stmt 0 view .LVU379
 1631 0000 08B5     		push	{r3, lr}
 1632              	.LCFI24:
 1633              		.cfi_def_cfa_offset 8
 1634              		.cfi_offset 3, -8
 1635              		.cfi_offset 14, -4
 322:FML/Src/SX1278.c **** 	temp = SX1278_SPIRead(module, LR_RegRssiValue); //Read RegRssiValue, Rssi value
 1636              		.loc 1 322 2 is_stmt 1 view .LVU380
 1637              	.LVL178:
 323:FML/Src/SX1278.c **** 	temp = temp + 127 - 137; //127:Max RSSI, 137:RSSI offset
 1638              		.loc 1 323 2 view .LVU381
 323:FML/Src/SX1278.c **** 	temp = temp + 127 - 137; //127:Max RSSI, 137:RSSI offset
 1639              		.loc 1 323 9 is_stmt 0 view .LVU382
 1640 0002 1B21     		movs	r1, #27
 1641 0004 FFF7FEFF 		bl	SX1278_SPIRead
 1642              	.LVL179:
 324:FML/Src/SX1278.c **** 	return (uint8_t) temp;
 1643              		.loc 1 324 2 is_stmt 1 view .LVU383
 325:FML/Src/SX1278.c **** }
 1644              		.loc 1 325 2 view .LVU384
 325:FML/Src/SX1278.c **** }
 1645              		.loc 1 325 9 is_stmt 0 view .LVU385
 1646 0008 0A38     		subs	r0, r0, #10
 1647              	.LVL180:
 326:FML/Src/SX1278.c **** 
 1648              		.loc 1 326 1 view .LVU386
 1649 000a C0B2     		uxtb	r0, r0
 1650 000c 08BD     		pop	{r3, pc}
 1651              		.cfi_endproc
 1652              	.LFE306:
 1654              		.section	.text.SX1278_RSSI,"ax",%progbits
 1655              		.align	1
 1656              		.global	SX1278_RSSI
 1657              		.syntax unified
 1658              		.thumb
 1659              		.thumb_func
 1661              	SX1278_RSSI:
 1662              	.LVL181:
 1663              	.LFB307:
 328:FML/Src/SX1278.c **** 	uint8_t temp = 0xff;
 1664              		.loc 1 328 39 is_stmt 1 view -0
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 39


 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 0
 1667              		@ frame_needed = 0, uses_anonymous_args = 0
 328:FML/Src/SX1278.c **** 	uint8_t temp = 0xff;
 1668              		.loc 1 328 39 is_stmt 0 view .LVU388
 1669 0000 08B5     		push	{r3, lr}
 1670              	.LCFI25:
 1671              		.cfi_def_cfa_offset 8
 1672              		.cfi_offset 3, -8
 1673              		.cfi_offset 14, -4
 329:FML/Src/SX1278.c **** 	temp = SX1278_SPIRead(module, RegRssiValue);
 1674              		.loc 1 329 2 is_stmt 1 view .LVU389
 1675              	.LVL182:
 330:FML/Src/SX1278.c **** 	temp = 127 - (temp >> 1);	//127:Max RSSI
 1676              		.loc 1 330 2 view .LVU390
 330:FML/Src/SX1278.c **** 	temp = 127 - (temp >> 1);	//127:Max RSSI
 1677              		.loc 1 330 9 is_stmt 0 view .LVU391
 1678 0002 1121     		movs	r1, #17
 1679 0004 FFF7FEFF 		bl	SX1278_SPIRead
 1680              	.LVL183:
 331:FML/Src/SX1278.c **** 	return temp;
 1681              		.loc 1 331 2 is_stmt 1 view .LVU392
 331:FML/Src/SX1278.c **** 	return temp;
 1682              		.loc 1 331 13 is_stmt 0 view .LVU393
 1683 0008 C0F34700 		ubfx	r0, r0, #1, #8
 1684              	.LVL184:
 331:FML/Src/SX1278.c **** 	return temp;
 1685              		.loc 1 331 7 view .LVU394
 1686 000c C0F17F00 		rsb	r0, r0, #127
 1687              	.LVL185:
 332:FML/Src/SX1278.c **** }
 1688              		.loc 1 332 2 is_stmt 1 view .LVU395
 333:FML/Src/SX1278.c **** 
 1689              		.loc 1 333 1 is_stmt 0 view .LVU396
 1690 0010 C0B2     		uxtb	r0, r0
 333:FML/Src/SX1278.c **** 
 1691              		.loc 1 333 1 view .LVU397
 1692 0012 08BD     		pop	{r3, pc}
 1693              		.cfi_endproc
 1694              	.LFE307:
 1696              		.global	shellCommandlora_send
 1697              		.global	shellDesclora_send
 1698              		.global	shellCmdlora_send
 1699              		.global	Lora_dev
 1700              		.section	.data.Lora_dev,"aw"
 1701              		.align	3
 1702              		.set	.LANCHOR5,. + 0
 1705              	Lora_dev:
 1706 0000 00000000 		.word	lora_dev_hw
 1707 0004 00000000 		.space	4
 1708 0008 40170C1A 		.word	437000000
 1709 000c 00000000 		.word	0
 1710 0010 14       		.byte	20
 1711 0011 05       		.byte	5
 1712 0012 02       		.byte	2
 1713 0013 01       		.byte	1
 1714 0014 00       		.byte	0
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 40


 1715 0015 00       		.byte	0
 1716 0016 00000000 		.space	257
 1716      00000000 
 1716      00000000 
 1716      00000000 
 1716      00000000 
 1717 0117 00       		.byte	0
 1718 0118 24000000 		.word	lora_dev_hw+36
 1719 011c 00000000 		.space	4
 1720 0120 40170C1A 		.word	437000000
 1721 0124 00000000 		.word	0
 1722 0128 14       		.byte	20
 1723 0129 05       		.byte	5
 1724 012a 02       		.byte	2
 1725 012b 01       		.byte	1
 1726 012c 00       		.byte	0
 1727 012d 00       		.byte	0
 1728 012e 00000000 		.space	257
 1728      00000000 
 1728      00000000 
 1728      00000000 
 1728      00000000 
 1729 022f 00       		.byte	0
 1730              		.section	.rodata.SX1278_CRC_Sum,"a"
 1731              		.align	2
 1732              		.set	.LANCHOR4,. + 0
 1735              	SX1278_CRC_Sum:
 1736 0000 0100     		.ascii	"\001\000"
 1737              		.section	.rodata.SX1278_CodingRate,"a"
 1738              		.align	2
 1739              		.set	.LANCHOR3,. + 0
 1742              	SX1278_CodingRate:
 1743 0000 01020304 		.ascii	"\001\002\003\004"
 1744              		.section	.rodata.SX1278_LoRaBandwidth,"a"
 1745              		.align	2
 1746              		.set	.LANCHOR2,. + 0
 1749              	SX1278_LoRaBandwidth:
 1750 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011"
 1750      04050607 
 1750      0809
 1751              		.section	.rodata.SX1278_Power,"a"
 1752              		.align	2
 1753              		.set	.LANCHOR0,. + 0
 1756              	SX1278_Power:
 1757 0000 FFFCF9F6 		.ascii	"\377\374\371\366"
 1758              		.section	.rodata.SX1278_SpreadFactor,"a"
 1759              		.align	2
 1760              		.set	.LANCHOR1,. + 0
 1763              	SX1278_SpreadFactor:
 1764 0000 06070809 		.ascii	"\006\007\010\011\012\013\014"
 1764      0A0B0C
 1765              		.section	.rodata.shellCmdlora_send,"a"
 1766              		.align	2
 1769              	shellCmdlora_send:
 1770 0000 6C6F7261 		.ascii	"lora_send\000"
 1770      5F73656E 
 1770      6400
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 41


 1771              		.section	.rodata.shellDesclora_send,"a"
 1772              		.align	2
 1775              	shellDesclora_send:
 1776 0000 65633278 		.ascii	"ec2x test\000"
 1776      20746573 
 1776      7400
 1777              		.section	shellCommand,"a"
 1780              	shellCommandlora_send:
 1781 0000 00210000 		.4byte	8448
 1782 0004 00000000 		.4byte	shellCmdlora_send
 1783 0008 00000000 		.4byte	LORA_Send
 1784 000c 00000000 		.4byte	shellDesclora_send
 1785              		.text
 1786              	.Letext0:
 1787              		.file 2 "e:\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\
 1788              		.file 3 "e:\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\
 1789              		.file 4 "HAL/Inc/SX1278_hw.h"
 1790              		.file 5 "FML/Inc/SX1278.h"
 1791              		.file 6 "ThirdParty/Letter-shell/Inc/shell.h"
 1792              		.file 7 "ThirdParty/Letter-shell/Inc/shell_port.h"
 1793              		.file 8 "<built-in>"
 1794              		.file 9 "e:\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 SX1278.c
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:20     .text.SX1278_SPIRead:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:26     .text.SX1278_SPIRead:00000000 SX1278_SPIRead
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:71     .text.SX1278_SPIWrite:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:77     .text.SX1278_SPIWrite:00000000 SX1278_SPIWrite
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:126    .text.SX1278_SPIBurstRead:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:132    .text.SX1278_SPIBurstRead:00000000 SX1278_SPIBurstRead
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:221    .text.SX1278_SPIBurstWrite:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:227    .text.SX1278_SPIBurstWrite:00000000 SX1278_SPIBurstWrite
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:314    .text.SX1278_standby:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:320    .text.SX1278_standby:00000000 SX1278_standby
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:350    .text.SX1278_sleep:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:356    .text.SX1278_sleep:00000000 SX1278_sleep
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:386    .text.SX1278_entryLoRa:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:392    .text.SX1278_entryLoRa:00000000 SX1278_entryLoRa
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:417    .text.SX1278_config:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:423    .text.SX1278_config:00000000 SX1278_config
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:712    .text.SX1278_config:00000174 $d
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:722    .text.SX1278_clearLoRaIrq:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:728    .text.SX1278_clearLoRaIrq:00000000 SX1278_clearLoRaIrq
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:752    .text.SX1278_LoRaEntryRx:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:758    .text.SX1278_LoRaEntryRx:00000000 SX1278_LoRaEntryRx
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:893    .rodata.SX1278_LoRaRxPacket.str1.4:00000000 $d
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:897    .text.SX1278_LoRaRxPacket:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:903    .text.SX1278_LoRaRxPacket:00000000 SX1278_LoRaRxPacket
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1020   .text.SX1278_LoRaRxPacket:00000084 $d
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1028   .text.SX1278_LoRaEntryTx:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1034   .text.SX1278_LoRaEntryTx:00000000 SX1278_LoRaEntryTx
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1158   .text.SX1278_LoRaTxPacket:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1164   .text.SX1278_LoRaTxPacket:00000000 SX1278_LoRaTxPacket
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1270   .text.SX1278_init:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1276   .text.SX1278_init:00000000 SX1278_init
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1339   .text.SX1278_transmit:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1345   .text.SX1278_transmit:00000000 SX1278_transmit
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1396   .text.SX1278_receive:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1402   .text.SX1278_receive:00000000 SX1278_receive
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1425   .rodata.LORA_Send.str1.4:00000000 $d
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1429   .text.LORA_Send:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1435   .text.LORA_Send:00000000 LORA_Send
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1520   .text.LORA_Send:0000005c $d
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1527   .text.SX1278_available:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1533   .text.SX1278_available:00000000 SX1278_available
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1556   .text.SX1278_read:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1562   .text.SX1278_read:00000000 SX1278_read
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1617   .text.SX1278_RSSI_LoRa:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1623   .text.SX1278_RSSI_LoRa:00000000 SX1278_RSSI_LoRa
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1655   .text.SX1278_RSSI:00000000 $t
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1661   .text.SX1278_RSSI:00000000 SX1278_RSSI
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1780   shellCommand:00000000 shellCommandlora_send
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1775   .rodata.shellDesclora_send:00000000 shellDesclora_send
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1769   .rodata.shellCmdlora_send:00000000 shellCmdlora_send
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1705   .data.Lora_dev:00000000 Lora_dev
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1701   .data.Lora_dev:00000000 $d
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1731   .rodata.SX1278_CRC_Sum:00000000 $d
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1735   .rodata.SX1278_CRC_Sum:00000000 SX1278_CRC_Sum
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1738   .rodata.SX1278_CodingRate:00000000 $d
ARM GAS  C:\Users\CL\AppData\Local\Temp\ccnDssxr.s 			page 43


C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1742   .rodata.SX1278_CodingRate:00000000 SX1278_CodingRate
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1745   .rodata.SX1278_LoRaBandwidth:00000000 $d
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1749   .rodata.SX1278_LoRaBandwidth:00000000 SX1278_LoRaBandwidth
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1752   .rodata.SX1278_Power:00000000 $d
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1756   .rodata.SX1278_Power:00000000 SX1278_Power
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1759   .rodata.SX1278_SpreadFactor:00000000 $d
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1763   .rodata.SX1278_SpreadFactor:00000000 SX1278_SpreadFactor
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1766   .rodata.shellCmdlora_send:00000000 $d
C:\Users\CL\AppData\Local\Temp\ccnDssxr.s:1772   .rodata.shellDesclora_send:00000000 $d

UNDEFINED SYMBOLS
SX1278_hw_SPICommand
SX1278_hw_SPIReadByte
SX1278_hw_SetNSS
__aeabi_uldivmod
SX1278_hw_DelayMs
SX1278_hw_Reset
SX1278_hw_GetDIO0
shellPrint
memset
shell
SX1278_hw_init
strlen
malloc
memcpy
free
lora_dev_hw
